
Interrupts_Timers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000024a  00800100  00002a08  00002a9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002a08  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008a  0080034a  0080034a  00002ce6  2**0
                  ALLOC
  3 .stab         00003348  00000000  00000000  00002ce8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000569f  00000000  00000000  00006030  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000005c  00000000  00000000  0000b6cf  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000d8  00000000  00000000  0000b72b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000b47  00000000  00000000  0000b803  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000576  00000000  00000000  0000c34a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000072d  00000000  00000000  0000c8c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000002bc  00000000  00000000  0000cff0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003f8  00000000  00000000  0000d2ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000006cf  00000000  00000000  0000d6a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000098  00000000  00000000  0000dd73  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
       4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
       8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
       c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      2c:	0c 94 91 0b 	jmp	0x1722	; 0x1722 <__vector_11>
      30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      34:	0c 94 8b 01 	jmp	0x316	; 0x316 <__vector_13>
      38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      3c:	0c 94 b0 01 	jmp	0x360	; 0x360 <__vector_15>
      40:	0c 94 5d 04 	jmp	0x8ba	; 0x8ba <__vector_16>
      44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      50:	0c 94 24 09 	jmp	0x1248	; 0x1248 <__vector_20>
      54:	0c 94 37 0b 	jmp	0x166e	; 0x166e <__vector_21>
      58:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      5c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      60:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      64:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      68:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      6c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      70:	0c 94 4f 09 	jmp	0x129e	; 0x129e <__vector_28>
      74:	0c 94 60 0b 	jmp	0x16c0	; 0x16c0 <__vector_29>
      78:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      7c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      80:	0c 94 05 01 	jmp	0x20a	; 0x20a <__vector_32>
      84:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      88:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>

0000008c <__trampolines_end>:
      8c:	63 64       	ori	r22, 0x43	; 67
      8e:	69 6e       	ori	r22, 0xE9	; 233
      90:	6f 70       	andi	r22, 0x0F	; 15
      92:	73 75       	andi	r23, 0x53	; 83
      94:	78 58       	subi	r23, 0x88	; 136
      96:	5b 00       	.word	0x005b	; ????

00000098 <__ctors_end>:
      98:	11 24       	eor	r1, r1
      9a:	1f be       	out	0x3f, r1	; 63
      9c:	cf ef       	ldi	r28, 0xFF	; 255
      9e:	d0 e4       	ldi	r29, 0x40	; 64
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
      a4:	13 e0       	ldi	r17, 0x03	; 3
      a6:	a0 e0       	ldi	r26, 0x00	; 0
      a8:	b1 e0       	ldi	r27, 0x01	; 1
      aa:	e8 e0       	ldi	r30, 0x08	; 8
      ac:	fa e2       	ldi	r31, 0x2A	; 42
      ae:	00 e0       	ldi	r16, 0x00	; 0
      b0:	0b bf       	out	0x3b, r16	; 59
      b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
      b4:	07 90       	elpm	r0, Z+
      b6:	0d 92       	st	X+, r0
      b8:	aa 34       	cpi	r26, 0x4A	; 74
      ba:	b1 07       	cpc	r27, r17
      bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
      be:	23 e0       	ldi	r18, 0x03	; 3
      c0:	aa e4       	ldi	r26, 0x4A	; 74
      c2:	b3 e0       	ldi	r27, 0x03	; 3
      c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
      c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
      c8:	a4 3d       	cpi	r26, 0xD4	; 212
      ca:	b2 07       	cpc	r27, r18
      cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
      ce:	0e 94 d5 01 	call	0x3aa	; 0x3aa <main>
      d2:	0c 94 02 15 	jmp	0x2a04	; 0x2a04 <_exit>

000000d6 <__bad_interrupt>:
      d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <init_LEDs>:

	

	// Clear all data direction ports
	// Configure data direction as output
	DDRA = (1<<PORTA7);
      da:	80 e8       	ldi	r24, 0x80	; 128
      dc:	81 b9       	out	0x01, r24	; 1
	DDRA |= DDRA | (1<<PORTA4);
      de:	81 b1       	in	r24, 0x01	; 1
      e0:	91 b1       	in	r25, 0x01	; 1
      e2:	89 2b       	or	r24, r25
      e4:	80 61       	ori	r24, 0x10	; 16
      e6:	81 b9       	out	0x01, r24	; 1
	DDRD = (1<<PIND5);
      e8:	80 e2       	ldi	r24, 0x20	; 32
      ea:	8a b9       	out	0x0a, r24	; 10
      ec:	08 95       	ret

000000ee <set_toggle>:
	//G_yellow_toggles = 0;
	
}


void set_toggle(char color, int ms) {
      ee:	1f 93       	push	r17
      f0:	cf 93       	push	r28
      f2:	df 93       	push	r29
      f4:	18 2f       	mov	r17, r24
      f6:	eb 01       	movw	r28, r22

		// check toggle ms is positive and multiple of 100
		if (ms<0) {
      f8:	77 ff       	sbrs	r23, 7
      fa:	07 c0       	rjmp	.+14     	; 0x10a <set_toggle+0x1c>
			printf("Cannot toggle negative ms.\n");
      fc:	8c e2       	ldi	r24, 0x2C	; 44
      fe:	91 e0       	ldi	r25, 0x01	; 1
				ICR1 = (uint32_t)((19531 / G_green_period) * 2);
				OCR1A   = (uint16_t) (ICR1 / 2);
				printf("Green to toggle at freq %dHz (period %d ms)\n", OCR1A ,G_green_period);	
			}
 		}
}
     100:	df 91       	pop	r29
     102:	cf 91       	pop	r28
     104:	1f 91       	pop	r17

void set_toggle(char color, int ms) {

		// check toggle ms is positive and multiple of 100
		if (ms<0) {
			printf("Cannot toggle negative ms.\n");
     106:	0c 94 7f 0e 	jmp	0x1cfe	; 0x1cfe <puts>
			return;
		}

		if (~((ms%100)==0)) {
			ms = ms - (ms%100);
     10a:	cb 01       	movw	r24, r22
     10c:	64 e6       	ldi	r22, 0x64	; 100
     10e:	70 e0       	ldi	r23, 0x00	; 0
     110:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <__divmodhi4>
     114:	c8 1b       	sub	r28, r24
     116:	d9 0b       	sbc	r29, r25
			printf("Converted to toggle period: %d.\n",ms);
     118:	df 93       	push	r29
     11a:	cf 93       	push	r28
     11c:	27 e4       	ldi	r18, 0x47	; 71
     11e:	31 e0       	ldi	r19, 0x01	; 1
     120:	3f 93       	push	r19
     122:	2f 93       	push	r18
     124:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <printf>
		}
		
		// For each color, if ms is 0, turn it off by changing data direction to input.
		// If it is >0, set data direction to output.
		if ((color=='R') || (color=='A')) {
     128:	0f 90       	pop	r0
     12a:	0f 90       	pop	r0
     12c:	0f 90       	pop	r0
     12e:	0f 90       	pop	r0
     130:	12 35       	cpi	r17, 0x52	; 82
     132:	19 f0       	breq	.+6      	; 0x13a <set_toggle+0x4c>
     134:	11 34       	cpi	r17, 0x41	; 65
     136:	09 f0       	breq	.+2      	; 0x13a <set_toggle+0x4c>
     138:	5e c0       	rjmp	.+188    	; 0x1f6 <set_toggle+0x108>
			if (ms==0)
     13a:	20 97       	sbiw	r28, 0x00	; 0
     13c:	11 f4       	brne	.+4      	; 0x142 <set_toggle+0x54>
				LED_OFF(RED);
     13e:	14 98       	cbi	0x02, 4	; 2
     140:	01 c0       	rjmp	.+2      	; 0x144 <set_toggle+0x56>
			else
				LED_ON(RED);
     142:	14 9a       	sbi	0x02, 4	; 2
			G_red_period = ms;
     144:	d0 93 2b 01 	sts	0x012B, r29
     148:	c0 93 2a 01 	sts	0x012A, r28
		}

		if ((color=='Y') || (color=='A')) {
     14c:	19 35       	cpi	r17, 0x59	; 89
     14e:	21 f4       	brne	.+8      	; 0x158 <set_toggle+0x6a>
			if (ms==0)
     150:	20 97       	sbiw	r28, 0x00	; 0
     152:	31 f4       	brne	.+12     	; 0x160 <set_toggle+0x72>
				LED_ON(YELLOW);
     154:	17 9a       	sbi	0x02, 7	; 2
     156:	05 c0       	rjmp	.+10     	; 0x162 <set_toggle+0x74>
			else
				LED_ON(RED);
			G_red_period = ms;
		}

		if ((color=='Y') || (color=='A')) {
     158:	11 34       	cpi	r17, 0x41	; 65
     15a:	09 f0       	breq	.+2      	; 0x15e <set_toggle+0x70>
     15c:	4f c0       	rjmp	.+158    	; 0x1fc <set_toggle+0x10e>
     15e:	f8 cf       	rjmp	.-16     	; 0x150 <set_toggle+0x62>
			if (ms==0)
				LED_ON(YELLOW);
			else
				LED_OFF(YELLOW);
     160:	17 98       	cbi	0x02, 7	; 2
			G_yellow_period = ms;
     162:	d0 93 27 01 	sts	0x0127, r29
     166:	c0 93 26 01 	sts	0x0126, r28
		}

		if ((color=='G') || (color=='A')) {
     16a:	17 34       	cpi	r17, 0x47	; 71
     16c:	21 f4       	brne	.+8      	; 0x176 <set_toggle+0x88>
			if (ms==0)
     16e:	20 97       	sbiw	r28, 0x00	; 0
     170:	31 f4       	brne	.+12     	; 0x17e <set_toggle+0x90>
				LED_ON(GREEN);
     172:	5d 9a       	sbi	0x0b, 5	; 11
     174:	0b c0       	rjmp	.+22     	; 0x18c <set_toggle+0x9e>
			else
				LED_OFF(YELLOW);
			G_yellow_period = ms;
		}

		if ((color=='G') || (color=='A')) {
     176:	11 34       	cpi	r17, 0x41	; 65
     178:	09 f0       	breq	.+2      	; 0x17c <set_toggle+0x8e>
     17a:	43 c0       	rjmp	.+134    	; 0x202 <set_toggle+0x114>
     17c:	f8 cf       	rjmp	.-16     	; 0x16e <set_toggle+0x80>
			if (ms==0)
				LED_ON(GREEN);
			else
				LED_OFF(GREEN);
     17e:	5d 98       	cbi	0x0b, 5	; 11

			// green has a limit on its period.
			if ( ms > 4000) ms = 4000;
     180:	c1 3a       	cpi	r28, 0xA1	; 161
     182:	8f e0       	ldi	r24, 0x0F	; 15
     184:	d8 07       	cpc	r29, r24
     186:	14 f0       	brlt	.+4      	; 0x18c <set_toggle+0x9e>
     188:	c0 ea       	ldi	r28, 0xA0	; 160
     18a:	df e0       	ldi	r29, 0x0F	; 15
			G_green_period = ms;
     18c:	d0 93 29 01 	sts	0x0129, r29
     190:	c0 93 28 01 	sts	0x0128, r28
			
			// set the OCR1A (TOP) to get (approximately) the requested frequency.
			if ( ms > 0 ) {
     194:	1c 16       	cp	r1, r28
     196:	1d 06       	cpc	r1, r29
     198:	a4 f5       	brge	.+104    	; 0x202 <set_toggle+0x114>
				ICR1 = (uint32_t)((19531 / G_green_period) * 2);
     19a:	8b e4       	ldi	r24, 0x4B	; 75
     19c:	9c e4       	ldi	r25, 0x4C	; 76
     19e:	be 01       	movw	r22, r28
     1a0:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <__udivmodhi4>
     1a4:	66 0f       	add	r22, r22
     1a6:	77 1f       	adc	r23, r23
     1a8:	70 93 87 00 	sts	0x0087, r23
     1ac:	60 93 86 00 	sts	0x0086, r22
				OCR1A   = (uint16_t) (ICR1 / 2);
     1b0:	80 91 86 00 	lds	r24, 0x0086
     1b4:	90 91 87 00 	lds	r25, 0x0087
     1b8:	96 95       	lsr	r25
     1ba:	87 95       	ror	r24
     1bc:	90 93 89 00 	sts	0x0089, r25
     1c0:	80 93 88 00 	sts	0x0088, r24
				printf("Green to toggle at freq %dHz (period %d ms)\n", OCR1A ,G_green_period);	
     1c4:	80 91 88 00 	lds	r24, 0x0088
     1c8:	90 91 89 00 	lds	r25, 0x0089
     1cc:	20 91 29 01 	lds	r18, 0x0129
     1d0:	2f 93       	push	r18
     1d2:	20 91 28 01 	lds	r18, 0x0128
     1d6:	2f 93       	push	r18
     1d8:	9f 93       	push	r25
     1da:	8f 93       	push	r24
     1dc:	88 e6       	ldi	r24, 0x68	; 104
     1de:	91 e0       	ldi	r25, 0x01	; 1
     1e0:	9f 93       	push	r25
     1e2:	8f 93       	push	r24
     1e4:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <printf>
     1e8:	0f 90       	pop	r0
     1ea:	0f 90       	pop	r0
     1ec:	0f 90       	pop	r0
     1ee:	0f 90       	pop	r0
     1f0:	0f 90       	pop	r0
     1f2:	0f 90       	pop	r0
     1f4:	06 c0       	rjmp	.+12     	; 0x202 <set_toggle+0x114>
			else
				LED_ON(RED);
			G_red_period = ms;
		}

		if ((color=='Y') || (color=='A')) {
     1f6:	19 35       	cpi	r17, 0x59	; 89
     1f8:	09 f4       	brne	.+2      	; 0x1fc <set_toggle+0x10e>
     1fa:	aa cf       	rjmp	.-172    	; 0x150 <set_toggle+0x62>
			else
				LED_OFF(YELLOW);
			G_yellow_period = ms;
		}

		if ((color=='G') || (color=='A')) {
     1fc:	17 34       	cpi	r17, 0x47	; 71
     1fe:	09 f4       	brne	.+2      	; 0x202 <set_toggle+0x114>
     200:	b6 cf       	rjmp	.-148    	; 0x16e <set_toggle+0x80>
				ICR1 = (uint32_t)((19531 / G_green_period) * 2);
				OCR1A   = (uint16_t) (ICR1 / 2);
				printf("Green to toggle at freq %dHz (period %d ms)\n", OCR1A ,G_green_period);	
			}
 		}
}
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	1f 91       	pop	r17
     208:	08 95       	ret

0000020a <__vector_32>:

 
// INTERRUPT Names are defined in iom1284p.h

// INTERRUPT HANDLER for yellow LED
 ISR(TIMER3_COMPA_vect) {
     20a:	1f 92       	push	r1
     20c:	0f 92       	push	r0
     20e:	0f b6       	in	r0, 0x3f	; 63
     210:	0f 92       	push	r0
     212:	11 24       	eor	r1, r1
     214:	0b b6       	in	r0, 0x3b	; 59
     216:	0f 92       	push	r0
     218:	2f 93       	push	r18
     21a:	3f 93       	push	r19
     21c:	4f 93       	push	r20
     21e:	5f 93       	push	r21
     220:	6f 93       	push	r22
     222:	7f 93       	push	r23
     224:	8f 93       	push	r24
     226:	9f 93       	push	r25
     228:	af 93       	push	r26
     22a:	bf 93       	push	r27
     22c:	ef 93       	push	r30
     22e:	ff 93       	push	r31
	// This the Interrupt Service Routine for Toggling the yellow LED.
	// Each time the TCNT count is equal to the OCRxx register, this interrupt is enabled.
	// At creation of this file, it was initialized to interrupt every 100ms (10Hz).
	
	// Increment ticks. If it is time, toggle YELLOW and increment toggle counter.
	G_yellow_ticks++;
     230:	60 91 79 03 	lds	r22, 0x0379
     234:	70 91 7a 03 	lds	r23, 0x037A
     238:	80 91 7b 03 	lds	r24, 0x037B
     23c:	90 91 7c 03 	lds	r25, 0x037C
     240:	6f 5f       	subi	r22, 0xFF	; 255
     242:	7f 4f       	sbci	r23, 0xFF	; 255
     244:	8f 4f       	sbci	r24, 0xFF	; 255
     246:	9f 4f       	sbci	r25, 0xFF	; 255
     248:	60 93 79 03 	sts	0x0379, r22
     24c:	70 93 7a 03 	sts	0x037A, r23
     250:	80 93 7b 03 	sts	0x037B, r24
     254:	90 93 7c 03 	sts	0x037C, r25
	if ((G_yellow_ticks % G_yellow_period) == 0)
     258:	20 91 26 01 	lds	r18, 0x0126
     25c:	30 91 27 01 	lds	r19, 0x0127
     260:	40 e0       	ldi	r20, 0x00	; 0
     262:	50 e0       	ldi	r21, 0x00	; 0
     264:	0e 94 88 0c 	call	0x1910	; 0x1910 <__udivmodsi4>
     268:	67 2b       	or	r22, r23
     26a:	68 2b       	or	r22, r24
     26c:	69 2b       	or	r22, r25
     26e:	09 f0       	breq	.+2      	; 0x272 <__vector_32+0x68>
     270:	3f c0       	rjmp	.+126    	; 0x2f0 <__vector_32+0xe6>
	{
		//PORTA ^= (1<<PORTA7);
		LED_TOGGLE(YELLOW);
     272:	82 b1       	in	r24, 0x02	; 2
     274:	80 58       	subi	r24, 0x80	; 128
     276:	82 b9       	out	0x02, r24	; 2
		G_yellow_toggles++;
     278:	80 91 67 03 	lds	r24, 0x0367
     27c:	90 91 68 03 	lds	r25, 0x0368
     280:	a0 91 69 03 	lds	r26, 0x0369
     284:	b0 91 6a 03 	lds	r27, 0x036A
     288:	01 96       	adiw	r24, 0x01	; 1
     28a:	a1 1d       	adc	r26, r1
     28c:	b1 1d       	adc	r27, r1
     28e:	80 93 67 03 	sts	0x0367, r24
     292:	90 93 68 03 	sts	0x0368, r25
     296:	a0 93 69 03 	sts	0x0369, r26
     29a:	b0 93 6a 03 	sts	0x036A, r27
		
		for(k=0;k<51;k++)
     29e:	10 92 82 03 	sts	0x0382, r1
     2a2:	10 92 81 03 	sts	0x0381, r1
     2a6:	80 91 83 03 	lds	r24, 0x0383
     2aa:	90 91 84 03 	lds	r25, 0x0384
     2ae:	a0 91 85 03 	lds	r26, 0x0385
     2b2:	b0 91 86 03 	lds	r27, 0x0386
     2b6:	20 91 81 03 	lds	r18, 0x0381
     2ba:	30 91 82 03 	lds	r19, 0x0382
     2be:	23 33       	cpi	r18, 0x33	; 51
     2c0:	31 05       	cpc	r19, r1
     2c2:	74 f4       	brge	.+28     	; 0x2e0 <__vector_32+0xd6>
     2c4:	80 91 81 03 	lds	r24, 0x0381
     2c8:	90 91 82 03 	lds	r25, 0x0382
     2cc:	01 96       	adiw	r24, 0x01	; 1
     2ce:	90 93 82 03 	sts	0x0382, r25
     2d2:	80 93 81 03 	sts	0x0381, r24
     2d6:	80 e8       	ldi	r24, 0x80	; 128
     2d8:	9b e6       	ldi	r25, 0x6B	; 107
     2da:	a0 e0       	ldi	r26, 0x00	; 0
     2dc:	b0 e0       	ldi	r27, 0x00	; 0
     2de:	eb cf       	rjmp	.-42     	; 0x2b6 <__vector_32+0xac>
     2e0:	80 93 83 03 	sts	0x0383, r24
     2e4:	90 93 84 03 	sts	0x0384, r25
     2e8:	a0 93 85 03 	sts	0x0385, r26
     2ec:	b0 93 86 03 	sts	0x0386, r27
			WAIT_10MS
		}
	}
	

}
     2f0:	ff 91       	pop	r31
     2f2:	ef 91       	pop	r30
     2f4:	bf 91       	pop	r27
     2f6:	af 91       	pop	r26
     2f8:	9f 91       	pop	r25
     2fa:	8f 91       	pop	r24
     2fc:	7f 91       	pop	r23
     2fe:	6f 91       	pop	r22
     300:	5f 91       	pop	r21
     302:	4f 91       	pop	r20
     304:	3f 91       	pop	r19
     306:	2f 91       	pop	r18
     308:	0f 90       	pop	r0
     30a:	0b be       	out	0x3b, r0	; 59
     30c:	0f 90       	pop	r0
     30e:	0f be       	out	0x3f, r0	; 63
     310:	0f 90       	pop	r0
     312:	1f 90       	pop	r1
     314:	18 95       	reti

00000316 <__vector_13>:

// INTERRUPT HANDLER for green LED
 ISR(TIMER1_COMPA_vect) {
     316:	1f 92       	push	r1
     318:	0f 92       	push	r0
     31a:	0f b6       	in	r0, 0x3f	; 63
     31c:	0f 92       	push	r0
     31e:	11 24       	eor	r1, r1
     320:	8f 93       	push	r24
     322:	9f 93       	push	r25
     324:	af 93       	push	r26
     326:	bf 93       	push	r27

	// This the Interrupt Service Routine for tracking green toggles. The toggling is done in hardware.
	// Each time the TCNT count is equal to the OCRxx register, this interrupt is enabled.
	// This interrupts at the user-specified frequency for the green LED.
	
	G_green_toggles++;
     328:	80 91 6b 03 	lds	r24, 0x036B
     32c:	90 91 6c 03 	lds	r25, 0x036C
     330:	a0 91 6d 03 	lds	r26, 0x036D
     334:	b0 91 6e 03 	lds	r27, 0x036E
     338:	01 96       	adiw	r24, 0x01	; 1
     33a:	a1 1d       	adc	r26, r1
     33c:	b1 1d       	adc	r27, r1
     33e:	80 93 6b 03 	sts	0x036B, r24
     342:	90 93 6c 03 	sts	0x036C, r25
     346:	a0 93 6d 03 	sts	0x036D, r26
     34a:	b0 93 6e 03 	sts	0x036E, r27
	
	//for(m=0;m<11;m++)
	//{
		//WAIT_10MS
	//}
}
     34e:	bf 91       	pop	r27
     350:	af 91       	pop	r26
     352:	9f 91       	pop	r25
     354:	8f 91       	pop	r24
     356:	0f 90       	pop	r0
     358:	0f be       	out	0x3f, r0	; 63
     35a:	0f 90       	pop	r0
     35c:	1f 90       	pop	r1
     35e:	18 95       	reti

00000360 <__vector_15>:

//Overflow Interrupt Handler for Green led
ISR(TIMER1_OVF_vect)
{
     360:	1f 92       	push	r1
     362:	0f 92       	push	r0
     364:	0f b6       	in	r0, 0x3f	; 63
     366:	0f 92       	push	r0
     368:	11 24       	eor	r1, r1
     36a:	8f 93       	push	r24
     36c:	9f 93       	push	r25
     36e:	af 93       	push	r26
     370:	bf 93       	push	r27
	
	

	G_green_toggles++;
     372:	80 91 6b 03 	lds	r24, 0x036B
     376:	90 91 6c 03 	lds	r25, 0x036C
     37a:	a0 91 6d 03 	lds	r26, 0x036D
     37e:	b0 91 6e 03 	lds	r27, 0x036E
     382:	01 96       	adiw	r24, 0x01	; 1
     384:	a1 1d       	adc	r26, r1
     386:	b1 1d       	adc	r27, r1
     388:	80 93 6b 03 	sts	0x036B, r24
     38c:	90 93 6c 03 	sts	0x036C, r25
     390:	a0 93 6d 03 	sts	0x036D, r26
     394:	b0 93 6e 03 	sts	0x036E, r27
	//{
		//WAIT_10MS
	//}
	
	
}
     398:	bf 91       	pop	r27
     39a:	af 91       	pop	r26
     39c:	9f 91       	pop	r25
     39e:	8f 91       	pop	r24
     3a0:	0f 90       	pop	r0
     3a2:	0f be       	out	0x3f, r0	; 63
     3a4:	0f 90       	pop	r0
     3a6:	1f 90       	pop	r1
     3a8:	18 95       	reti

000003aa <main>:
	// Used to print to serial comm window
	char tempBuffer[32];
	int length = 0;
	
	// Initialization here.
	lcd_init_printf();	// required if we want to use printf() for LCD printing
     3aa:	0e 94 15 07 	call	0xe2a	; 0xe2a <lcd_init_printf>
	init_LEDs();
     3ae:	0e 94 6d 00 	call	0xda	; 0xda <init_LEDs>
	init_timers();
     3b2:	0e 94 cc 03 	call	0x798	; 0x798 <init_timers>
	init_menu();	// this is initialization of serial comm through USB
     3b6:	0e 94 14 02 	call	0x428	; 0x428 <init_menu>
	
	

	//enable interrupts GLOBALLY
	
	sei();
     3ba:	78 94       	sei
				
		// ONCE THAT WORKS, Comment out the above and use a software timer
		//	to "schedule" the RED LED toggle.

		if (G_release_red==1) {
			LED_TOGGLE(RED);
     3bc:	c0 e1       	ldi	r28, 0x10	; 16
		*/
				
		// ONCE THAT WORKS, Comment out the above and use a software timer
		//	to "schedule" the RED LED toggle.

		if (G_release_red==1) {
     3be:	80 91 73 03 	lds	r24, 0x0373
     3c2:	90 91 74 03 	lds	r25, 0x0374
     3c6:	01 97       	sbiw	r24, 0x01	; 1
     3c8:	d1 f4       	brne	.+52     	; 0x3fe <main+0x54>
			LED_TOGGLE(RED);
     3ca:	82 b1       	in	r24, 0x02	; 2
     3cc:	8c 27       	eor	r24, r28
     3ce:	82 b9       	out	0x02, r24	; 2
			G_red_toggles++;
     3d0:	80 91 6f 03 	lds	r24, 0x036F
     3d4:	90 91 70 03 	lds	r25, 0x0370
     3d8:	a0 91 71 03 	lds	r26, 0x0371
     3dc:	b0 91 72 03 	lds	r27, 0x0372
     3e0:	01 96       	adiw	r24, 0x01	; 1
     3e2:	a1 1d       	adc	r26, r1
     3e4:	b1 1d       	adc	r27, r1
     3e6:	80 93 6f 03 	sts	0x036F, r24
     3ea:	90 93 70 03 	sts	0x0370, r25
     3ee:	a0 93 71 03 	sts	0x0371, r26
     3f2:	b0 93 72 03 	sts	0x0372, r27
			G_release_red = 0; 
     3f6:	10 92 74 03 	sts	0x0374, r1
     3fa:	10 92 73 03 	sts	0x0373, r1
		#endif
*/
		// Whenever you are ready, add in the menu task.
		// Think of this as an external interrupt "releasing" the task.

		serial_check();
     3fe:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <serial_check>
		check_for_new_bytes_received();
     402:	0e 94 7e 03 	call	0x6fc	; 0x6fc <check_for_new_bytes_received>

					
	} //end while loop
     406:	db cf       	rjmp	.-74     	; 0x3be <main+0x14>

00000408 <wait_for_sending_to_finish>:
// finish transmitting on USB_COMM.  We must call this before modifying
// send_buffer or trying to send more bytes, because otherwise we could
// corrupt an existing transmission.
void wait_for_sending_to_finish()
{
	while(!serial_send_buffer_empty(USB_COMM))
     408:	82 e0       	ldi	r24, 0x02	; 2
     40a:	0e 94 28 07 	call	0xe50	; 0xe50 <serial_send_buffer_empty>
     40e:	81 11       	cpse	r24, r1
     410:	03 c0       	rjmp	.+6      	; 0x418 <wait_for_sending_to_finish+0x10>
		serial_check();		// USB_COMM port is always in SERIAL_CHECK mode
     412:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <serial_check>
     416:	f8 cf       	rjmp	.-16     	; 0x408 <wait_for_sending_to_finish>
}
     418:	08 95       	ret

0000041a <print_usb>:
char send_buffer[32];

// A generic function for whenever you want to print to your serial comm window.
// Provide a string and the length of that string. My serial comm likes "\r\n" at 
// the end of each string (be sure to include in length) for proper linefeed.
void print_usb( char *buffer, int n ) {
     41a:	46 2f       	mov	r20, r22
	
	
	serial_send( USB_COMM, buffer, n );
     41c:	bc 01       	movw	r22, r24
     41e:	82 e0       	ldi	r24, 0x02	; 2
     420:	0e 94 34 0b 	call	0x1668	; 0x1668 <serial_send>
	wait_for_sending_to_finish();
     424:	0c 94 04 02 	jmp	0x408	; 0x408 <wait_for_sending_to_finish>

00000428 <init_menu>:
	
	char printBuffer[32];
	
	// Set the baud rate to 9600 bits per second.  Each byte takes ten bit
	// times, so you can get at most 960 bytes per second at this speed.
	serial_set_baud_rate(USB_COMM, 9600);
     428:	40 e8       	ldi	r20, 0x80	; 128
     42a:	55 e2       	ldi	r21, 0x25	; 37
     42c:	60 e0       	ldi	r22, 0x00	; 0
     42e:	70 e0       	ldi	r23, 0x00	; 0
     430:	82 e0       	ldi	r24, 0x02	; 2
     432:	0e 94 43 0a 	call	0x1486	; 0x1486 <serial_set_baud_rate>

	// Start receiving bytes in the ring buffer.
	serial_receive_ring(USB_COMM, receive_buffer, sizeof(receive_buffer));
     436:	40 e2       	ldi	r20, 0x20	; 32
     438:	69 e8       	ldi	r22, 0x89	; 137
     43a:	73 e0       	ldi	r23, 0x03	; 3
     43c:	82 e0       	ldi	r24, 0x02	; 2
     43e:	0e 94 21 09 	call	0x1242	; 0x1242 <serial_receive_ring>

	//memcpy_P( send_buffer, PSTR("USB Serial Initialized\r\n"), 24 );
	//snprintf( printBuffer, 24, "USB Serial Initialized\r\n");
	//print_usb( printBuffer, 24 );
	print_usb( "USB Serial Initialized\r\n", 24);
     442:	68 e1       	ldi	r22, 0x18	; 24
     444:	70 e0       	ldi	r23, 0x00	; 0
     446:	85 e9       	ldi	r24, 0x95	; 149
     448:	91 e0       	ldi	r25, 0x01	; 1
     44a:	0e 94 0d 02 	call	0x41a	; 0x41a <print_usb>

	//memcpy_P( send_buffer, MENU, MENU_LENGTH );
	print_usb( MENU, MENU_LENGTH );
     44e:	6b e1       	ldi	r22, 0x1B	; 27
     450:	70 e0       	ldi	r23, 0x00	; 0
     452:	8e ea       	ldi	r24, 0xAE	; 174
     454:	91 e0       	ldi	r25, 0x01	; 1
     456:	0c 94 0d 02 	jmp	0x41a	; 0x41a <print_usb>

0000045a <process_received_string>:
//------------------------------------------------------------------------------------------
// process_received_byte: Parses a menu command (series of keystrokes) that 
// has been received on USB_COMM and processes it accordingly.
// The menu command is buffered in check_for_new_bytes_received (which calls this function).
void process_received_string(const char* buffer)
{
     45a:	0f 93       	push	r16
     45c:	1f 93       	push	r17
     45e:	cf 93       	push	r28
     460:	df 93       	push	r29
     462:	cd b7       	in	r28, 0x3d	; 61
     464:	de b7       	in	r29, 0x3e	; 62
     466:	a4 97       	sbiw	r28, 0x24	; 36
     468:	0f b6       	in	r0, 0x3f	; 63
     46a:	f8 94       	cli
     46c:	de bf       	out	0x3e, r29	; 62
     46e:	0f be       	out	0x3f, r0	; 63
     470:	cd bf       	out	0x3d, r28	; 61
	// parse and echo back to serial comm window (and optionally the LCD)
	char color;
	char op_char;
	int value;
	int parsed;
	parsed = sscanf(buffer, "%c %c %d", &op_char, &color, &value);
     472:	9e 01       	movw	r18, r28
     474:	2f 5d       	subi	r18, 0xDF	; 223
     476:	3f 4f       	sbci	r19, 0xFF	; 255
     478:	3f 93       	push	r19
     47a:	2f 93       	push	r18
     47c:	2d 5f       	subi	r18, 0xFD	; 253
     47e:	3f 4f       	sbci	r19, 0xFF	; 255
     480:	3f 93       	push	r19
     482:	2f 93       	push	r18
     484:	21 50       	subi	r18, 0x01	; 1
     486:	31 09       	sbc	r19, r1
     488:	3f 93       	push	r19
     48a:	2f 93       	push	r18
     48c:	2a ec       	ldi	r18, 0xCA	; 202
     48e:	31 e0       	ldi	r19, 0x01	; 1
     490:	3f 93       	push	r19
     492:	2f 93       	push	r18
     494:	9f 93       	push	r25
     496:	8f 93       	push	r24
     498:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <sscanf>
	
#ifdef ECHO2LCD
	lcd_goto_xy(0,0);
	printf("Got %c %c %d\n", op_char, color, value);
#endif
	length = sprintf( tempBuffer, "Op:%c C:%c V:%d\r\n", op_char, color, value );
     49c:	8a a1       	ldd	r24, Y+34	; 0x22
     49e:	8f 93       	push	r24
     4a0:	89 a1       	ldd	r24, Y+33	; 0x21
     4a2:	8f 93       	push	r24
     4a4:	8c a1       	ldd	r24, Y+36	; 0x24
     4a6:	1f 92       	push	r1
     4a8:	8f 93       	push	r24
     4aa:	8b a1       	ldd	r24, Y+35	; 0x23
     4ac:	1f 92       	push	r1
     4ae:	8f 93       	push	r24
     4b0:	83 ed       	ldi	r24, 0xD3	; 211
     4b2:	91 e0       	ldi	r25, 0x01	; 1
     4b4:	9f 93       	push	r25
     4b6:	8f 93       	push	r24
     4b8:	8e 01       	movw	r16, r28
     4ba:	0f 5f       	subi	r16, 0xFF	; 255
     4bc:	1f 4f       	sbci	r17, 0xFF	; 255
     4be:	1f 93       	push	r17
     4c0:	0f 93       	push	r16
     4c2:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <sprintf>
	
	print_usb( tempBuffer, length );
     4c6:	bc 01       	movw	r22, r24
     4c8:	c8 01       	movw	r24, r16
     4ca:	0e 94 0d 02 	call	0x41a	; 0x41a <print_usb>
	
	// convert color to upper and check if valid
	color -= 32*(color>='a' && color<='z');
     4ce:	8c a1       	ldd	r24, Y+36	; 0x24
     4d0:	9f e9       	ldi	r25, 0x9F	; 159
     4d2:	98 0f       	add	r25, r24
     4d4:	0f b6       	in	r0, 0x3f	; 63
     4d6:	f8 94       	cli
     4d8:	de bf       	out	0x3e, r29	; 62
     4da:	0f be       	out	0x3f, r0	; 63
     4dc:	cd bf       	out	0x3d, r28	; 61
     4de:	9a 31       	cpi	r25, 0x1A	; 26
     4e0:	10 f4       	brcc	.+4      	; 0x4e6 <process_received_string+0x8c>
     4e2:	90 e2       	ldi	r25, 0x20	; 32
     4e4:	01 c0       	rjmp	.+2      	; 0x4e8 <process_received_string+0x8e>
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	89 1b       	sub	r24, r25
     4ea:	8c a3       	std	Y+36, r24	; 0x24
	switch (color) {
     4ec:	87 34       	cpi	r24, 0x47	; 71
     4ee:	69 f0       	breq	.+26     	; 0x50a <process_received_string+0xb0>
     4f0:	18 f4       	brcc	.+6      	; 0x4f8 <process_received_string+0x9e>
     4f2:	81 34       	cpi	r24, 0x41	; 65
     4f4:	51 f0       	breq	.+20     	; 0x50a <process_received_string+0xb0>
     4f6:	04 c0       	rjmp	.+8      	; 0x500 <process_received_string+0xa6>
     4f8:	82 35       	cpi	r24, 0x52	; 82
     4fa:	39 f0       	breq	.+14     	; 0x50a <process_received_string+0xb0>
     4fc:	89 35       	cpi	r24, 0x59	; 89
     4fe:	29 f0       	breq	.+10     	; 0x50a <process_received_string+0xb0>
		case 'R': 				
		case 'G':
		case 'Y': 
		case 'A': break;
		default:
			print_usb( "Bad Color. Try {RGYA}\r\n", 23 );
     500:	67 e1       	ldi	r22, 0x17	; 23
     502:	70 e0       	ldi	r23, 0x00	; 0
     504:	85 ee       	ldi	r24, 0xE5	; 229
     506:	91 e0       	ldi	r25, 0x01	; 1
     508:	e6 c0       	rjmp	.+460    	; 0x6d6 <process_received_string+0x27c>
			print_usb( MENU, MENU_LENGTH);
			return;
	}

	// Check valid command and implement
	switch (op_char) {
     50a:	9b a1       	ldd	r25, Y+35	; 0x23
     50c:	9a 35       	cpi	r25, 0x5A	; 90
     50e:	09 f4       	brne	.+2      	; 0x512 <process_received_string+0xb8>
     510:	a4 c0       	rjmp	.+328    	; 0x65a <process_received_string+0x200>
     512:	28 f4       	brcc	.+10     	; 0x51e <process_received_string+0xc4>
     514:	90 35       	cpi	r25, 0x50	; 80
     516:	89 f0       	breq	.+34     	; 0x53a <process_received_string+0xe0>
     518:	94 35       	cpi	r25, 0x54	; 84
     51a:	51 f0       	breq	.+20     	; 0x530 <process_received_string+0xd6>
     51c:	d8 c0       	rjmp	.+432    	; 0x6ce <process_received_string+0x274>
     51e:	94 37       	cpi	r25, 0x74	; 116
     520:	39 f0       	breq	.+14     	; 0x530 <process_received_string+0xd6>
     522:	9a 37       	cpi	r25, 0x7A	; 122
     524:	09 f4       	brne	.+2      	; 0x528 <process_received_string+0xce>
     526:	99 c0       	rjmp	.+306    	; 0x65a <process_received_string+0x200>
     528:	90 37       	cpi	r25, 0x70	; 112
     52a:	09 f0       	breq	.+2      	; 0x52e <process_received_string+0xd4>
     52c:	d0 c0       	rjmp	.+416    	; 0x6ce <process_received_string+0x274>
     52e:	05 c0       	rjmp	.+10     	; 0x53a <process_received_string+0xe0>
		// change toggle frequency for <color> LED
		case 'T': 
		case 't':
			set_toggle(color,value);
     530:	69 a1       	ldd	r22, Y+33	; 0x21
     532:	7a a1       	ldd	r23, Y+34	; 0x22
     534:	0e 94 77 00 	call	0xee	; 0xee <set_toggle>
			break; 
     538:	d0 c0       	rjmp	.+416    	; 0x6da <process_received_string+0x280>
		// print counter for <color> LED 
		case 'P':
		case 'p':
			switch(color) {
     53a:	87 34       	cpi	r24, 0x47	; 71
     53c:	09 f4       	brne	.+2      	; 0x540 <process_received_string+0xe6>
     53e:	6a c0       	rjmp	.+212    	; 0x614 <process_received_string+0x1ba>
     540:	08 f0       	brcs	.+2      	; 0x544 <process_received_string+0xea>
     542:	46 c0       	rjmp	.+140    	; 0x5d0 <process_received_string+0x176>
     544:	81 34       	cpi	r24, 0x41	; 65
     546:	09 f0       	breq	.+2      	; 0x54a <process_received_string+0xf0>
     548:	83 c0       	rjmp	.+262    	; 0x650 <process_received_string+0x1f6>
				case 'Y': 
					length = sprintf( tempBuffer, "Y toggles: %d\r\n", G_yellow_toggles );
					print_usb( tempBuffer, length ); 
					break;
				case 'A':
				length = sprintf( tempBuffer, "R toggles: %d\r\n", G_red_toggles );
     54a:	80 91 72 03 	lds	r24, 0x0372
     54e:	8f 93       	push	r24
     550:	80 91 71 03 	lds	r24, 0x0371
     554:	8f 93       	push	r24
     556:	80 91 70 03 	lds	r24, 0x0370
     55a:	8f 93       	push	r24
     55c:	80 91 6f 03 	lds	r24, 0x036F
     560:	8f 93       	push	r24
     562:	8d ef       	ldi	r24, 0xFD	; 253
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	9f 93       	push	r25
     568:	8f 93       	push	r24
     56a:	1f 93       	push	r17
     56c:	0f 93       	push	r16
     56e:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <sprintf>
				print_usb( tempBuffer, length );
     572:	bc 01       	movw	r22, r24
     574:	c8 01       	movw	r24, r16
     576:	0e 94 0d 02 	call	0x41a	; 0x41a <print_usb>
				length = sprintf( tempBuffer, "Y toggles: %d\r\n", G_yellow_toggles );
     57a:	80 91 6a 03 	lds	r24, 0x036A
     57e:	8f 93       	push	r24
     580:	80 91 69 03 	lds	r24, 0x0369
     584:	8f 93       	push	r24
     586:	80 91 68 03 	lds	r24, 0x0368
     58a:	8f 93       	push	r24
     58c:	80 91 67 03 	lds	r24, 0x0367
     590:	8f 93       	push	r24
     592:	8d e1       	ldi	r24, 0x1D	; 29
     594:	92 e0       	ldi	r25, 0x02	; 2
     596:	9f 93       	push	r25
     598:	8f 93       	push	r24
     59a:	1f 93       	push	r17
     59c:	0f 93       	push	r16
     59e:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <sprintf>
				print_usb( tempBuffer, length );
     5a2:	bc 01       	movw	r22, r24
     5a4:	c8 01       	movw	r24, r16
     5a6:	0e 94 0d 02 	call	0x41a	; 0x41a <print_usb>
				length = sprintf( tempBuffer, "G toggles: %d\r\n", G_green_toggles );
     5aa:	80 91 6e 03 	lds	r24, 0x036E
     5ae:	8f 93       	push	r24
     5b0:	80 91 6d 03 	lds	r24, 0x036D
     5b4:	8f 93       	push	r24
     5b6:	80 91 6c 03 	lds	r24, 0x036C
     5ba:	8f 93       	push	r24
     5bc:	80 91 6b 03 	lds	r24, 0x036B
     5c0:	8f 93       	push	r24
     5c2:	8d e0       	ldi	r24, 0x0D	; 13
     5c4:	92 e0       	ldi	r25, 0x02	; 2
     5c6:	9f 93       	push	r25
     5c8:	8f 93       	push	r24
     5ca:	1f 93       	push	r17
     5cc:	0f 93       	push	r16
     5ce:	34 c0       	rjmp	.+104    	; 0x638 <process_received_string+0x1de>
			set_toggle(color,value);
			break; 
		// print counter for <color> LED 
		case 'P':
		case 'p':
			switch(color) {
     5d0:	82 35       	cpi	r24, 0x52	; 82
     5d2:	89 f0       	breq	.+34     	; 0x5f6 <process_received_string+0x19c>
     5d4:	89 35       	cpi	r24, 0x59	; 89
     5d6:	e1 f5       	brne	.+120    	; 0x650 <process_received_string+0x1f6>
				case 'G': 
					length = sprintf( tempBuffer, "G toggles: %d\r\n", G_green_toggles );
					print_usb( tempBuffer, length ); 
					break;
				case 'Y': 
					length = sprintf( tempBuffer, "Y toggles: %d\r\n", G_yellow_toggles );
     5d8:	80 91 6a 03 	lds	r24, 0x036A
     5dc:	8f 93       	push	r24
     5de:	80 91 69 03 	lds	r24, 0x0369
     5e2:	8f 93       	push	r24
     5e4:	80 91 68 03 	lds	r24, 0x0368
     5e8:	8f 93       	push	r24
     5ea:	80 91 67 03 	lds	r24, 0x0367
     5ee:	8f 93       	push	r24
     5f0:	8d e1       	ldi	r24, 0x1D	; 29
     5f2:	92 e0       	ldi	r25, 0x02	; 2
     5f4:	1d c0       	rjmp	.+58     	; 0x630 <process_received_string+0x1d6>
		// print counter for <color> LED 
		case 'P':
		case 'p':
			switch(color) {
				case 'R': 
					length = sprintf( tempBuffer, "R toggles: %d\r\n", G_red_toggles );
     5f6:	80 91 72 03 	lds	r24, 0x0372
     5fa:	8f 93       	push	r24
     5fc:	80 91 71 03 	lds	r24, 0x0371
     600:	8f 93       	push	r24
     602:	80 91 70 03 	lds	r24, 0x0370
     606:	8f 93       	push	r24
     608:	80 91 6f 03 	lds	r24, 0x036F
     60c:	8f 93       	push	r24
     60e:	8d ef       	ldi	r24, 0xFD	; 253
     610:	91 e0       	ldi	r25, 0x01	; 1
     612:	0e c0       	rjmp	.+28     	; 0x630 <process_received_string+0x1d6>
					print_usb( tempBuffer, length ); 
					break;
				case 'G': 
					length = sprintf( tempBuffer, "G toggles: %d\r\n", G_green_toggles );
     614:	80 91 6e 03 	lds	r24, 0x036E
     618:	8f 93       	push	r24
     61a:	80 91 6d 03 	lds	r24, 0x036D
     61e:	8f 93       	push	r24
     620:	80 91 6c 03 	lds	r24, 0x036C
     624:	8f 93       	push	r24
     626:	80 91 6b 03 	lds	r24, 0x036B
     62a:	8f 93       	push	r24
     62c:	8d e0       	ldi	r24, 0x0D	; 13
     62e:	92 e0       	ldi	r25, 0x02	; 2
					print_usb( tempBuffer, length ); 
					break;
				case 'Y': 
					length = sprintf( tempBuffer, "Y toggles: %d\r\n", G_yellow_toggles );
     630:	9f 93       	push	r25
     632:	8f 93       	push	r24
     634:	1f 93       	push	r17
     636:	0f 93       	push	r16
				case 'A':
				length = sprintf( tempBuffer, "R toggles: %d\r\n", G_red_toggles );
				print_usb( tempBuffer, length );
				length = sprintf( tempBuffer, "Y toggles: %d\r\n", G_yellow_toggles );
				print_usb( tempBuffer, length );
				length = sprintf( tempBuffer, "G toggles: %d\r\n", G_green_toggles );
     638:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <sprintf>
				print_usb( tempBuffer, length );
     63c:	bc 01       	movw	r22, r24
     63e:	c8 01       	movw	r24, r16
     640:	0e 94 0d 02 	call	0x41a	; 0x41a <print_usb>
				break;
     644:	0f b6       	in	r0, 0x3f	; 63
     646:	f8 94       	cli
     648:	de bf       	out	0x3e, r29	; 62
     64a:	0f be       	out	0x3f, r0	; 63
     64c:	cd bf       	out	0x3d, r28	; 61
     64e:	45 c0       	rjmp	.+138    	; 0x6da <process_received_string+0x280>
				
				default: 
					print_usb("Default in p(color). How?\r\n", 27 );
     650:	6b e1       	ldi	r22, 0x1B	; 27
     652:	70 e0       	ldi	r23, 0x00	; 0
     654:	8d e2       	ldi	r24, 0x2D	; 45
     656:	92 e0       	ldi	r25, 0x02	; 2
     658:	3e c0       	rjmp	.+124    	; 0x6d6 <process_received_string+0x27c>
			break;

		// zero counter for <color> LED 
		case 'Z':
		case 'z':
			switch(color) {
     65a:	87 34       	cpi	r24, 0x47	; 71
     65c:	09 f1       	breq	.+66     	; 0x6a0 <process_received_string+0x246>
     65e:	98 f4       	brcc	.+38     	; 0x686 <process_received_string+0x22c>
     660:	81 34       	cpi	r24, 0x41	; 65
     662:	81 f5       	brne	.+96     	; 0x6c4 <process_received_string+0x26a>
				case 'R': G_red_toggles=0; break;
				case 'G': G_green_toggles=0; break;
				case 'Y': G_yellow_toggles=0; break;
				case 'A': G_red_toggles = G_green_toggles = G_yellow_toggles = 0; break;
     664:	10 92 67 03 	sts	0x0367, r1
     668:	10 92 68 03 	sts	0x0368, r1
     66c:	10 92 69 03 	sts	0x0369, r1
     670:	10 92 6a 03 	sts	0x036A, r1
     674:	10 92 6b 03 	sts	0x036B, r1
     678:	10 92 6c 03 	sts	0x036C, r1
     67c:	10 92 6d 03 	sts	0x036D, r1
     680:	10 92 6e 03 	sts	0x036E, r1
     684:	16 c0       	rjmp	.+44     	; 0x6b2 <process_received_string+0x258>
			break;

		// zero counter for <color> LED 
		case 'Z':
		case 'z':
			switch(color) {
     686:	82 35       	cpi	r24, 0x52	; 82
     688:	a1 f0       	breq	.+40     	; 0x6b2 <process_received_string+0x258>
     68a:	89 35       	cpi	r24, 0x59	; 89
     68c:	d9 f4       	brne	.+54     	; 0x6c4 <process_received_string+0x26a>
				case 'R': G_red_toggles=0; break;
				case 'G': G_green_toggles=0; break;
				case 'Y': G_yellow_toggles=0; break;
     68e:	10 92 67 03 	sts	0x0367, r1
     692:	10 92 68 03 	sts	0x0368, r1
     696:	10 92 69 03 	sts	0x0369, r1
     69a:	10 92 6a 03 	sts	0x036A, r1
     69e:	1d c0       	rjmp	.+58     	; 0x6da <process_received_string+0x280>
		// zero counter for <color> LED 
		case 'Z':
		case 'z':
			switch(color) {
				case 'R': G_red_toggles=0; break;
				case 'G': G_green_toggles=0; break;
     6a0:	10 92 6b 03 	sts	0x036B, r1
     6a4:	10 92 6c 03 	sts	0x036C, r1
     6a8:	10 92 6d 03 	sts	0x036D, r1
     6ac:	10 92 6e 03 	sts	0x036E, r1
     6b0:	14 c0       	rjmp	.+40     	; 0x6da <process_received_string+0x280>
				case 'Y': G_yellow_toggles=0; break;
				case 'A': G_red_toggles = G_green_toggles = G_yellow_toggles = 0; break;
     6b2:	10 92 6f 03 	sts	0x036F, r1
     6b6:	10 92 70 03 	sts	0x0370, r1
     6ba:	10 92 71 03 	sts	0x0371, r1
     6be:	10 92 72 03 	sts	0x0372, r1
     6c2:	0b c0       	rjmp	.+22     	; 0x6da <process_received_string+0x280>
				default: print_usb("Default in z(color). How?\r\n", 27 );
     6c4:	6b e1       	ldi	r22, 0x1B	; 27
     6c6:	70 e0       	ldi	r23, 0x00	; 0
     6c8:	89 e4       	ldi	r24, 0x49	; 73
     6ca:	92 e0       	ldi	r25, 0x02	; 2
     6cc:	04 c0       	rjmp	.+8      	; 0x6d6 <process_received_string+0x27c>
			}
			break;
		default:
			print_usb( "Command does not compute.\r\n", 27 );
     6ce:	6b e1       	ldi	r22, 0x1B	; 27
     6d0:	70 e0       	ldi	r23, 0x00	; 0
     6d2:	85 e6       	ldi	r24, 0x65	; 101
     6d4:	92 e0       	ldi	r25, 0x02	; 2
     6d6:	0e 94 0d 02 	call	0x41a	; 0x41a <print_usb>
		} // end switch(op_char) 
		
	print_usb( MENU, MENU_LENGTH);
     6da:	6b e1       	ldi	r22, 0x1B	; 27
     6dc:	70 e0       	ldi	r23, 0x00	; 0
     6de:	8e ea       	ldi	r24, 0xAE	; 174
     6e0:	91 e0       	ldi	r25, 0x01	; 1
     6e2:	0e 94 0d 02 	call	0x41a	; 0x41a <print_usb>

} //end menu()
     6e6:	a4 96       	adiw	r28, 0x24	; 36
     6e8:	0f b6       	in	r0, 0x3f	; 63
     6ea:	f8 94       	cli
     6ec:	de bf       	out	0x3e, r29	; 62
     6ee:	0f be       	out	0x3f, r0	; 63
     6f0:	cd bf       	out	0x3d, r28	; 61
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	1f 91       	pop	r17
     6f8:	0f 91       	pop	r16
     6fa:	08 95       	ret

000006fc <check_for_new_bytes_received>:

//---------------------------------------------------------------------------------------
// If there are received bytes to process, this function loops through the receive_buffer
// accumulating new bytes (keystrokes) in another buffer for processing.
void check_for_new_bytes_received()
{
     6fc:	cf 93       	push	r28
     6fe:	df 93       	push	r29
     700:	cd b7       	in	r28, 0x3d	; 61
     702:	de b7       	in	r29, 0x3e	; 62
     704:	a0 97       	sbiw	r28, 0x20	; 32
     706:	0f b6       	in	r0, 0x3f	; 63
     708:	f8 94       	cli
     70a:	de bf       	out	0x3e, r29	; 62
     70c:	0f be       	out	0x3f, r0	; 63
     70e:	cd bf       	out	0x3d, r28	; 61
	*/ 
	char menuBuffer[32];
	static int received = 0;
	// while there are unprocessed keystrokes in the receive_buffer, grab them and buffer
	// them into the menuBuffer
	while(serial_get_received_bytes(USB_COMM) != receive_buffer_position)
     710:	82 e0       	ldi	r24, 0x02	; 2
     712:	0e 94 18 07 	call	0xe30	; 0xe30 <serial_get_received_bytes>
     716:	90 91 a9 03 	lds	r25, 0x03A9
     71a:	20 91 7d 03 	lds	r18, 0x037D
     71e:	30 91 7e 03 	lds	r19, 0x037E
     722:	89 17       	cp	r24, r25
     724:	d9 f0       	breq	.+54     	; 0x75c <check_for_new_bytes_received+0x60>
	{
		// place in a buffer for processing
		menuBuffer[received] = receive_buffer[receive_buffer_position];
     726:	a1 e0       	ldi	r26, 0x01	; 1
     728:	b0 e0       	ldi	r27, 0x00	; 0
     72a:	ac 0f       	add	r26, r28
     72c:	bd 1f       	adc	r27, r29
     72e:	a2 0f       	add	r26, r18
     730:	b3 1f       	adc	r27, r19
     732:	e9 2f       	mov	r30, r25
     734:	f0 e0       	ldi	r31, 0x00	; 0
     736:	e7 57       	subi	r30, 0x77	; 119
     738:	fc 4f       	sbci	r31, 0xFC	; 252
     73a:	80 81       	ld	r24, Z
     73c:	8c 93       	st	X, r24
		++received;
     73e:	2f 5f       	subi	r18, 0xFF	; 255
     740:	3f 4f       	sbci	r19, 0xFF	; 255
     742:	30 93 7e 03 	sts	0x037E, r19
     746:	20 93 7d 03 	sts	0x037D, r18
		
		// Increment receive_buffer_position, but wrap around when it gets to
		// the end of the buffer. 
		if ( receive_buffer_position == sizeof(receive_buffer) - 1 )
     74a:	9f 31       	cpi	r25, 0x1F	; 31
     74c:	19 f4       	brne	.+6      	; 0x754 <check_for_new_bytes_received+0x58>
		{
			receive_buffer_position = 0;
     74e:	10 92 a9 03 	sts	0x03A9, r1
     752:	de cf       	rjmp	.-68     	; 0x710 <check_for_new_bytes_received+0x14>
		}			
		else
		{
			receive_buffer_position++;
     754:	9f 5f       	subi	r25, 0xFF	; 255
     756:	90 93 a9 03 	sts	0x03A9, r25
     75a:	da cf       	rjmp	.-76     	; 0x710 <check_for_new_bytes_received+0x14>
		}
	}
	
	
	// If there were keystrokes processed, check if a menue command
	if (received)
     75c:	21 15       	cp	r18, r1
     75e:	31 05       	cpc	r19, r1
     760:	91 f0       	breq	.+36     	; 0x786 <check_for_new_bytes_received+0x8a>
	 {
		// if only 1 received, it was MOST LIKELY a carriage return. 
		// Even if it was a single keystroke, it is not a menu command, so ignore it.
		if ( 1 == received ) {
     762:	21 30       	cpi	r18, 0x01	; 1
     764:	31 05       	cpc	r19, r1
     766:	59 f0       	breq	.+22     	; 0x77e <check_for_new_bytes_received+0x82>
			received = 0;
			return;
		}
		// Process buffer: terminate string, process, reset index to beginning of array to receive another command
		menuBuffer[received] = '\0';
     768:	e1 e0       	ldi	r30, 0x01	; 1
     76a:	f0 e0       	ldi	r31, 0x00	; 0
     76c:	ec 0f       	add	r30, r28
     76e:	fd 1f       	adc	r31, r29
     770:	e2 0f       	add	r30, r18
     772:	f3 1f       	adc	r31, r19
     774:	10 82       	st	Z, r1
		{
			print_character(menuBuffer[i]);
		}
#endif

	process_received_string(menuBuffer);
     776:	ce 01       	movw	r24, r28
     778:	01 96       	adiw	r24, 0x01	; 1
     77a:	0e 94 2d 02 	call	0x45a	; 0x45a <process_received_string>

	received = 0;
     77e:	10 92 7e 03 	sts	0x037E, r1
     782:	10 92 7d 03 	sts	0x037D, r1
		
	}
}
     786:	a0 96       	adiw	r28, 0x20	; 32
     788:	0f b6       	in	r0, 0x3f	; 63
     78a:	f8 94       	cli
     78c:	de bf       	out	0x3e, r29	; 62
     78e:	0f be       	out	0x3f, r0	; 63
     790:	cd bf       	out	0x3d, r28	; 61
     792:	df 91       	pop	r29
     794:	cf 91       	pop	r28
     796:	08 95       	ret

00000798 <init_timers>:
extern uint16_t G_green_period;
extern uint16_t G_yellow_period;

extern uint16_t G_release_red;

void init_timers() {
     798:	cf 93       	push	r28
     79a:	df 93       	push	r29
	
	// Using pre-scaler XX. This is CS0/2/1/0 = 

	//part2: 8 bit timer with 1ms (1000 Hz) resolution for red led
	
	TCCR0A = (1<< WGM01);
     79c:	c2 e0       	ldi	r28, 0x02	; 2
     79e:	c4 bd       	out	0x24, r28	; 36
	TCCR0B = (1<< CS02); // prescaler 256
     7a0:	84 e0       	ldi	r24, 0x04	; 4
     7a2:	85 bd       	out	0x25, r24	; 37

	
	// Software Clock Interrupt Frequency: 1000 = f_IO / (prescaler*OCR0)
	// Set OCR0 appropriately for TOP to generate desired frequency of 1KHz
	printf("Initializing software clock to freq 1000Hz (period 1 ms)\n");	
     7a4:	81 e8       	ldi	r24, 0x81	; 129
     7a6:	92 e0       	ldi	r25, 0x02	; 2
     7a8:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <puts>
	OCR0A = 77;
     7ac:	8d e4       	ldi	r24, 0x4D	; 77
     7ae:	87 bd       	out	0x27, r24	; 39


	//Enable output compare match interrupt on timer 0A
	TIMSK0 = (1 << OCIE0A);
     7b0:	c0 93 6e 00 	sts	0x006E, r28

	// Initialize counter
	G_ms_ticks = 0;
     7b4:	10 92 75 03 	sts	0x0375, r1
     7b8:	10 92 76 03 	sts	0x0376, r1
     7bc:	10 92 77 03 	sts	0x0377, r1
     7c0:	10 92 78 03 	sts	0x0378, r1
	
	// Using pre-scaler XX. This is CS1_210 = 
	// part3: 16 bit timer with 100ms (10 Hz) resolution for yellow led
	
	
	TCCR3A = (1<< COM3A1);
     7c4:	80 e8       	ldi	r24, 0x80	; 128
     7c6:	80 93 90 00 	sts	0x0090, r24
	TCCR3B = (1 << WGM32); // Configure timer 1 for CTC mode
     7ca:	e1 e9       	ldi	r30, 0x91	; 145
     7cc:	f0 e0       	ldi	r31, 0x00	; 0
     7ce:	88 e0       	ldi	r24, 0x08	; 8
     7d0:	80 83       	st	Z, r24
	TCCR3B |= ((1 << CS30) | (1 << CS31)); // Start timer at Fcpu/64
     7d2:	80 81       	ld	r24, Z
     7d4:	83 60       	ori	r24, 0x03	; 3
     7d6:	80 83       	st	Z, r24
	

	// Interrupt Frequency: 10 = f_IO / (prescaler*OCR3A)
	// Set OCR3A appropriately for TOP to generate desired frequency using Y_TIMER_RESOLUTION (100 ms).
	// NOTE: This is not the toggle frequency, rather a tick frequency used to time toggles.
	OCR3A = 31249; //Set CTC compare value to 10Hz, with a prescaler of 64
     7d8:	e8 e9       	ldi	r30, 0x98	; 152
     7da:	f0 e0       	ldi	r31, 0x00	; 0
     7dc:	81 e1       	ldi	r24, 0x11	; 17
     7de:	9a e7       	ldi	r25, 0x7A	; 122
     7e0:	91 83       	std	Z+1, r25	; 0x01
     7e2:	80 83       	st	Z, r24
	printf("Initializing yellow clock to freq %dHz (period %d ms)\n",(int)(OCR3A),Y_TIMER_RESOLUTION);	
     7e4:	80 81       	ld	r24, Z
     7e6:	91 81       	ldd	r25, Z+1	; 0x01
     7e8:	1f 92       	push	r1
     7ea:	24 e6       	ldi	r18, 0x64	; 100
     7ec:	2f 93       	push	r18
     7ee:	9f 93       	push	r25
     7f0:	8f 93       	push	r24
     7f2:	8a eb       	ldi	r24, 0xBA	; 186
     7f4:	92 e0       	ldi	r25, 0x02	; 2
     7f6:	9f 93       	push	r25
     7f8:	8f 93       	push	r24
     7fa:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <printf>

	//Enable output compare match interrupt on timer 3A
	TIMSK3 = (1 << OCIE3A); // Enable CTC interrupt
     7fe:	c0 93 71 00 	sts	0x0071, r28

	G_yellow_ticks = 0;
     802:	10 92 79 03 	sts	0x0379, r1
     806:	10 92 7a 03 	sts	0x037A, r1
     80a:	10 92 7b 03 	sts	0x037B, r1
     80e:	10 92 7c 03 	sts	0x037C, r1
	// Limits are being placed on the frequency because the frequency of the clock
	// used to toggle the LED is limited.

	// Using CTC mode with OCR1A for TOP. This is mode XX, thus WGM3/3210 = .
	//DDRD = (1<<PIND5);
	TCCR1A = (1<< COM1A1) | (1 << WGM11); //PWM Fast Mode
     812:	82 e8       	ldi	r24, 0x82	; 130
     814:	80 93 80 00 	sts	0x0080, r24
	TCCR1B = (1 << WGM13) | (1 << WGM12); // Configure timer 1 for CTC mode
     818:	e1 e8       	ldi	r30, 0x81	; 129
     81a:	f0 e0       	ldi	r31, 0x00	; 0
     81c:	88 e1       	ldi	r24, 0x18	; 24
     81e:	80 83       	st	Z, r24
	// Toggle OC1A on a compare match. Thus COM1A_10 = 01

	
	// Using pre-scaler 1024. This is CS1/2/1/0 = XXX

	TCCR1B |= ((1 << CS10) | (1 << CS12)); // Start timer at prescaler 1024
     820:	80 81       	ld	r24, Z
     822:	85 60       	ori	r24, 0x05	; 5
     824:	80 83       	st	Z, r24
	
	// Interrupt Frequency: ? = f_IO / (1024*OCR1A)
	// Set OCR1A appropriately for TOP to generate desired frequency.
	// NOTE: This IS the toggle frequency.
	
	printf("green period %d\n",G_green_period);
     826:	80 91 29 01 	lds	r24, 0x0129
     82a:	8f 93       	push	r24
     82c:	80 91 28 01 	lds	r24, 0x0128
     830:	8f 93       	push	r24
     832:	81 ef       	ldi	r24, 0xF1	; 241
     834:	92 e0       	ldi	r25, 0x02	; 2
     836:	9f 93       	push	r25
     838:	8f 93       	push	r24
     83a:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <printf>
	ICR1 = (uint32_t)((19530 / G_green_period) * 2); 
     83e:	60 91 28 01 	lds	r22, 0x0128
     842:	70 91 29 01 	lds	r23, 0x0129
     846:	8a e4       	ldi	r24, 0x4A	; 74
     848:	9c e4       	ldi	r25, 0x4C	; 76
     84a:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <__udivmodhi4>
     84e:	66 0f       	add	r22, r22
     850:	77 1f       	adc	r23, r23
     852:	e6 e8       	ldi	r30, 0x86	; 134
     854:	f0 e0       	ldi	r31, 0x00	; 0
     856:	71 83       	std	Z+1, r23	; 0x01
     858:	60 83       	st	Z, r22
	OCR1A   = (uint16_t) (ICR1 / 2);
     85a:	80 81       	ld	r24, Z
     85c:	91 81       	ldd	r25, Z+1	; 0x01
     85e:	96 95       	lsr	r25
     860:	87 95       	ror	r24
     862:	c8 e8       	ldi	r28, 0x88	; 136
     864:	d0 e0       	ldi	r29, 0x00	; 0
     866:	99 83       	std	Y+1, r25	; 0x01
     868:	88 83       	st	Y, r24
	//OCR1A = (uint16_t) (XXXX);
	printf("Set OCR1A to %d\n",OCR1A);
     86a:	88 81       	ld	r24, Y
     86c:	99 81       	ldd	r25, Y+1	; 0x01
     86e:	9f 93       	push	r25
     870:	8f 93       	push	r24
     872:	82 e0       	ldi	r24, 0x02	; 2
     874:	93 e0       	ldi	r25, 0x03	; 3
     876:	9f 93       	push	r25
     878:	8f 93       	push	r24
     87a:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <printf>
	printf("Initializing green clock to freq %dHz (period %d ms)\n",(int)(OCR1A),G_green_period);	
     87e:	88 81       	ld	r24, Y
     880:	99 81       	ldd	r25, Y+1	; 0x01
     882:	20 91 29 01 	lds	r18, 0x0129
     886:	2f 93       	push	r18
     888:	20 91 28 01 	lds	r18, 0x0128
     88c:	2f 93       	push	r18
     88e:	9f 93       	push	r25
     890:	8f 93       	push	r24
     892:	83 e1       	ldi	r24, 0x13	; 19
     894:	93 e0       	ldi	r25, 0x03	; 3
     896:	9f 93       	push	r25
     898:	8f 93       	push	r24
     89a:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <printf>
	// A match to this will toggle the green LED.
	// Regardless of its value (provided it is less than OCR1A), it will match at the frequency of timer 1.
	//OCR1B = 1;

	//Enable output compare match interrupt on timer 1B
	TIMSK1 = (1 << OCIE1A) | (1<<TOIE1);
     89e:	83 e0       	ldi	r24, 0x03	; 3
     8a0:	80 93 6f 00 	sts	0x006F, r24
     8a4:	8d b7       	in	r24, 0x3d	; 61
     8a6:	9e b7       	in	r25, 0x3e	; 62
     8a8:	44 96       	adiw	r24, 0x14	; 20
     8aa:	0f b6       	in	r0, 0x3f	; 63
     8ac:	f8 94       	cli
     8ae:	9e bf       	out	0x3e, r25	; 62
     8b0:	0f be       	out	0x3f, r0	; 63
     8b2:	8d bf       	out	0x3d, r24	; 61
	

}
     8b4:	df 91       	pop	r29
     8b6:	cf 91       	pop	r28
     8b8:	08 95       	ret

000008ba <__vector_16>:


//INTERRUPT HANDLERS
 ISR(TIMER0_COMPA_vect) {
     8ba:	1f 92       	push	r1
     8bc:	0f 92       	push	r0
     8be:	0f b6       	in	r0, 0x3f	; 63
     8c0:	0f 92       	push	r0
     8c2:	11 24       	eor	r1, r1
     8c4:	0b b6       	in	r0, 0x3b	; 59
     8c6:	0f 92       	push	r0
     8c8:	2f 93       	push	r18
     8ca:	3f 93       	push	r19
     8cc:	4f 93       	push	r20
     8ce:	5f 93       	push	r21
     8d0:	6f 93       	push	r22
     8d2:	7f 93       	push	r23
     8d4:	8f 93       	push	r24
     8d6:	9f 93       	push	r25
     8d8:	af 93       	push	r26
     8da:	bf 93       	push	r27
     8dc:	ef 93       	push	r30
     8de:	ff 93       	push	r31

	// This is the Interrupt Service Routine for Timer0 (10ms clock used for scheduling red).
	// Each time the TCNT count is equal to the OCR0 register, this interrupt is "fired".

	// Increment ticks
	G_ms_ticks++;
     8e0:	60 91 75 03 	lds	r22, 0x0375
     8e4:	70 91 76 03 	lds	r23, 0x0376
     8e8:	80 91 77 03 	lds	r24, 0x0377
     8ec:	90 91 78 03 	lds	r25, 0x0378
     8f0:	6f 5f       	subi	r22, 0xFF	; 255
     8f2:	7f 4f       	sbci	r23, 0xFF	; 255
     8f4:	8f 4f       	sbci	r24, 0xFF	; 255
     8f6:	9f 4f       	sbci	r25, 0xFF	; 255
     8f8:	60 93 75 03 	sts	0x0375, r22
     8fc:	70 93 76 03 	sts	0x0376, r23
     900:	80 93 77 03 	sts	0x0377, r24
     904:	90 93 78 03 	sts	0x0378, r25

	// if time to toggle the RED LED, set flag to release
	if ( ( G_ms_ticks % G_red_period ) == 0 )
     908:	20 91 2a 01 	lds	r18, 0x012A
     90c:	30 91 2b 01 	lds	r19, 0x012B
     910:	40 e0       	ldi	r20, 0x00	; 0
     912:	50 e0       	ldi	r21, 0x00	; 0
     914:	0e 94 88 0c 	call	0x1910	; 0x1910 <__udivmodsi4>
     918:	67 2b       	or	r22, r23
     91a:	68 2b       	or	r22, r24
     91c:	69 2b       	or	r22, r25
     91e:	31 f4       	brne	.+12     	; 0x92c <__vector_16+0x72>
		G_release_red = 1;
     920:	81 e0       	ldi	r24, 0x01	; 1
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	90 93 74 03 	sts	0x0374, r25
     928:	80 93 73 03 	sts	0x0373, r24
}
     92c:	ff 91       	pop	r31
     92e:	ef 91       	pop	r30
     930:	bf 91       	pop	r27
     932:	af 91       	pop	r26
     934:	9f 91       	pop	r25
     936:	8f 91       	pop	r24
     938:	7f 91       	pop	r23
     93a:	6f 91       	pop	r22
     93c:	5f 91       	pop	r21
     93e:	4f 91       	pop	r20
     940:	3f 91       	pop	r19
     942:	2f 91       	pop	r18
     944:	0f 90       	pop	r0
     946:	0b be       	out	0x3b, r0	; 59
     948:	0f 90       	pop	r0
     94a:	0f be       	out	0x3f, r0	; 63
     94c:	0f 90       	pop	r0
     94e:	1f 90       	pop	r1
     950:	18 95       	reti

00000952 <void_getchar>:
     952:	80 e0       	ldi	r24, 0x00	; 0
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	08 95       	ret

00000958 <delayMicroseconds.clone.0>:
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	6f 93       	push	r22
     95e:	64 e0       	ldi	r22, 0x04	; 4
     960:	6a 95       	dec	r22
     962:	f1 f7       	brne	.-4      	; 0x960 <delayMicroseconds.clone.0+0x8>
     964:	6f 91       	pop	r22
     966:	01 97       	sbiw	r24, 0x01	; 1
     968:	c9 f7       	brne	.-14     	; 0x95c <delayMicroseconds.clone.0+0x4>
     96a:	08 95       	ret

0000096c <_ZN12OrangutanLCD8busyWaitEv>:
     96c:	0f 93       	push	r16
     96e:	1f 93       	push	r17
     970:	cf 93       	push	r28
     972:	df 93       	push	r29
     974:	17 b1       	in	r17, 0x07	; 7
     976:	3d 98       	cbi	0x07, 5	; 7
     978:	28 98       	cbi	0x05, 0	; 5
     97a:	29 9a       	sbi	0x05, 1	; 5
     97c:	c0 e0       	ldi	r28, 0x00	; 0
     97e:	d0 e0       	ldi	r29, 0x00	; 0
     980:	0e 94 ac 04 	call	0x958	; 0x958 <delayMicroseconds.clone.0>
     984:	2a 9a       	sbi	0x05, 2	; 5
     986:	0e 94 ac 04 	call	0x958	; 0x958 <delayMicroseconds.clone.0>
     98a:	06 b1       	in	r16, 0x06	; 6
     98c:	2a 98       	cbi	0x05, 2	; 5
     98e:	0e 94 ac 04 	call	0x958	; 0x958 <delayMicroseconds.clone.0>
     992:	2a 9a       	sbi	0x05, 2	; 5
     994:	0e 94 ac 04 	call	0x958	; 0x958 <delayMicroseconds.clone.0>
     998:	2a 98       	cbi	0x05, 2	; 5
     99a:	24 96       	adiw	r28, 0x04	; 4
     99c:	05 ff       	sbrs	r16, 5
     99e:	10 c0       	rjmp	.+32     	; 0x9c0 <_ZN12OrangutanLCD8busyWaitEv+0x54>
     9a0:	9e 01       	movw	r18, r28
     9a2:	40 e0       	ldi	r20, 0x00	; 0
     9a4:	50 e0       	ldi	r21, 0x00	; 0
     9a6:	80 91 4e 03 	lds	r24, 0x034E
     9aa:	90 91 4f 03 	lds	r25, 0x034F
     9ae:	a0 91 50 03 	lds	r26, 0x0350
     9b2:	b0 91 51 03 	lds	r27, 0x0351
     9b6:	28 17       	cp	r18, r24
     9b8:	39 07       	cpc	r19, r25
     9ba:	4a 07       	cpc	r20, r26
     9bc:	5b 07       	cpc	r21, r27
     9be:	00 f3       	brcs	.-64     	; 0x980 <_ZN12OrangutanLCD8busyWaitEv+0x14>
     9c0:	9e 01       	movw	r18, r28
     9c2:	40 e0       	ldi	r20, 0x00	; 0
     9c4:	50 e0       	ldi	r21, 0x00	; 0
     9c6:	80 91 4e 03 	lds	r24, 0x034E
     9ca:	90 91 4f 03 	lds	r25, 0x034F
     9ce:	a0 91 50 03 	lds	r26, 0x0350
     9d2:	b0 91 51 03 	lds	r27, 0x0351
     9d6:	28 17       	cp	r18, r24
     9d8:	39 07       	cpc	r19, r25
     9da:	4a 07       	cpc	r20, r26
     9dc:	5b 07       	cpc	r21, r27
     9de:	28 f0       	brcs	.+10     	; 0x9ea <_ZN12OrangutanLCD8busyWaitEv+0x7e>
     9e0:	82 e3       	ldi	r24, 0x32	; 50
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	a0 e0       	ldi	r26, 0x00	; 0
     9e6:	b0 e0       	ldi	r27, 0x00	; 0
     9e8:	04 c0       	rjmp	.+8      	; 0x9f2 <_ZN12OrangutanLCD8busyWaitEv+0x86>
     9ea:	80 e3       	ldi	r24, 0x30	; 48
     9ec:	95 e7       	ldi	r25, 0x75	; 117
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	80 93 4e 03 	sts	0x034E, r24
     9f6:	90 93 4f 03 	sts	0x034F, r25
     9fa:	a0 93 50 03 	sts	0x0350, r26
     9fe:	b0 93 51 03 	sts	0x0351, r27
     a02:	17 b9       	out	0x07, r17	; 7
     a04:	df 91       	pop	r29
     a06:	cf 91       	pop	r28
     a08:	1f 91       	pop	r17
     a0a:	0f 91       	pop	r16
     a0c:	08 95       	ret

00000a0e <_ZN12OrangutanLCD8sendDataEh>:
     a0e:	28 b1       	in	r18, 0x08	; 8
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	8f 70       	andi	r24, 0x0F	; 15
     a14:	90 70       	andi	r25, 0x00	; 0
     a16:	88 0f       	add	r24, r24
     a18:	99 1f       	adc	r25, r25
     a1a:	88 0f       	add	r24, r24
     a1c:	99 1f       	adc	r25, r25
     a1e:	23 7c       	andi	r18, 0xC3	; 195
     a20:	28 2b       	or	r18, r24
     a22:	28 b9       	out	0x08, r18	; 8
     a24:	2a 9a       	sbi	0x05, 2	; 5
     a26:	0e 94 ac 04 	call	0x958	; 0x958 <delayMicroseconds.clone.0>
     a2a:	2a 98       	cbi	0x05, 2	; 5
     a2c:	0e 94 ac 04 	call	0x958	; 0x958 <delayMicroseconds.clone.0>
     a30:	08 95       	ret

00000a32 <_ZN12OrangutanLCD4sendEhhh>:
     a32:	a2 e0       	ldi	r26, 0x02	; 2
     a34:	b0 e0       	ldi	r27, 0x00	; 0
     a36:	ef e1       	ldi	r30, 0x1F	; 31
     a38:	f5 e0       	ldi	r31, 0x05	; 5
     a3a:	0c 94 c2 0c 	jmp	0x1984	; 0x1984 <__prologue_saves__+0x1a>
     a3e:	18 2f       	mov	r17, r24
     a40:	4a 83       	std	Y+2, r20	; 0x02
     a42:	69 83       	std	Y+1, r22	; 0x01
     a44:	0e 94 94 05 	call	0xb28	; 0xb28 <_ZN12OrangutanLCD4initEv>
     a48:	0e 94 b6 04 	call	0x96c	; 0x96c <_ZN12OrangutanLCD8busyWaitEv>
     a4c:	f7 b0       	in	r15, 0x07	; 7
     a4e:	08 b1       	in	r16, 0x08	; 8
     a50:	29 98       	cbi	0x05, 1	; 5
     a52:	69 81       	ldd	r22, Y+1	; 0x01
     a54:	4a 81       	ldd	r20, Y+2	; 0x02
     a56:	66 23       	and	r22, r22
     a58:	11 f0       	breq	.+4      	; 0xa5e <_ZN12OrangutanLCD4sendEhhh+0x2c>
     a5a:	28 9a       	sbi	0x05, 0	; 5
     a5c:	01 c0       	rjmp	.+2      	; 0xa60 <_ZN12OrangutanLCD4sendEhhh+0x2e>
     a5e:	28 98       	cbi	0x05, 0	; 5
     a60:	87 b1       	in	r24, 0x07	; 7
     a62:	8c 63       	ori	r24, 0x3C	; 60
     a64:	87 b9       	out	0x07, r24	; 7
     a66:	41 30       	cpi	r20, 0x01	; 1
     a68:	29 f0       	breq	.+10     	; 0xa74 <_ZN12OrangutanLCD4sendEhhh+0x42>
     a6a:	81 2f       	mov	r24, r17
     a6c:	82 95       	swap	r24
     a6e:	8f 70       	andi	r24, 0x0F	; 15
     a70:	0e 94 07 05 	call	0xa0e	; 0xa0e <_ZN12OrangutanLCD8sendDataEh>
     a74:	81 2f       	mov	r24, r17
     a76:	8f 70       	andi	r24, 0x0F	; 15
     a78:	0e 94 07 05 	call	0xa0e	; 0xa0e <_ZN12OrangutanLCD8sendDataEh>
     a7c:	f7 b8       	out	0x07, r15	; 7
     a7e:	08 b9       	out	0x08, r16	; 8
     a80:	22 96       	adiw	r28, 0x02	; 2
     a82:	e5 e0       	ldi	r30, 0x05	; 5
     a84:	0c 94 de 0c 	jmp	0x19bc	; 0x19bc <__epilogue_restores__+0x1a>

00000a88 <_ZN12OrangutanLCD8send_cmdEh>:
     a88:	60 e0       	ldi	r22, 0x00	; 0
     a8a:	42 e0       	ldi	r20, 0x02	; 2
     a8c:	0e 94 19 05 	call	0xa32	; 0xa32 <_ZN12OrangutanLCD4sendEhhh>
     a90:	08 95       	ret

00000a92 <_ZN12OrangutanLCD9send_dataEh>:
     a92:	61 e0       	ldi	r22, 0x01	; 1
     a94:	42 e0       	ldi	r20, 0x02	; 2
     a96:	0e 94 19 05 	call	0xa32	; 0xa32 <_ZN12OrangutanLCD4sendEhhh>
     a9a:	08 95       	ret

00000a9c <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     a9c:	60 e0       	ldi	r22, 0x00	; 0
     a9e:	41 e0       	ldi	r20, 0x01	; 1
     aa0:	0e 94 19 05 	call	0xa32	; 0xa32 <_ZN12OrangutanLCD4sendEhhh>
     aa4:	08 95       	ret

00000aa6 <_ZN12OrangutanLCD5init2Ev>:
     aa6:	3d 98       	cbi	0x07, 5	; 7
     aa8:	45 9a       	sbi	0x08, 5	; 8
     aaa:	80 e3       	ldi	r24, 0x30	; 48
     aac:	95 e7       	ldi	r25, 0x75	; 117
     aae:	a0 e0       	ldi	r26, 0x00	; 0
     ab0:	b0 e0       	ldi	r27, 0x00	; 0
     ab2:	80 93 4e 03 	sts	0x034E, r24
     ab6:	90 93 4f 03 	sts	0x034F, r25
     aba:	a0 93 50 03 	sts	0x0350, r26
     abe:	b0 93 51 03 	sts	0x0351, r27
     ac2:	20 9a       	sbi	0x04, 0	; 4
     ac4:	21 9a       	sbi	0x04, 1	; 4
     ac6:	22 9a       	sbi	0x04, 2	; 4
     ac8:	8e e1       	ldi	r24, 0x1E	; 30
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <delay_ms>
     ad0:	83 e0       	ldi	r24, 0x03	; 3
     ad2:	0e 94 4e 05 	call	0xa9c	; 0xa9c <_ZN12OrangutanLCD13send_4bit_cmdEh>
     ad6:	86 e0       	ldi	r24, 0x06	; 6
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <delay_ms>
     ade:	83 e0       	ldi	r24, 0x03	; 3
     ae0:	0e 94 4e 05 	call	0xa9c	; 0xa9c <_ZN12OrangutanLCD13send_4bit_cmdEh>
     ae4:	82 e0       	ldi	r24, 0x02	; 2
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <delay_ms>
     aec:	83 e0       	ldi	r24, 0x03	; 3
     aee:	0e 94 4e 05 	call	0xa9c	; 0xa9c <_ZN12OrangutanLCD13send_4bit_cmdEh>
     af2:	82 e0       	ldi	r24, 0x02	; 2
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <delay_ms>
     afa:	82 e0       	ldi	r24, 0x02	; 2
     afc:	0e 94 4e 05 	call	0xa9c	; 0xa9c <_ZN12OrangutanLCD13send_4bit_cmdEh>
     b00:	82 e0       	ldi	r24, 0x02	; 2
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <delay_ms>
     b08:	88 e2       	ldi	r24, 0x28	; 40
     b0a:	0e 94 44 05 	call	0xa88	; 0xa88 <_ZN12OrangutanLCD8send_cmdEh>
     b0e:	88 e0       	ldi	r24, 0x08	; 8
     b10:	0e 94 44 05 	call	0xa88	; 0xa88 <_ZN12OrangutanLCD8send_cmdEh>
     b14:	81 e0       	ldi	r24, 0x01	; 1
     b16:	0e 94 44 05 	call	0xa88	; 0xa88 <_ZN12OrangutanLCD8send_cmdEh>
     b1a:	86 e0       	ldi	r24, 0x06	; 6
     b1c:	0e 94 44 05 	call	0xa88	; 0xa88 <_ZN12OrangutanLCD8send_cmdEh>
     b20:	8c e0       	ldi	r24, 0x0C	; 12
     b22:	0e 94 44 05 	call	0xa88	; 0xa88 <_ZN12OrangutanLCD8send_cmdEh>
     b26:	08 95       	ret

00000b28 <_ZN12OrangutanLCD4initEv>:
     b28:	80 91 52 03 	lds	r24, 0x0352
     b2c:	88 23       	and	r24, r24
     b2e:	29 f4       	brne	.+10     	; 0xb3a <_ZN12OrangutanLCD4initEv+0x12>
     b30:	81 e0       	ldi	r24, 0x01	; 1
     b32:	80 93 52 03 	sts	0x0352, r24
     b36:	0e 94 53 05 	call	0xaa6	; 0xaa6 <_ZN12OrangutanLCD5init2Ev>
     b3a:	08 95       	ret

00000b3c <_ZN12OrangutanLCD6gotoXYEhh>:
     b3c:	a5 e0       	ldi	r26, 0x05	; 5
     b3e:	b0 e0       	ldi	r27, 0x00	; 0
     b40:	e4 ea       	ldi	r30, 0xA4	; 164
     b42:	f5 e0       	ldi	r31, 0x05	; 5
     b44:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__prologue_saves__+0x1e>
     b48:	18 2f       	mov	r17, r24
     b4a:	80 e8       	ldi	r24, 0x80	; 128
     b4c:	89 83       	std	Y+1, r24	; 0x01
     b4e:	80 ec       	ldi	r24, 0xC0	; 192
     b50:	8a 83       	std	Y+2, r24	; 0x02
     b52:	84 e9       	ldi	r24, 0x94	; 148
     b54:	8b 83       	std	Y+3, r24	; 0x03
     b56:	84 ed       	ldi	r24, 0xD4	; 212
     b58:	8c 83       	std	Y+4, r24	; 0x04
     b5a:	fe 01       	movw	r30, r28
     b5c:	e6 0f       	add	r30, r22
     b5e:	f1 1d       	adc	r31, r1
     b60:	81 81       	ldd	r24, Z+1	; 0x01
     b62:	81 0f       	add	r24, r17
     b64:	6d 83       	std	Y+5, r22	; 0x05
     b66:	0e 94 44 05 	call	0xa88	; 0xa88 <_ZN12OrangutanLCD8send_cmdEh>
     b6a:	10 93 4d 03 	sts	0x034D, r17
     b6e:	6d 81       	ldd	r22, Y+5	; 0x05
     b70:	60 93 4c 03 	sts	0x034C, r22
     b74:	25 96       	adiw	r28, 0x05	; 5
     b76:	e3 e0       	ldi	r30, 0x03	; 3
     b78:	0c 94 e0 0c 	jmp	0x19c0	; 0x19c0 <__epilogue_restores__+0x1e>

00000b7c <lcd_putchar>:
     b7c:	a0 e0       	ldi	r26, 0x00	; 0
     b7e:	b0 e0       	ldi	r27, 0x00	; 0
     b80:	e4 ec       	ldi	r30, 0xC4	; 196
     b82:	f5 e0       	ldi	r31, 0x05	; 5
     b84:	0c 94 bf 0c 	jmp	0x197e	; 0x197e <__prologue_saves__+0x14>
     b88:	d8 2e       	mov	r13, r24
     b8a:	80 91 4a 03 	lds	r24, 0x034A
     b8e:	90 91 4b 03 	lds	r25, 0x034B
     b92:	00 97       	sbiw	r24, 0x00	; 0
     b94:	09 f4       	brne	.+2      	; 0xb98 <lcd_putchar+0x1c>
     b96:	fa c0       	rjmp	.+500    	; 0xd8c <lcd_putchar+0x210>
     b98:	2d 2d       	mov	r18, r13
     b9a:	2a 30       	cpi	r18, 0x0A	; 10
     b9c:	09 f4       	brne	.+2      	; 0xba0 <lcd_putchar+0x24>
     b9e:	43 c0       	rjmp	.+134    	; 0xc26 <lcd_putchar+0xaa>
     ba0:	28 30       	cpi	r18, 0x08	; 8
     ba2:	c9 f4       	brne	.+50     	; 0xbd6 <lcd_putchar+0x5a>
     ba4:	80 91 4d 03 	lds	r24, 0x034D
     ba8:	81 50       	subi	r24, 0x01	; 1
     baa:	80 93 4d 03 	sts	0x034D, r24
     bae:	8f 3f       	cpi	r24, 0xFF	; 255
     bb0:	51 f4       	brne	.+20     	; 0xbc6 <lcd_putchar+0x4a>
     bb2:	80 91 4c 03 	lds	r24, 0x034C
     bb6:	81 50       	subi	r24, 0x01	; 1
     bb8:	80 93 4c 03 	sts	0x034C, r24
     bbc:	80 91 01 01 	lds	r24, 0x0101
     bc0:	81 50       	subi	r24, 0x01	; 1
     bc2:	80 93 4d 03 	sts	0x034D, r24
     bc6:	80 91 4c 03 	lds	r24, 0x034C
     bca:	8f 3f       	cpi	r24, 0xFF	; 255
     bcc:	09 f0       	breq	.+2      	; 0xbd0 <lcd_putchar+0x54>
     bce:	d8 c0       	rjmp	.+432    	; 0xd80 <lcd_putchar+0x204>
     bd0:	10 92 4c 03 	sts	0x034C, r1
     bd4:	d3 c0       	rjmp	.+422    	; 0xd7c <lcd_putchar+0x200>
     bd6:	8d 2d       	mov	r24, r13
     bd8:	0e 94 49 05 	call	0xa92	; 0xa92 <_ZN12OrangutanLCD9send_dataEh>
     bdc:	80 91 4c 03 	lds	r24, 0x034C
     be0:	88 23       	and	r24, r24
     be2:	b9 f0       	breq	.+46     	; 0xc12 <lcd_putchar+0x96>
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	01 97       	sbiw	r24, 0x01	; 1
     be8:	40 91 01 01 	lds	r20, 0x0101
     bec:	50 e0       	ldi	r21, 0x00	; 0
     bee:	84 9f       	mul	r24, r20
     bf0:	90 01       	movw	r18, r0
     bf2:	85 9f       	mul	r24, r21
     bf4:	30 0d       	add	r19, r0
     bf6:	94 9f       	mul	r25, r20
     bf8:	30 0d       	add	r19, r0
     bfa:	11 24       	eor	r1, r1
     bfc:	80 91 4d 03 	lds	r24, 0x034D
     c00:	e0 91 4a 03 	lds	r30, 0x034A
     c04:	f0 91 4b 03 	lds	r31, 0x034B
     c08:	e2 0f       	add	r30, r18
     c0a:	f3 1f       	adc	r31, r19
     c0c:	e8 0f       	add	r30, r24
     c0e:	f1 1d       	adc	r31, r1
     c10:	d0 82       	st	Z, r13
     c12:	80 91 4d 03 	lds	r24, 0x034D
     c16:	8f 5f       	subi	r24, 0xFF	; 255
     c18:	80 93 4d 03 	sts	0x034D, r24
     c1c:	90 91 01 01 	lds	r25, 0x0101
     c20:	89 17       	cp	r24, r25
     c22:	09 f0       	breq	.+2      	; 0xc26 <lcd_putchar+0xaa>
     c24:	b3 c0       	rjmp	.+358    	; 0xd8c <lcd_putchar+0x210>
     c26:	40 91 4c 03 	lds	r20, 0x034C
     c2a:	24 2f       	mov	r18, r20
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	80 91 00 01 	lds	r24, 0x0100
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	01 97       	sbiw	r24, 0x01	; 1
     c36:	28 17       	cp	r18, r24
     c38:	39 07       	cpc	r19, r25
     c3a:	09 f0       	breq	.+2      	; 0xc3e <lcd_putchar+0xc2>
     c3c:	9c c0       	rjmp	.+312    	; 0xd76 <lcd_putchar+0x1fa>
     c3e:	c0 e0       	ldi	r28, 0x00	; 0
     c40:	d0 e0       	ldi	r29, 0x00	; 0
     c42:	41 c0       	rjmp	.+130    	; 0xcc6 <lcd_putchar+0x14a>
     c44:	80 e0       	ldi	r24, 0x00	; 0
     c46:	6c 2f       	mov	r22, r28
     c48:	0e 94 9e 05 	call	0xb3c	; 0xb3c <_ZN12OrangutanLCD6gotoXYEhh>
     c4c:	cc 24       	eor	r12, r12
     c4e:	8e 01       	movw	r16, r28
     c50:	0f 5f       	subi	r16, 0xFF	; 255
     c52:	1f 4f       	sbci	r17, 0xFF	; 255
     c54:	33 c0       	rjmp	.+102    	; 0xcbc <lcd_putchar+0x140>
     c56:	ec 2c       	mov	r14, r12
     c58:	ff 24       	eor	r15, r15
     c5a:	30 e0       	ldi	r19, 0x00	; 0
     c5c:	c2 9f       	mul	r28, r18
     c5e:	c0 01       	movw	r24, r0
     c60:	c3 9f       	mul	r28, r19
     c62:	90 0d       	add	r25, r0
     c64:	d2 9f       	mul	r29, r18
     c66:	90 0d       	add	r25, r0
     c68:	11 24       	eor	r1, r1
     c6a:	e0 91 4a 03 	lds	r30, 0x034A
     c6e:	f0 91 4b 03 	lds	r31, 0x034B
     c72:	ee 0d       	add	r30, r14
     c74:	ff 1d       	adc	r31, r15
     c76:	e8 0f       	add	r30, r24
     c78:	f9 1f       	adc	r31, r25
     c7a:	80 81       	ld	r24, Z
     c7c:	0e 94 49 05 	call	0xa92	; 0xa92 <_ZN12OrangutanLCD9send_dataEh>
     c80:	80 91 4a 03 	lds	r24, 0x034A
     c84:	90 91 4b 03 	lds	r25, 0x034B
     c88:	20 91 01 01 	lds	r18, 0x0101
     c8c:	30 e0       	ldi	r19, 0x00	; 0
     c8e:	c2 9f       	mul	r28, r18
     c90:	f0 01       	movw	r30, r0
     c92:	c3 9f       	mul	r28, r19
     c94:	f0 0d       	add	r31, r0
     c96:	d2 9f       	mul	r29, r18
     c98:	f0 0d       	add	r31, r0
     c9a:	11 24       	eor	r1, r1
     c9c:	8e 0d       	add	r24, r14
     c9e:	9f 1d       	adc	r25, r15
     ca0:	e8 0f       	add	r30, r24
     ca2:	f9 1f       	adc	r31, r25
     ca4:	02 9f       	mul	r16, r18
     ca6:	d0 01       	movw	r26, r0
     ca8:	03 9f       	mul	r16, r19
     caa:	b0 0d       	add	r27, r0
     cac:	12 9f       	mul	r17, r18
     cae:	b0 0d       	add	r27, r0
     cb0:	11 24       	eor	r1, r1
     cb2:	a8 0f       	add	r26, r24
     cb4:	b9 1f       	adc	r27, r25
     cb6:	8c 91       	ld	r24, X
     cb8:	80 83       	st	Z, r24
     cba:	c3 94       	inc	r12
     cbc:	20 91 01 01 	lds	r18, 0x0101
     cc0:	c2 16       	cp	r12, r18
     cc2:	48 f2       	brcs	.-110    	; 0xc56 <lcd_putchar+0xda>
     cc4:	e8 01       	movw	r28, r16
     cc6:	60 91 00 01 	lds	r22, 0x0100
     cca:	86 2f       	mov	r24, r22
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	02 97       	sbiw	r24, 0x02	; 2
     cd0:	c8 17       	cp	r28, r24
     cd2:	d9 07       	cpc	r29, r25
     cd4:	0c f4       	brge	.+2      	; 0xcd8 <lcd_putchar+0x15c>
     cd6:	b6 cf       	rjmp	.-148    	; 0xc44 <lcd_putchar+0xc8>
     cd8:	62 30       	cpi	r22, 0x02	; 2
     cda:	e0 f1       	brcs	.+120    	; 0xd54 <lcd_putchar+0x1d8>
     cdc:	62 50       	subi	r22, 0x02	; 2
     cde:	80 e0       	ldi	r24, 0x00	; 0
     ce0:	0e 94 9e 05 	call	0xb3c	; 0xb3c <_ZN12OrangutanLCD6gotoXYEhh>
     ce4:	00 e0       	ldi	r16, 0x00	; 0
     ce6:	10 e2       	ldi	r17, 0x20	; 32
     ce8:	31 c0       	rjmp	.+98     	; 0xd4c <lcd_putchar+0x1d0>
     cea:	c0 2f       	mov	r28, r16
     cec:	d0 e0       	ldi	r29, 0x00	; 0
     cee:	80 91 00 01 	lds	r24, 0x0100
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	02 97       	sbiw	r24, 0x02	; 2
     cf6:	50 e0       	ldi	r21, 0x00	; 0
     cf8:	84 9f       	mul	r24, r20
     cfa:	90 01       	movw	r18, r0
     cfc:	85 9f       	mul	r24, r21
     cfe:	30 0d       	add	r19, r0
     d00:	94 9f       	mul	r25, r20
     d02:	30 0d       	add	r19, r0
     d04:	11 24       	eor	r1, r1
     d06:	e0 91 4a 03 	lds	r30, 0x034A
     d0a:	f0 91 4b 03 	lds	r31, 0x034B
     d0e:	ec 0f       	add	r30, r28
     d10:	fd 1f       	adc	r31, r29
     d12:	e2 0f       	add	r30, r18
     d14:	f3 1f       	adc	r31, r19
     d16:	80 81       	ld	r24, Z
     d18:	0e 94 49 05 	call	0xa92	; 0xa92 <_ZN12OrangutanLCD9send_dataEh>
     d1c:	80 91 00 01 	lds	r24, 0x0100
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	02 97       	sbiw	r24, 0x02	; 2
     d24:	40 91 01 01 	lds	r20, 0x0101
     d28:	50 e0       	ldi	r21, 0x00	; 0
     d2a:	84 9f       	mul	r24, r20
     d2c:	90 01       	movw	r18, r0
     d2e:	85 9f       	mul	r24, r21
     d30:	30 0d       	add	r19, r0
     d32:	94 9f       	mul	r25, r20
     d34:	30 0d       	add	r19, r0
     d36:	11 24       	eor	r1, r1
     d38:	e0 91 4a 03 	lds	r30, 0x034A
     d3c:	f0 91 4b 03 	lds	r31, 0x034B
     d40:	ec 0f       	add	r30, r28
     d42:	fd 1f       	adc	r31, r29
     d44:	e2 0f       	add	r30, r18
     d46:	f3 1f       	adc	r31, r19
     d48:	10 83       	st	Z, r17
     d4a:	0f 5f       	subi	r16, 0xFF	; 255
     d4c:	40 91 01 01 	lds	r20, 0x0101
     d50:	04 17       	cp	r16, r20
     d52:	58 f2       	brcs	.-106    	; 0xcea <lcd_putchar+0x16e>
     d54:	60 91 00 01 	lds	r22, 0x0100
     d58:	61 50       	subi	r22, 0x01	; 1
     d5a:	80 e0       	ldi	r24, 0x00	; 0
     d5c:	0e 94 9e 05 	call	0xb3c	; 0xb3c <_ZN12OrangutanLCD6gotoXYEhh>
     d60:	10 e0       	ldi	r17, 0x00	; 0
     d62:	04 c0       	rjmp	.+8      	; 0xd6c <lcd_putchar+0x1f0>
     d64:	80 e2       	ldi	r24, 0x20	; 32
     d66:	0e 94 49 05 	call	0xa92	; 0xa92 <_ZN12OrangutanLCD9send_dataEh>
     d6a:	1f 5f       	subi	r17, 0xFF	; 255
     d6c:	80 91 01 01 	lds	r24, 0x0101
     d70:	18 17       	cp	r17, r24
     d72:	c0 f3       	brcs	.-16     	; 0xd64 <lcd_putchar+0x1e8>
     d74:	03 c0       	rjmp	.+6      	; 0xd7c <lcd_putchar+0x200>
     d76:	4f 5f       	subi	r20, 0xFF	; 255
     d78:	40 93 4c 03 	sts	0x034C, r20
     d7c:	10 92 4d 03 	sts	0x034D, r1
     d80:	80 91 4d 03 	lds	r24, 0x034D
     d84:	60 91 4c 03 	lds	r22, 0x034C
     d88:	0e 94 9e 05 	call	0xb3c	; 0xb3c <_ZN12OrangutanLCD6gotoXYEhh>
     d8c:	2d 2d       	mov	r18, r13
     d8e:	33 27       	eor	r19, r19
     d90:	27 fd       	sbrc	r18, 7
     d92:	30 95       	com	r19
     d94:	c9 01       	movw	r24, r18
     d96:	cd b7       	in	r28, 0x3d	; 61
     d98:	de b7       	in	r29, 0x3e	; 62
     d9a:	e8 e0       	ldi	r30, 0x08	; 8
     d9c:	0c 94 db 0c 	jmp	0x19b6	; 0x19b6 <__epilogue_restores__+0x14>

00000da0 <_ZN12OrangutanLCD10initPrintfEv>:
     da0:	80 91 4a 03 	lds	r24, 0x034A
     da4:	90 91 4b 03 	lds	r25, 0x034B
     da8:	00 97       	sbiw	r24, 0x00	; 0
     daa:	11 f0       	breq	.+4      	; 0xdb0 <_ZN12OrangutanLCD10initPrintfEv+0x10>
     dac:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <free>
     db0:	20 91 00 01 	lds	r18, 0x0100
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	21 50       	subi	r18, 0x01	; 1
     db8:	30 40       	sbci	r19, 0x00	; 0
     dba:	80 91 01 01 	lds	r24, 0x0101
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	ac 01       	movw	r20, r24
     dc2:	24 9f       	mul	r18, r20
     dc4:	c0 01       	movw	r24, r0
     dc6:	25 9f       	mul	r18, r21
     dc8:	90 0d       	add	r25, r0
     dca:	34 9f       	mul	r19, r20
     dcc:	90 0d       	add	r25, r0
     dce:	11 24       	eor	r1, r1
     dd0:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <malloc>
     dd4:	90 93 4b 03 	sts	0x034B, r25
     dd8:	80 93 4a 03 	sts	0x034A, r24
     ddc:	00 97       	sbiw	r24, 0x00	; 0
     dde:	21 f1       	breq	.+72     	; 0xe28 <_ZN12OrangutanLCD10initPrintfEv+0x88>
     de0:	a0 e0       	ldi	r26, 0x00	; 0
     de2:	b0 e2       	ldi	r27, 0x20	; 32
     de4:	08 c0       	rjmp	.+16     	; 0xdf6 <_ZN12OrangutanLCD10initPrintfEv+0x56>
     de6:	e0 91 4a 03 	lds	r30, 0x034A
     dea:	f0 91 4b 03 	lds	r31, 0x034B
     dee:	e2 0f       	add	r30, r18
     df0:	f3 1f       	adc	r31, r19
     df2:	b0 83       	st	Z, r27
     df4:	af 5f       	subi	r26, 0xFF	; 255
     df6:	2a 2f       	mov	r18, r26
     df8:	30 e0       	ldi	r19, 0x00	; 0
     dfa:	80 91 00 01 	lds	r24, 0x0100
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	01 97       	sbiw	r24, 0x01	; 1
     e02:	60 91 01 01 	lds	r22, 0x0101
     e06:	70 e0       	ldi	r23, 0x00	; 0
     e08:	86 9f       	mul	r24, r22
     e0a:	a0 01       	movw	r20, r0
     e0c:	87 9f       	mul	r24, r23
     e0e:	50 0d       	add	r21, r0
     e10:	96 9f       	mul	r25, r22
     e12:	50 0d       	add	r21, r0
     e14:	11 24       	eor	r1, r1
     e16:	24 17       	cp	r18, r20
     e18:	35 07       	cpc	r19, r21
     e1a:	2c f3       	brlt	.-54     	; 0xde6 <_ZN12OrangutanLCD10initPrintfEv+0x46>
     e1c:	8e eb       	ldi	r24, 0xBE	; 190
     e1e:	95 e0       	ldi	r25, 0x05	; 5
     e20:	69 ea       	ldi	r22, 0xA9	; 169
     e22:	74 e0       	ldi	r23, 0x04	; 4
     e24:	0e 94 22 0e 	call	0x1c44	; 0x1c44 <fdevopen>
     e28:	08 95       	ret

00000e2a <lcd_init_printf>:
     e2a:	0e 94 d0 06 	call	0xda0	; 0xda0 <_ZN12OrangutanLCD10initPrintfEv>
     e2e:	08 95       	ret

00000e30 <serial_get_received_bytes>:
     e30:	28 2f       	mov	r18, r24
     e32:	30 e0       	ldi	r19, 0x00	; 0
     e34:	f9 01       	movw	r30, r18
     e36:	ee 0f       	add	r30, r30
     e38:	ff 1f       	adc	r31, r31
     e3a:	43 e0       	ldi	r20, 0x03	; 3
     e3c:	22 0f       	add	r18, r18
     e3e:	33 1f       	adc	r19, r19
     e40:	4a 95       	dec	r20
     e42:	e1 f7       	brne	.-8      	; 0xe3c <serial_get_received_bytes+0xc>
     e44:	e2 0f       	add	r30, r18
     e46:	f3 1f       	adc	r31, r19
     e48:	ee 5f       	subi	r30, 0xFE	; 254
     e4a:	fe 4f       	sbci	r31, 0xFE	; 254
     e4c:	82 81       	ldd	r24, Z+2	; 0x02
     e4e:	08 95       	ret

00000e50 <serial_send_buffer_empty>:
     e50:	28 2f       	mov	r18, r24
     e52:	30 e0       	ldi	r19, 0x00	; 0
     e54:	f9 01       	movw	r30, r18
     e56:	ee 0f       	add	r30, r30
     e58:	ff 1f       	adc	r31, r31
     e5a:	73 e0       	ldi	r23, 0x03	; 3
     e5c:	22 0f       	add	r18, r18
     e5e:	33 1f       	adc	r19, r19
     e60:	7a 95       	dec	r23
     e62:	e1 f7       	brne	.-8      	; 0xe5c <serial_send_buffer_empty+0xc>
     e64:	e2 0f       	add	r30, r18
     e66:	f3 1f       	adc	r31, r19
     e68:	ee 5f       	subi	r30, 0xFE	; 254
     e6a:	fe 4f       	sbci	r31, 0xFE	; 254
     e6c:	41 81       	ldd	r20, Z+1	; 0x01
     e6e:	28 2f       	mov	r18, r24
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	f9 01       	movw	r30, r18
     e74:	ee 0f       	add	r30, r30
     e76:	ff 1f       	adc	r31, r31
     e78:	53 e0       	ldi	r21, 0x03	; 3
     e7a:	22 0f       	add	r18, r18
     e7c:	33 1f       	adc	r19, r19
     e7e:	5a 95       	dec	r21
     e80:	e1 f7       	brne	.-8      	; 0xe7a <serial_send_buffer_empty+0x2a>
     e82:	e2 0f       	add	r30, r18
     e84:	f3 1f       	adc	r31, r19
     e86:	ee 5f       	subi	r30, 0xFE	; 254
     e88:	fe 4f       	sbci	r31, 0xFE	; 254
     e8a:	81 e0       	ldi	r24, 0x01	; 1
     e8c:	93 81       	ldd	r25, Z+3	; 0x03
     e8e:	49 13       	cpse	r20, r25
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	08 95       	ret

00000e94 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
     e94:	28 2f       	mov	r18, r24
     e96:	30 e0       	ldi	r19, 0x00	; 0
     e98:	f9 01       	movw	r30, r18
     e9a:	ee 0f       	add	r30, r30
     e9c:	ff 1f       	adc	r31, r31
     e9e:	b3 e0       	ldi	r27, 0x03	; 3
     ea0:	22 0f       	add	r18, r18
     ea2:	33 1f       	adc	r19, r19
     ea4:	ba 95       	dec	r27
     ea6:	e1 f7       	brne	.-8      	; 0xea0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xc>
     ea8:	e2 0f       	add	r30, r18
     eaa:	f3 1f       	adc	r31, r19
     eac:	ee 5f       	subi	r30, 0xFE	; 254
     eae:	fe 4f       	sbci	r31, 0xFE	; 254
     eb0:	40 85       	ldd	r20, Z+8	; 0x08
     eb2:	51 85       	ldd	r21, Z+9	; 0x09
     eb4:	41 15       	cp	r20, r1
     eb6:	51 05       	cpc	r21, r1
     eb8:	09 f4       	brne	.+2      	; 0xebc <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x28>
     eba:	52 c0       	rjmp	.+164    	; 0xf60 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xcc>
     ebc:	28 2f       	mov	r18, r24
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	f9 01       	movw	r30, r18
     ec2:	ee 0f       	add	r30, r30
     ec4:	ff 1f       	adc	r31, r31
     ec6:	73 e0       	ldi	r23, 0x03	; 3
     ec8:	22 0f       	add	r18, r18
     eca:	33 1f       	adc	r19, r19
     ecc:	7a 95       	dec	r23
     ece:	e1 f7       	brne	.-8      	; 0xec8 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x34>
     ed0:	e2 0f       	add	r30, r18
     ed2:	f3 1f       	adc	r31, r19
     ed4:	ee 5f       	subi	r30, 0xFE	; 254
     ed6:	fe 4f       	sbci	r31, 0xFE	; 254
     ed8:	72 81       	ldd	r23, Z+2	; 0x02
     eda:	28 2f       	mov	r18, r24
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	f9 01       	movw	r30, r18
     ee0:	ee 0f       	add	r30, r30
     ee2:	ff 1f       	adc	r31, r31
     ee4:	b3 e0       	ldi	r27, 0x03	; 3
     ee6:	22 0f       	add	r18, r18
     ee8:	33 1f       	adc	r19, r19
     eea:	ba 95       	dec	r27
     eec:	e1 f7       	brne	.-8      	; 0xee6 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
     eee:	e2 0f       	add	r30, r18
     ef0:	f3 1f       	adc	r31, r19
     ef2:	ee 5f       	subi	r30, 0xFE	; 254
     ef4:	fe 4f       	sbci	r31, 0xFE	; 254
     ef6:	94 81       	ldd	r25, Z+4	; 0x04
     ef8:	79 17       	cp	r23, r25
     efa:	90 f5       	brcc	.+100    	; 0xf60 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xcc>
     efc:	28 2f       	mov	r18, r24
     efe:	30 e0       	ldi	r19, 0x00	; 0
     f00:	f9 01       	movw	r30, r18
     f02:	ee 0f       	add	r30, r30
     f04:	ff 1f       	adc	r31, r31
     f06:	73 e0       	ldi	r23, 0x03	; 3
     f08:	22 0f       	add	r18, r18
     f0a:	33 1f       	adc	r19, r19
     f0c:	7a 95       	dec	r23
     f0e:	e1 f7       	brne	.-8      	; 0xf08 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x74>
     f10:	e2 0f       	add	r30, r18
     f12:	f3 1f       	adc	r31, r19
     f14:	ee 5f       	subi	r30, 0xFE	; 254
     f16:	fe 4f       	sbci	r31, 0xFE	; 254
     f18:	92 81       	ldd	r25, Z+2	; 0x02
     f1a:	49 0f       	add	r20, r25
     f1c:	51 1d       	adc	r21, r1
     f1e:	fa 01       	movw	r30, r20
     f20:	60 83       	st	Z, r22
     f22:	28 2f       	mov	r18, r24
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	f9 01       	movw	r30, r18
     f28:	ee 0f       	add	r30, r30
     f2a:	ff 1f       	adc	r31, r31
     f2c:	53 e0       	ldi	r21, 0x03	; 3
     f2e:	22 0f       	add	r18, r18
     f30:	33 1f       	adc	r19, r19
     f32:	5a 95       	dec	r21
     f34:	e1 f7       	brne	.-8      	; 0xf2e <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x9a>
     f36:	e2 0f       	add	r30, r18
     f38:	f3 1f       	adc	r31, r19
     f3a:	ee 5f       	subi	r30, 0xFE	; 254
     f3c:	fe 4f       	sbci	r31, 0xFE	; 254
     f3e:	92 81       	ldd	r25, Z+2	; 0x02
     f40:	9f 5f       	subi	r25, 0xFF	; 255
     f42:	28 2f       	mov	r18, r24
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	f9 01       	movw	r30, r18
     f48:	ee 0f       	add	r30, r30
     f4a:	ff 1f       	adc	r31, r31
     f4c:	b3 e0       	ldi	r27, 0x03	; 3
     f4e:	22 0f       	add	r18, r18
     f50:	33 1f       	adc	r19, r19
     f52:	ba 95       	dec	r27
     f54:	e1 f7       	brne	.-8      	; 0xf4e <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xba>
     f56:	e2 0f       	add	r30, r18
     f58:	f3 1f       	adc	r31, r19
     f5a:	ee 5f       	subi	r30, 0xFE	; 254
     f5c:	fe 4f       	sbci	r31, 0xFE	; 254
     f5e:	92 83       	std	Z+2, r25	; 0x02
     f60:	28 2f       	mov	r18, r24
     f62:	30 e0       	ldi	r19, 0x00	; 0
     f64:	f9 01       	movw	r30, r18
     f66:	ee 0f       	add	r30, r30
     f68:	ff 1f       	adc	r31, r31
     f6a:	73 e0       	ldi	r23, 0x03	; 3
     f6c:	22 0f       	add	r18, r18
     f6e:	33 1f       	adc	r19, r19
     f70:	7a 95       	dec	r23
     f72:	e1 f7       	brne	.-8      	; 0xf6c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xd8>
     f74:	e2 0f       	add	r30, r18
     f76:	f3 1f       	adc	r31, r19
     f78:	ee 5f       	subi	r30, 0xFE	; 254
     f7a:	fe 4f       	sbci	r31, 0xFE	; 254
     f7c:	42 81       	ldd	r20, Z+2	; 0x02
     f7e:	28 2f       	mov	r18, r24
     f80:	30 e0       	ldi	r19, 0x00	; 0
     f82:	f9 01       	movw	r30, r18
     f84:	ee 0f       	add	r30, r30
     f86:	ff 1f       	adc	r31, r31
     f88:	53 e0       	ldi	r21, 0x03	; 3
     f8a:	22 0f       	add	r18, r18
     f8c:	33 1f       	adc	r19, r19
     f8e:	5a 95       	dec	r21
     f90:	e1 f7       	brne	.-8      	; 0xf8a <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xf6>
     f92:	e2 0f       	add	r30, r18
     f94:	f3 1f       	adc	r31, r19
     f96:	ee 5f       	subi	r30, 0xFE	; 254
     f98:	fe 4f       	sbci	r31, 0xFE	; 254
     f9a:	94 81       	ldd	r25, Z+4	; 0x04
     f9c:	49 17       	cp	r20, r25
     f9e:	01 f5       	brne	.+64     	; 0xfe0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x14c>
     fa0:	28 2f       	mov	r18, r24
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	f9 01       	movw	r30, r18
     fa6:	ee 0f       	add	r30, r30
     fa8:	ff 1f       	adc	r31, r31
     faa:	93 e0       	ldi	r25, 0x03	; 3
     fac:	22 0f       	add	r18, r18
     fae:	33 1f       	adc	r19, r19
     fb0:	9a 95       	dec	r25
     fb2:	e1 f7       	brne	.-8      	; 0xfac <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x118>
     fb4:	e2 0f       	add	r30, r18
     fb6:	f3 1f       	adc	r31, r19
     fb8:	ee 5f       	subi	r30, 0xFE	; 254
     fba:	fe 4f       	sbci	r31, 0xFE	; 254
     fbc:	95 81       	ldd	r25, Z+5	; 0x05
     fbe:	99 23       	and	r25, r25
     fc0:	79 f0       	breq	.+30     	; 0xfe0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x14c>
     fc2:	28 2f       	mov	r18, r24
     fc4:	30 e0       	ldi	r19, 0x00	; 0
     fc6:	f9 01       	movw	r30, r18
     fc8:	ee 0f       	add	r30, r30
     fca:	ff 1f       	adc	r31, r31
     fcc:	b3 e0       	ldi	r27, 0x03	; 3
     fce:	22 0f       	add	r18, r18
     fd0:	33 1f       	adc	r19, r19
     fd2:	ba 95       	dec	r27
     fd4:	e1 f7       	brne	.-8      	; 0xfce <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x13a>
     fd6:	e2 0f       	add	r30, r18
     fd8:	f3 1f       	adc	r31, r19
     fda:	ee 5f       	subi	r30, 0xFE	; 254
     fdc:	fe 4f       	sbci	r31, 0xFE	; 254
     fde:	12 82       	std	Z+2, r1	; 0x02
     fe0:	08 95       	ret

00000fe2 <_ZN15OrangutanSerial15serial_rx_checkEh>:
     fe2:	0f 93       	push	r16
     fe4:	1f 93       	push	r17
     fe6:	18 2f       	mov	r17, r24
     fe8:	82 30       	cpi	r24, 0x02	; 2
     fea:	09 f4       	brne	.+2      	; 0xfee <_ZN15OrangutanSerial15serial_rx_checkEh+0xc>
     fec:	75 c0       	rjmp	.+234    	; 0x10d8 <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
     fee:	88 23       	and	r24, r24
     ff0:	19 f4       	brne	.+6      	; 0xff8 <_ZN15OrangutanSerial15serial_rx_checkEh+0x16>
     ff2:	e1 ec       	ldi	r30, 0xC1	; 193
     ff4:	f0 e0       	ldi	r31, 0x00	; 0
     ff6:	02 c0       	rjmp	.+4      	; 0xffc <_ZN15OrangutanSerial15serial_rx_checkEh+0x1a>
     ff8:	e9 ec       	ldi	r30, 0xC9	; 201
     ffa:	f0 e0       	ldi	r31, 0x00	; 0
     ffc:	80 81       	ld	r24, Z
     ffe:	8f 77       	andi	r24, 0x7F	; 127
    1000:	80 83       	st	Z, r24
    1002:	81 2f       	mov	r24, r17
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	fc 01       	movw	r30, r24
    1008:	ee 0f       	add	r30, r30
    100a:	ff 1f       	adc	r31, r31
    100c:	03 e0       	ldi	r16, 0x03	; 3
    100e:	88 0f       	add	r24, r24
    1010:	99 1f       	adc	r25, r25
    1012:	0a 95       	dec	r16
    1014:	e1 f7       	brne	.-8      	; 0x100e <_ZN15OrangutanSerial15serial_rx_checkEh+0x2c>
    1016:	e8 0f       	add	r30, r24
    1018:	f9 1f       	adc	r31, r25
    101a:	ee 5f       	subi	r30, 0xFE	; 254
    101c:	fe 4f       	sbci	r31, 0xFE	; 254
    101e:	80 85       	ldd	r24, Z+8	; 0x08
    1020:	91 85       	ldd	r25, Z+9	; 0x09
    1022:	00 97       	sbiw	r24, 0x00	; 0
    1024:	a9 f1       	breq	.+106    	; 0x1090 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    1026:	21 2f       	mov	r18, r17
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	f9 01       	movw	r30, r18
    102c:	ee 0f       	add	r30, r30
    102e:	ff 1f       	adc	r31, r31
    1030:	a3 e0       	ldi	r26, 0x03	; 3
    1032:	22 0f       	add	r18, r18
    1034:	33 1f       	adc	r19, r19
    1036:	aa 95       	dec	r26
    1038:	e1 f7       	brne	.-8      	; 0x1032 <_ZN15OrangutanSerial15serial_rx_checkEh+0x50>
    103a:	e2 0f       	add	r30, r18
    103c:	f3 1f       	adc	r31, r19
    103e:	ee 5f       	subi	r30, 0xFE	; 254
    1040:	fe 4f       	sbci	r31, 0xFE	; 254
    1042:	92 81       	ldd	r25, Z+2	; 0x02
    1044:	21 2f       	mov	r18, r17
    1046:	30 e0       	ldi	r19, 0x00	; 0
    1048:	f9 01       	movw	r30, r18
    104a:	ee 0f       	add	r30, r30
    104c:	ff 1f       	adc	r31, r31
    104e:	63 e0       	ldi	r22, 0x03	; 3
    1050:	22 0f       	add	r18, r18
    1052:	33 1f       	adc	r19, r19
    1054:	6a 95       	dec	r22
    1056:	e1 f7       	brne	.-8      	; 0x1050 <_ZN15OrangutanSerial15serial_rx_checkEh+0x6e>
    1058:	e2 0f       	add	r30, r18
    105a:	f3 1f       	adc	r31, r19
    105c:	ee 5f       	subi	r30, 0xFE	; 254
    105e:	fe 4f       	sbci	r31, 0xFE	; 254
    1060:	84 81       	ldd	r24, Z+4	; 0x04
    1062:	98 17       	cp	r25, r24
    1064:	a8 f4       	brcc	.+42     	; 0x1090 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    1066:	11 23       	and	r17, r17
    1068:	19 f4       	brne	.+6      	; 0x1070 <_ZN15OrangutanSerial15serial_rx_checkEh+0x8e>
    106a:	e0 ec       	ldi	r30, 0xC0	; 192
    106c:	f0 e0       	ldi	r31, 0x00	; 0
    106e:	02 c0       	rjmp	.+4      	; 0x1074 <_ZN15OrangutanSerial15serial_rx_checkEh+0x92>
    1070:	e8 ec       	ldi	r30, 0xC8	; 200
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	80 81       	ld	r24, Z
    1076:	87 ff       	sbrs	r24, 7
    1078:	0b c0       	rjmp	.+22     	; 0x1090 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    107a:	11 23       	and	r17, r17
    107c:	19 f4       	brne	.+6      	; 0x1084 <_ZN15OrangutanSerial15serial_rx_checkEh+0xa2>
    107e:	e6 ec       	ldi	r30, 0xC6	; 198
    1080:	f0 e0       	ldi	r31, 0x00	; 0
    1082:	02 c0       	rjmp	.+4      	; 0x1088 <_ZN15OrangutanSerial15serial_rx_checkEh+0xa6>
    1084:	ee ec       	ldi	r30, 0xCE	; 206
    1086:	f0 e0       	ldi	r31, 0x00	; 0
    1088:	60 81       	ld	r22, Z
    108a:	81 2f       	mov	r24, r17
    108c:	0e 94 4a 07 	call	0xe94	; 0xe94 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    1090:	21 2f       	mov	r18, r17
    1092:	30 e0       	ldi	r19, 0x00	; 0
    1094:	f9 01       	movw	r30, r18
    1096:	ee 0f       	add	r30, r30
    1098:	ff 1f       	adc	r31, r31
    109a:	43 e0       	ldi	r20, 0x03	; 3
    109c:	22 0f       	add	r18, r18
    109e:	33 1f       	adc	r19, r19
    10a0:	4a 95       	dec	r20
    10a2:	e1 f7       	brne	.-8      	; 0x109c <_ZN15OrangutanSerial15serial_rx_checkEh+0xba>
    10a4:	e2 0f       	add	r30, r18
    10a6:	f3 1f       	adc	r31, r19
    10a8:	ee 5f       	subi	r30, 0xFE	; 254
    10aa:	fe 4f       	sbci	r31, 0xFE	; 254
    10ac:	80 81       	ld	r24, Z
    10ae:	88 23       	and	r24, r24
    10b0:	09 f0       	breq	.+2      	; 0x10b4 <_ZN15OrangutanSerial15serial_rx_checkEh+0xd2>
    10b2:	59 c0       	rjmp	.+178    	; 0x1166 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    10b4:	11 23       	and	r17, r17
    10b6:	19 f4       	brne	.+6      	; 0x10be <_ZN15OrangutanSerial15serial_rx_checkEh+0xdc>
    10b8:	e1 ec       	ldi	r30, 0xC1	; 193
    10ba:	f0 e0       	ldi	r31, 0x00	; 0
    10bc:	02 c0       	rjmp	.+4      	; 0x10c2 <_ZN15OrangutanSerial15serial_rx_checkEh+0xe0>
    10be:	e9 ec       	ldi	r30, 0xC9	; 201
    10c0:	f0 e0       	ldi	r31, 0x00	; 0
    10c2:	80 81       	ld	r24, Z
    10c4:	80 68       	ori	r24, 0x80	; 128
    10c6:	80 83       	st	Z, r24
    10c8:	4e c0       	rjmp	.+156    	; 0x1166 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    10ca:	80 91 1b 01 	lds	r24, 0x011B
    10ce:	88 23       	and	r24, r24
    10d0:	19 f0       	breq	.+6      	; 0x10d8 <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
    10d2:	10 92 18 01 	sts	0x0118, r1
    10d6:	47 c0       	rjmp	.+142    	; 0x1166 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    10d8:	80 91 1e 01 	lds	r24, 0x011E
    10dc:	90 91 1f 01 	lds	r25, 0x011F
    10e0:	00 97       	sbiw	r24, 0x00	; 0
    10e2:	09 f4       	brne	.+2      	; 0x10e6 <_ZN15OrangutanSerial15serial_rx_checkEh+0x104>
    10e4:	40 c0       	rjmp	.+128    	; 0x1166 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    10e6:	90 91 18 01 	lds	r25, 0x0118
    10ea:	80 91 1a 01 	lds	r24, 0x011A
    10ee:	98 17       	cp	r25, r24
    10f0:	d0 f5       	brcc	.+116    	; 0x1166 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    10f2:	80 91 53 03 	lds	r24, 0x0353
    10f6:	88 23       	and	r24, r24
    10f8:	a9 f4       	brne	.+42     	; 0x1124 <_ZN15OrangutanSerial15serial_rx_checkEh+0x142>
    10fa:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <_ZN12OrangutanSVP15serialReadStartEv>
    10fe:	80 93 53 03 	sts	0x0353, r24
    1102:	10 e0       	ldi	r17, 0x00	; 0
    1104:	0b c0       	rjmp	.+22     	; 0x111c <_ZN15OrangutanSerial15serial_rx_checkEh+0x13a>
    1106:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <_ZN12OrangutanSVP11getNextByteEv>
    110a:	e0 2f       	mov	r30, r16
    110c:	f0 e0       	ldi	r31, 0x00	; 0
    110e:	31 97       	sbiw	r30, 0x01	; 1
    1110:	e1 1b       	sub	r30, r17
    1112:	f1 09       	sbc	r31, r1
    1114:	ec 5a       	subi	r30, 0xAC	; 172
    1116:	fc 4f       	sbci	r31, 0xFC	; 252
    1118:	80 83       	st	Z, r24
    111a:	1f 5f       	subi	r17, 0xFF	; 255
    111c:	00 91 53 03 	lds	r16, 0x0353
    1120:	10 17       	cp	r17, r16
    1122:	88 f3       	brcs	.-30     	; 0x1106 <_ZN15OrangutanSerial15serial_rx_checkEh+0x124>
    1124:	a0 91 53 03 	lds	r26, 0x0353
    1128:	aa 23       	and	r26, r26
    112a:	e9 f0       	breq	.+58     	; 0x1166 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    112c:	80 91 18 01 	lds	r24, 0x0118
    1130:	e0 91 1e 01 	lds	r30, 0x011E
    1134:	f0 91 1f 01 	lds	r31, 0x011F
    1138:	e8 0f       	add	r30, r24
    113a:	f1 1d       	adc	r31, r1
    113c:	a1 50       	subi	r26, 0x01	; 1
    113e:	a0 93 53 03 	sts	0x0353, r26
    1142:	b0 e0       	ldi	r27, 0x00	; 0
    1144:	ac 5a       	subi	r26, 0xAC	; 172
    1146:	bc 4f       	sbci	r27, 0xFC	; 252
    1148:	8c 91       	ld	r24, X
    114a:	80 83       	st	Z, r24
    114c:	80 91 18 01 	lds	r24, 0x0118
    1150:	8f 5f       	subi	r24, 0xFF	; 255
    1152:	80 93 18 01 	sts	0x0118, r24
    1156:	90 91 18 01 	lds	r25, 0x0118
    115a:	80 91 1a 01 	lds	r24, 0x011A
    115e:	98 17       	cp	r25, r24
    1160:	09 f0       	breq	.+2      	; 0x1164 <_ZN15OrangutanSerial15serial_rx_checkEh+0x182>
    1162:	ba cf       	rjmp	.-140    	; 0x10d8 <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
    1164:	b2 cf       	rjmp	.-156    	; 0x10ca <_ZN15OrangutanSerial15serial_rx_checkEh+0xe8>
    1166:	1f 91       	pop	r17
    1168:	0f 91       	pop	r16
    116a:	08 95       	ret

0000116c <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    116c:	82 30       	cpi	r24, 0x02	; 2
    116e:	51 f0       	breq	.+20     	; 0x1184 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x18>
    1170:	88 23       	and	r24, r24
    1172:	19 f4       	brne	.+6      	; 0x117a <_ZN15OrangutanSerial14receive_inlineEhPchh+0xe>
    1174:	e1 ec       	ldi	r30, 0xC1	; 193
    1176:	f0 e0       	ldi	r31, 0x00	; 0
    1178:	02 c0       	rjmp	.+4      	; 0x117e <_ZN15OrangutanSerial14receive_inlineEhPchh+0x12>
    117a:	e9 ec       	ldi	r30, 0xC9	; 201
    117c:	f0 e0       	ldi	r31, 0x00	; 0
    117e:	90 81       	ld	r25, Z
    1180:	9f 77       	andi	r25, 0x7F	; 127
    1182:	90 83       	st	Z, r25
    1184:	a8 2f       	mov	r26, r24
    1186:	b0 e0       	ldi	r27, 0x00	; 0
    1188:	fd 01       	movw	r30, r26
    118a:	ee 0f       	add	r30, r30
    118c:	ff 1f       	adc	r31, r31
    118e:	53 e0       	ldi	r21, 0x03	; 3
    1190:	aa 0f       	add	r26, r26
    1192:	bb 1f       	adc	r27, r27
    1194:	5a 95       	dec	r21
    1196:	e1 f7       	brne	.-8      	; 0x1190 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x24>
    1198:	ea 0f       	add	r30, r26
    119a:	fb 1f       	adc	r31, r27
    119c:	ee 5f       	subi	r30, 0xFE	; 254
    119e:	fe 4f       	sbci	r31, 0xFE	; 254
    11a0:	71 87       	std	Z+9, r23	; 0x09
    11a2:	60 87       	std	Z+8, r22	; 0x08
    11a4:	68 2f       	mov	r22, r24
    11a6:	70 e0       	ldi	r23, 0x00	; 0
    11a8:	fb 01       	movw	r30, r22
    11aa:	ee 0f       	add	r30, r30
    11ac:	ff 1f       	adc	r31, r31
    11ae:	93 e0       	ldi	r25, 0x03	; 3
    11b0:	66 0f       	add	r22, r22
    11b2:	77 1f       	adc	r23, r23
    11b4:	9a 95       	dec	r25
    11b6:	e1 f7       	brne	.-8      	; 0x11b0 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x44>
    11b8:	e6 0f       	add	r30, r22
    11ba:	f7 1f       	adc	r31, r23
    11bc:	ee 5f       	subi	r30, 0xFE	; 254
    11be:	fe 4f       	sbci	r31, 0xFE	; 254
    11c0:	12 82       	std	Z+2, r1	; 0x02
    11c2:	68 2f       	mov	r22, r24
    11c4:	70 e0       	ldi	r23, 0x00	; 0
    11c6:	fb 01       	movw	r30, r22
    11c8:	ee 0f       	add	r30, r30
    11ca:	ff 1f       	adc	r31, r31
    11cc:	a3 e0       	ldi	r26, 0x03	; 3
    11ce:	66 0f       	add	r22, r22
    11d0:	77 1f       	adc	r23, r23
    11d2:	aa 95       	dec	r26
    11d4:	e1 f7       	brne	.-8      	; 0x11ce <_ZN15OrangutanSerial14receive_inlineEhPchh+0x62>
    11d6:	e6 0f       	add	r30, r22
    11d8:	f7 1f       	adc	r31, r23
    11da:	ee 5f       	subi	r30, 0xFE	; 254
    11dc:	fe 4f       	sbci	r31, 0xFE	; 254
    11de:	44 83       	std	Z+4, r20	; 0x04
    11e0:	48 2f       	mov	r20, r24
    11e2:	50 e0       	ldi	r21, 0x00	; 0
    11e4:	fa 01       	movw	r30, r20
    11e6:	ee 0f       	add	r30, r30
    11e8:	ff 1f       	adc	r31, r31
    11ea:	63 e0       	ldi	r22, 0x03	; 3
    11ec:	44 0f       	add	r20, r20
    11ee:	55 1f       	adc	r21, r21
    11f0:	6a 95       	dec	r22
    11f2:	e1 f7       	brne	.-8      	; 0x11ec <_ZN15OrangutanSerial14receive_inlineEhPchh+0x80>
    11f4:	e4 0f       	add	r30, r20
    11f6:	f5 1f       	adc	r31, r21
    11f8:	ee 5f       	subi	r30, 0xFE	; 254
    11fa:	fe 4f       	sbci	r31, 0xFE	; 254
    11fc:	25 83       	std	Z+5, r18	; 0x05
    11fe:	82 30       	cpi	r24, 0x02	; 2
    1200:	d9 f0       	breq	.+54     	; 0x1238 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xcc>
    1202:	28 2f       	mov	r18, r24
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	f9 01       	movw	r30, r18
    1208:	ee 0f       	add	r30, r30
    120a:	ff 1f       	adc	r31, r31
    120c:	43 e0       	ldi	r20, 0x03	; 3
    120e:	22 0f       	add	r18, r18
    1210:	33 1f       	adc	r19, r19
    1212:	4a 95       	dec	r20
    1214:	e1 f7       	brne	.-8      	; 0x120e <_ZN15OrangutanSerial14receive_inlineEhPchh+0xa2>
    1216:	e2 0f       	add	r30, r18
    1218:	f3 1f       	adc	r31, r19
    121a:	ee 5f       	subi	r30, 0xFE	; 254
    121c:	fe 4f       	sbci	r31, 0xFE	; 254
    121e:	90 81       	ld	r25, Z
    1220:	99 23       	and	r25, r25
    1222:	51 f4       	brne	.+20     	; 0x1238 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xcc>
    1224:	88 23       	and	r24, r24
    1226:	19 f4       	brne	.+6      	; 0x122e <_ZN15OrangutanSerial14receive_inlineEhPchh+0xc2>
    1228:	e1 ec       	ldi	r30, 0xC1	; 193
    122a:	f0 e0       	ldi	r31, 0x00	; 0
    122c:	02 c0       	rjmp	.+4      	; 0x1232 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xc6>
    122e:	e9 ec       	ldi	r30, 0xC9	; 201
    1230:	f0 e0       	ldi	r31, 0x00	; 0
    1232:	80 81       	ld	r24, Z
    1234:	80 68       	ori	r24, 0x80	; 128
    1236:	80 83       	st	Z, r24
    1238:	08 95       	ret

0000123a <_ZN15OrangutanSerial11receiveRingEhPch>:
    123a:	21 e0       	ldi	r18, 0x01	; 1
    123c:	0e 94 b6 08 	call	0x116c	; 0x116c <_ZN15OrangutanSerial14receive_inlineEhPchh>
    1240:	08 95       	ret

00001242 <serial_receive_ring>:
    1242:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN15OrangutanSerial11receiveRingEhPch>
    1246:	08 95       	ret

00001248 <__vector_20>:
    1248:	1f 92       	push	r1
    124a:	0f 92       	push	r0
    124c:	0f b6       	in	r0, 0x3f	; 63
    124e:	0f 92       	push	r0
    1250:	0b b6       	in	r0, 0x3b	; 59
    1252:	0f 92       	push	r0
    1254:	11 24       	eor	r1, r1
    1256:	2f 93       	push	r18
    1258:	3f 93       	push	r19
    125a:	4f 93       	push	r20
    125c:	5f 93       	push	r21
    125e:	6f 93       	push	r22
    1260:	7f 93       	push	r23
    1262:	8f 93       	push	r24
    1264:	9f 93       	push	r25
    1266:	af 93       	push	r26
    1268:	bf 93       	push	r27
    126a:	ef 93       	push	r30
    126c:	ff 93       	push	r31
    126e:	60 91 c6 00 	lds	r22, 0x00C6
    1272:	80 e0       	ldi	r24, 0x00	; 0
    1274:	0e 94 4a 07 	call	0xe94	; 0xe94 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    1278:	ff 91       	pop	r31
    127a:	ef 91       	pop	r30
    127c:	bf 91       	pop	r27
    127e:	af 91       	pop	r26
    1280:	9f 91       	pop	r25
    1282:	8f 91       	pop	r24
    1284:	7f 91       	pop	r23
    1286:	6f 91       	pop	r22
    1288:	5f 91       	pop	r21
    128a:	4f 91       	pop	r20
    128c:	3f 91       	pop	r19
    128e:	2f 91       	pop	r18
    1290:	0f 90       	pop	r0
    1292:	0b be       	out	0x3b, r0	; 59
    1294:	0f 90       	pop	r0
    1296:	0f be       	out	0x3f, r0	; 63
    1298:	0f 90       	pop	r0
    129a:	1f 90       	pop	r1
    129c:	18 95       	reti

0000129e <__vector_28>:
    129e:	1f 92       	push	r1
    12a0:	0f 92       	push	r0
    12a2:	0f b6       	in	r0, 0x3f	; 63
    12a4:	0f 92       	push	r0
    12a6:	0b b6       	in	r0, 0x3b	; 59
    12a8:	0f 92       	push	r0
    12aa:	11 24       	eor	r1, r1
    12ac:	2f 93       	push	r18
    12ae:	3f 93       	push	r19
    12b0:	4f 93       	push	r20
    12b2:	5f 93       	push	r21
    12b4:	6f 93       	push	r22
    12b6:	7f 93       	push	r23
    12b8:	8f 93       	push	r24
    12ba:	9f 93       	push	r25
    12bc:	af 93       	push	r26
    12be:	bf 93       	push	r27
    12c0:	ef 93       	push	r30
    12c2:	ff 93       	push	r31
    12c4:	60 91 ce 00 	lds	r22, 0x00CE
    12c8:	81 e0       	ldi	r24, 0x01	; 1
    12ca:	0e 94 4a 07 	call	0xe94	; 0xe94 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    12ce:	ff 91       	pop	r31
    12d0:	ef 91       	pop	r30
    12d2:	bf 91       	pop	r27
    12d4:	af 91       	pop	r26
    12d6:	9f 91       	pop	r25
    12d8:	8f 91       	pop	r24
    12da:	7f 91       	pop	r23
    12dc:	6f 91       	pop	r22
    12de:	5f 91       	pop	r21
    12e0:	4f 91       	pop	r20
    12e2:	3f 91       	pop	r19
    12e4:	2f 91       	pop	r18
    12e6:	0f 90       	pop	r0
    12e8:	0b be       	out	0x3b, r0	; 59
    12ea:	0f 90       	pop	r0
    12ec:	0f be       	out	0x3f, r0	; 63
    12ee:	0f 90       	pop	r0
    12f0:	1f 90       	pop	r1
    12f2:	18 95       	reti

000012f4 <_Z24uart_enable_tx_interrupth>:
    12f4:	88 23       	and	r24, r24
    12f6:	19 f4       	brne	.+6      	; 0x12fe <_Z24uart_enable_tx_interrupth+0xa>
    12f8:	e1 ec       	ldi	r30, 0xC1	; 193
    12fa:	f0 e0       	ldi	r31, 0x00	; 0
    12fc:	02 c0       	rjmp	.+4      	; 0x1302 <_Z24uart_enable_tx_interrupth+0xe>
    12fe:	e9 ec       	ldi	r30, 0xC9	; 201
    1300:	f0 e0       	ldi	r31, 0x00	; 0
    1302:	80 81       	ld	r24, Z
    1304:	80 62       	ori	r24, 0x20	; 32
    1306:	80 83       	st	Z, r24
    1308:	08 95       	ret

0000130a <_Z25uart_disable_tx_interrupth>:
    130a:	88 23       	and	r24, r24
    130c:	19 f4       	brne	.+6      	; 0x1314 <_Z25uart_disable_tx_interrupth+0xa>
    130e:	e1 ec       	ldi	r30, 0xC1	; 193
    1310:	f0 e0       	ldi	r31, 0x00	; 0
    1312:	02 c0       	rjmp	.+4      	; 0x1318 <_Z25uart_disable_tx_interrupth+0xe>
    1314:	e9 ec       	ldi	r30, 0xC9	; 201
    1316:	f0 e0       	ldi	r31, 0x00	; 0
    1318:	80 81       	ld	r24, Z
    131a:	8f 7d       	andi	r24, 0xDF	; 223
    131c:	80 83       	st	Z, r24
    131e:	08 95       	ret

00001320 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    1320:	28 2f       	mov	r18, r24
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	f9 01       	movw	r30, r18
    1326:	ee 0f       	add	r30, r30
    1328:	ff 1f       	adc	r31, r31
    132a:	93 e0       	ldi	r25, 0x03	; 3
    132c:	22 0f       	add	r18, r18
    132e:	33 1f       	adc	r19, r19
    1330:	9a 95       	dec	r25
    1332:	e1 f7       	brne	.-8      	; 0x132c <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0xc>
    1334:	e2 0f       	add	r30, r18
    1336:	f3 1f       	adc	r31, r19
    1338:	ee 5f       	subi	r30, 0xFE	; 254
    133a:	fe 4f       	sbci	r31, 0xFE	; 254
    133c:	26 81       	ldd	r18, Z+6	; 0x06
    133e:	37 81       	ldd	r19, Z+7	; 0x07
    1340:	21 15       	cp	r18, r1
    1342:	31 05       	cpc	r19, r1
    1344:	a1 f1       	breq	.+104    	; 0x13ae <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    1346:	28 2f       	mov	r18, r24
    1348:	30 e0       	ldi	r19, 0x00	; 0
    134a:	f9 01       	movw	r30, r18
    134c:	ee 0f       	add	r30, r30
    134e:	ff 1f       	adc	r31, r31
    1350:	a3 e0       	ldi	r26, 0x03	; 3
    1352:	22 0f       	add	r18, r18
    1354:	33 1f       	adc	r19, r19
    1356:	aa 95       	dec	r26
    1358:	e1 f7       	brne	.-8      	; 0x1352 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x32>
    135a:	e2 0f       	add	r30, r18
    135c:	f3 1f       	adc	r31, r19
    135e:	ee 5f       	subi	r30, 0xFE	; 254
    1360:	fe 4f       	sbci	r31, 0xFE	; 254
    1362:	41 81       	ldd	r20, Z+1	; 0x01
    1364:	28 2f       	mov	r18, r24
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	f9 01       	movw	r30, r18
    136a:	ee 0f       	add	r30, r30
    136c:	ff 1f       	adc	r31, r31
    136e:	63 e0       	ldi	r22, 0x03	; 3
    1370:	22 0f       	add	r18, r18
    1372:	33 1f       	adc	r19, r19
    1374:	6a 95       	dec	r22
    1376:	e1 f7       	brne	.-8      	; 0x1370 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x50>
    1378:	e2 0f       	add	r30, r18
    137a:	f3 1f       	adc	r31, r19
    137c:	ee 5f       	subi	r30, 0xFE	; 254
    137e:	fe 4f       	sbci	r31, 0xFE	; 254
    1380:	93 81       	ldd	r25, Z+3	; 0x03
    1382:	49 17       	cp	r20, r25
    1384:	a0 f4       	brcc	.+40     	; 0x13ae <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    1386:	28 2f       	mov	r18, r24
    1388:	30 e0       	ldi	r19, 0x00	; 0
    138a:	f9 01       	movw	r30, r18
    138c:	ee 0f       	add	r30, r30
    138e:	ff 1f       	adc	r31, r31
    1390:	43 e0       	ldi	r20, 0x03	; 3
    1392:	22 0f       	add	r18, r18
    1394:	33 1f       	adc	r19, r19
    1396:	4a 95       	dec	r20
    1398:	e1 f7       	brne	.-8      	; 0x1392 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x72>
    139a:	e2 0f       	add	r30, r18
    139c:	f3 1f       	adc	r31, r19
    139e:	ee 5f       	subi	r30, 0xFE	; 254
    13a0:	fe 4f       	sbci	r31, 0xFE	; 254
    13a2:	90 81       	ld	r25, Z
    13a4:	99 23       	and	r25, r25
    13a6:	19 f4       	brne	.+6      	; 0x13ae <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    13a8:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <_Z24uart_enable_tx_interrupth>
    13ac:	08 95       	ret
    13ae:	0e 94 85 09 	call	0x130a	; 0x130a <_Z25uart_disable_tx_interrupth>
    13b2:	08 95       	ret

000013b4 <_ZN15OrangutanSerial15initUART_inlineEh>:
    13b4:	82 30       	cpi	r24, 0x02	; 2
    13b6:	31 f1       	breq	.+76     	; 0x1404 <_ZN15OrangutanSerial15initUART_inlineEh+0x50>
    13b8:	28 2f       	mov	r18, r24
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	f9 01       	movw	r30, r18
    13be:	ee 0f       	add	r30, r30
    13c0:	ff 1f       	adc	r31, r31
    13c2:	53 e0       	ldi	r21, 0x03	; 3
    13c4:	22 0f       	add	r18, r18
    13c6:	33 1f       	adc	r19, r19
    13c8:	5a 95       	dec	r21
    13ca:	e1 f7       	brne	.-8      	; 0x13c4 <_ZN15OrangutanSerial15initUART_inlineEh+0x10>
    13cc:	e2 0f       	add	r30, r18
    13ce:	f3 1f       	adc	r31, r19
    13d0:	ee 5f       	subi	r30, 0xFE	; 254
    13d2:	fe 4f       	sbci	r31, 0xFE	; 254
    13d4:	90 81       	ld	r25, Z
    13d6:	99 23       	and	r25, r25
    13d8:	49 f4       	brne	.+18     	; 0x13ec <_ZN15OrangutanSerial15initUART_inlineEh+0x38>
    13da:	88 23       	and	r24, r24
    13dc:	19 f4       	brne	.+6      	; 0x13e4 <_ZN15OrangutanSerial15initUART_inlineEh+0x30>
    13de:	e1 ec       	ldi	r30, 0xC1	; 193
    13e0:	f0 e0       	ldi	r31, 0x00	; 0
    13e2:	02 c0       	rjmp	.+4      	; 0x13e8 <_ZN15OrangutanSerial15initUART_inlineEh+0x34>
    13e4:	e9 ec       	ldi	r30, 0xC9	; 201
    13e6:	f0 e0       	ldi	r31, 0x00	; 0
    13e8:	98 e9       	ldi	r25, 0x98	; 152
    13ea:	08 c0       	rjmp	.+16     	; 0x13fc <_ZN15OrangutanSerial15initUART_inlineEh+0x48>
    13ec:	88 23       	and	r24, r24
    13ee:	19 f4       	brne	.+6      	; 0x13f6 <_ZN15OrangutanSerial15initUART_inlineEh+0x42>
    13f0:	e1 ec       	ldi	r30, 0xC1	; 193
    13f2:	f0 e0       	ldi	r31, 0x00	; 0
    13f4:	02 c0       	rjmp	.+4      	; 0x13fa <_ZN15OrangutanSerial15initUART_inlineEh+0x46>
    13f6:	e9 ec       	ldi	r30, 0xC9	; 201
    13f8:	f0 e0       	ldi	r31, 0x00	; 0
    13fa:	98 e1       	ldi	r25, 0x18	; 24
    13fc:	90 83       	st	Z, r25
    13fe:	0e 94 90 09 	call	0x1320	; 0x1320 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    1402:	78 94       	sei
    1404:	08 95       	ret

00001406 <_ZN15OrangutanSerial8initPortEh>:
    1406:	88 23       	and	r24, r24
    1408:	19 f0       	breq	.+6      	; 0x1410 <_ZN15OrangutanSerial8initPortEh+0xa>
    140a:	81 30       	cpi	r24, 0x01	; 1
    140c:	41 f4       	brne	.+16     	; 0x141e <_ZN15OrangutanSerial8initPortEh+0x18>
    140e:	04 c0       	rjmp	.+8      	; 0x1418 <_ZN15OrangutanSerial8initPortEh+0x12>
    1410:	80 e0       	ldi	r24, 0x00	; 0
    1412:	0e 94 da 09 	call	0x13b4	; 0x13b4 <_ZN15OrangutanSerial15initUART_inlineEh>
    1416:	08 95       	ret
    1418:	81 e0       	ldi	r24, 0x01	; 1
    141a:	0e 94 da 09 	call	0x13b4	; 0x13b4 <_ZN15OrangutanSerial15initUART_inlineEh>
    141e:	08 95       	ret

00001420 <_ZN15OrangutanSerial11setBaudRateEhm>:
    1420:	a0 e0       	ldi	r26, 0x00	; 0
    1422:	b0 e0       	ldi	r27, 0x00	; 0
    1424:	e6 e1       	ldi	r30, 0x16	; 22
    1426:	fa e0       	ldi	r31, 0x0A	; 10
    1428:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <__prologue_saves__+0x16>
    142c:	d8 2e       	mov	r13, r24
    142e:	7a 01       	movw	r14, r20
    1430:	8b 01       	movw	r16, r22
    1432:	0e 94 03 0a 	call	0x1406	; 0x1406 <_ZN15OrangutanSerial8initPortEh>
    1436:	8d 2d       	mov	r24, r13
    1438:	82 30       	cpi	r24, 0x02	; 2
    143a:	01 f1       	breq	.+64     	; 0x147c <_ZN15OrangutanSerial11setBaudRateEhm+0x5c>
    143c:	dd 20       	and	r13, r13
    143e:	19 f4       	brne	.+6      	; 0x1446 <_ZN15OrangutanSerial11setBaudRateEhm+0x26>
    1440:	c4 ec       	ldi	r28, 0xC4	; 196
    1442:	d0 e0       	ldi	r29, 0x00	; 0
    1444:	02 c0       	rjmp	.+4      	; 0x144a <_ZN15OrangutanSerial11setBaudRateEhm+0x2a>
    1446:	cc ec       	ldi	r28, 0xCC	; 204
    1448:	d0 e0       	ldi	r29, 0x00	; 0
    144a:	c8 01       	movw	r24, r16
    144c:	b7 01       	movw	r22, r14
    144e:	28 ef       	ldi	r18, 0xF8	; 248
    1450:	3f ef       	ldi	r19, 0xFF	; 255
    1452:	4f ef       	ldi	r20, 0xFF	; 255
    1454:	5f ef       	ldi	r21, 0xFF	; 255
    1456:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <__mulsi3>
    145a:	60 50       	subi	r22, 0x00	; 0
    145c:	73 4d       	sbci	r23, 0xD3	; 211
    145e:	8e 4c       	sbci	r24, 0xCE	; 206
    1460:	9e 4f       	sbci	r25, 0xFE	; 254
    1462:	a8 01       	movw	r20, r16
    1464:	97 01       	movw	r18, r14
    1466:	e4 e0       	ldi	r30, 0x04	; 4
    1468:	22 0f       	add	r18, r18
    146a:	33 1f       	adc	r19, r19
    146c:	44 1f       	adc	r20, r20
    146e:	55 1f       	adc	r21, r21
    1470:	ea 95       	dec	r30
    1472:	d1 f7       	brne	.-12     	; 0x1468 <_ZN15OrangutanSerial11setBaudRateEhm+0x48>
    1474:	0e 94 88 0c 	call	0x1910	; 0x1910 <__udivmodsi4>
    1478:	39 83       	std	Y+1, r19	; 0x01
    147a:	28 83       	st	Y, r18
    147c:	cd b7       	in	r28, 0x3d	; 61
    147e:	de b7       	in	r29, 0x3e	; 62
    1480:	e7 e0       	ldi	r30, 0x07	; 7
    1482:	0c 94 dc 0c 	jmp	0x19b8	; 0x19b8 <__epilogue_restores__+0x16>

00001486 <serial_set_baud_rate>:
    1486:	0e 94 10 0a 	call	0x1420	; 0x1420 <_ZN15OrangutanSerial11setBaudRateEhm>
    148a:	08 95       	ret

0000148c <_ZN15OrangutanSerial11uart_tx_isrEh>:
    148c:	28 2f       	mov	r18, r24
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	f9 01       	movw	r30, r18
    1492:	ee 0f       	add	r30, r30
    1494:	ff 1f       	adc	r31, r31
    1496:	73 e0       	ldi	r23, 0x03	; 3
    1498:	22 0f       	add	r18, r18
    149a:	33 1f       	adc	r19, r19
    149c:	7a 95       	dec	r23
    149e:	e1 f7       	brne	.-8      	; 0x1498 <_ZN15OrangutanSerial11uart_tx_isrEh+0xc>
    14a0:	e2 0f       	add	r30, r18
    14a2:	f3 1f       	adc	r31, r19
    14a4:	ee 5f       	subi	r30, 0xFE	; 254
    14a6:	fe 4f       	sbci	r31, 0xFE	; 254
    14a8:	46 81       	ldd	r20, Z+6	; 0x06
    14aa:	57 81       	ldd	r21, Z+7	; 0x07
    14ac:	41 15       	cp	r20, r1
    14ae:	51 05       	cpc	r21, r1
    14b0:	09 f4       	brne	.+2      	; 0x14b4 <_ZN15OrangutanSerial11uart_tx_isrEh+0x28>
    14b2:	65 c0       	rjmp	.+202    	; 0x157e <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    14b4:	28 2f       	mov	r18, r24
    14b6:	30 e0       	ldi	r19, 0x00	; 0
    14b8:	f9 01       	movw	r30, r18
    14ba:	ee 0f       	add	r30, r30
    14bc:	ff 1f       	adc	r31, r31
    14be:	93 e0       	ldi	r25, 0x03	; 3
    14c0:	22 0f       	add	r18, r18
    14c2:	33 1f       	adc	r19, r19
    14c4:	9a 95       	dec	r25
    14c6:	e1 f7       	brne	.-8      	; 0x14c0 <_ZN15OrangutanSerial11uart_tx_isrEh+0x34>
    14c8:	e2 0f       	add	r30, r18
    14ca:	f3 1f       	adc	r31, r19
    14cc:	ee 5f       	subi	r30, 0xFE	; 254
    14ce:	fe 4f       	sbci	r31, 0xFE	; 254
    14d0:	61 81       	ldd	r22, Z+1	; 0x01
    14d2:	28 2f       	mov	r18, r24
    14d4:	30 e0       	ldi	r19, 0x00	; 0
    14d6:	f9 01       	movw	r30, r18
    14d8:	ee 0f       	add	r30, r30
    14da:	ff 1f       	adc	r31, r31
    14dc:	a3 e0       	ldi	r26, 0x03	; 3
    14de:	22 0f       	add	r18, r18
    14e0:	33 1f       	adc	r19, r19
    14e2:	aa 95       	dec	r26
    14e4:	e1 f7       	brne	.-8      	; 0x14de <_ZN15OrangutanSerial11uart_tx_isrEh+0x52>
    14e6:	e2 0f       	add	r30, r18
    14e8:	f3 1f       	adc	r31, r19
    14ea:	ee 5f       	subi	r30, 0xFE	; 254
    14ec:	fe 4f       	sbci	r31, 0xFE	; 254
    14ee:	93 81       	ldd	r25, Z+3	; 0x03
    14f0:	69 17       	cp	r22, r25
    14f2:	08 f0       	brcs	.+2      	; 0x14f6 <_ZN15OrangutanSerial11uart_tx_isrEh+0x6a>
    14f4:	44 c0       	rjmp	.+136    	; 0x157e <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    14f6:	88 23       	and	r24, r24
    14f8:	19 f4       	brne	.+6      	; 0x1500 <_ZN15OrangutanSerial11uart_tx_isrEh+0x74>
    14fa:	e0 ec       	ldi	r30, 0xC0	; 192
    14fc:	f0 e0       	ldi	r31, 0x00	; 0
    14fe:	02 c0       	rjmp	.+4      	; 0x1504 <_ZN15OrangutanSerial11uart_tx_isrEh+0x78>
    1500:	e8 ec       	ldi	r30, 0xC8	; 200
    1502:	f0 e0       	ldi	r31, 0x00	; 0
    1504:	90 81       	ld	r25, Z
    1506:	95 ff       	sbrs	r25, 5
    1508:	3a c0       	rjmp	.+116    	; 0x157e <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    150a:	88 23       	and	r24, r24
    150c:	19 f4       	brne	.+6      	; 0x1514 <_ZN15OrangutanSerial11uart_tx_isrEh+0x88>
    150e:	a6 ec       	ldi	r26, 0xC6	; 198
    1510:	b0 e0       	ldi	r27, 0x00	; 0
    1512:	02 c0       	rjmp	.+4      	; 0x1518 <_ZN15OrangutanSerial11uart_tx_isrEh+0x8c>
    1514:	ae ec       	ldi	r26, 0xCE	; 206
    1516:	b0 e0       	ldi	r27, 0x00	; 0
    1518:	28 2f       	mov	r18, r24
    151a:	30 e0       	ldi	r19, 0x00	; 0
    151c:	f9 01       	movw	r30, r18
    151e:	ee 0f       	add	r30, r30
    1520:	ff 1f       	adc	r31, r31
    1522:	63 e0       	ldi	r22, 0x03	; 3
    1524:	22 0f       	add	r18, r18
    1526:	33 1f       	adc	r19, r19
    1528:	6a 95       	dec	r22
    152a:	e1 f7       	brne	.-8      	; 0x1524 <_ZN15OrangutanSerial11uart_tx_isrEh+0x98>
    152c:	e2 0f       	add	r30, r18
    152e:	f3 1f       	adc	r31, r19
    1530:	ee 5f       	subi	r30, 0xFE	; 254
    1532:	fe 4f       	sbci	r31, 0xFE	; 254
    1534:	91 81       	ldd	r25, Z+1	; 0x01
    1536:	49 0f       	add	r20, r25
    1538:	51 1d       	adc	r21, r1
    153a:	fa 01       	movw	r30, r20
    153c:	90 81       	ld	r25, Z
    153e:	9c 93       	st	X, r25
    1540:	28 2f       	mov	r18, r24
    1542:	30 e0       	ldi	r19, 0x00	; 0
    1544:	f9 01       	movw	r30, r18
    1546:	ee 0f       	add	r30, r30
    1548:	ff 1f       	adc	r31, r31
    154a:	93 e0       	ldi	r25, 0x03	; 3
    154c:	22 0f       	add	r18, r18
    154e:	33 1f       	adc	r19, r19
    1550:	9a 95       	dec	r25
    1552:	e1 f7       	brne	.-8      	; 0x154c <_ZN15OrangutanSerial11uart_tx_isrEh+0xc0>
    1554:	e2 0f       	add	r30, r18
    1556:	f3 1f       	adc	r31, r19
    1558:	ee 5f       	subi	r30, 0xFE	; 254
    155a:	fe 4f       	sbci	r31, 0xFE	; 254
    155c:	91 81       	ldd	r25, Z+1	; 0x01
    155e:	9f 5f       	subi	r25, 0xFF	; 255
    1560:	28 2f       	mov	r18, r24
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	f9 01       	movw	r30, r18
    1566:	ee 0f       	add	r30, r30
    1568:	ff 1f       	adc	r31, r31
    156a:	a3 e0       	ldi	r26, 0x03	; 3
    156c:	22 0f       	add	r18, r18
    156e:	33 1f       	adc	r19, r19
    1570:	aa 95       	dec	r26
    1572:	e1 f7       	brne	.-8      	; 0x156c <_ZN15OrangutanSerial11uart_tx_isrEh+0xe0>
    1574:	e2 0f       	add	r30, r18
    1576:	f3 1f       	adc	r31, r19
    1578:	ee 5f       	subi	r30, 0xFE	; 254
    157a:	fe 4f       	sbci	r31, 0xFE	; 254
    157c:	91 83       	std	Z+1, r25	; 0x01
    157e:	0e 94 90 09 	call	0x1320	; 0x1320 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    1582:	08 95       	ret

00001584 <_ZN15OrangutanSerial15serial_tx_checkEh>:
    1584:	1f 93       	push	r17
    1586:	18 2f       	mov	r17, r24
    1588:	82 30       	cpi	r24, 0x02	; 2
    158a:	31 f0       	breq	.+12     	; 0x1598 <_ZN15OrangutanSerial15serial_tx_checkEh+0x14>
    158c:	0e 94 85 09 	call	0x130a	; 0x130a <_Z25uart_disable_tx_interrupth>
    1590:	81 2f       	mov	r24, r17
    1592:	0e 94 46 0a 	call	0x148c	; 0x148c <_ZN15OrangutanSerial11uart_tx_isrEh>
    1596:	1d c0       	rjmp	.+58     	; 0x15d2 <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    1598:	80 91 1c 01 	lds	r24, 0x011C
    159c:	90 91 1d 01 	lds	r25, 0x011D
    15a0:	00 97       	sbiw	r24, 0x00	; 0
    15a2:	b9 f0       	breq	.+46     	; 0x15d2 <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    15a4:	30 91 17 01 	lds	r19, 0x0117
    15a8:	20 91 19 01 	lds	r18, 0x0119
    15ac:	32 17       	cp	r19, r18
    15ae:	88 f4       	brcc	.+34     	; 0x15d2 <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    15b0:	06 c0       	rjmp	.+12     	; 0x15be <_ZN15OrangutanSerial15serial_tx_checkEh+0x3a>
    15b2:	80 91 17 01 	lds	r24, 0x0117
    15b6:	8f 5f       	subi	r24, 0xFF	; 255
    15b8:	80 93 17 01 	sts	0x0117, r24
    15bc:	ed cf       	rjmp	.-38     	; 0x1598 <_ZN15OrangutanSerial15serial_tx_checkEh+0x14>
    15be:	20 91 17 01 	lds	r18, 0x0117
    15c2:	82 0f       	add	r24, r18
    15c4:	91 1d       	adc	r25, r1
    15c6:	fc 01       	movw	r30, r24
    15c8:	80 81       	ld	r24, Z
    15ca:	0e 94 e8 0b 	call	0x17d0	; 0x17d0 <_ZN12OrangutanSVP17serialSendIfReadyEc>
    15ce:	88 23       	and	r24, r24
    15d0:	81 f7       	brne	.-32     	; 0x15b2 <_ZN15OrangutanSerial15serial_tx_checkEh+0x2e>
    15d2:	1f 91       	pop	r17
    15d4:	08 95       	ret

000015d6 <_ZN15OrangutanSerial5checkEv>:
    15d6:	80 e0       	ldi	r24, 0x00	; 0
    15d8:	0e 94 c2 0a 	call	0x1584	; 0x1584 <_ZN15OrangutanSerial15serial_tx_checkEh>
    15dc:	81 e0       	ldi	r24, 0x01	; 1
    15de:	0e 94 c2 0a 	call	0x1584	; 0x1584 <_ZN15OrangutanSerial15serial_tx_checkEh>
    15e2:	82 e0       	ldi	r24, 0x02	; 2
    15e4:	0e 94 c2 0a 	call	0x1584	; 0x1584 <_ZN15OrangutanSerial15serial_tx_checkEh>
    15e8:	80 e0       	ldi	r24, 0x00	; 0
    15ea:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <_ZN15OrangutanSerial15serial_rx_checkEh>
    15ee:	81 e0       	ldi	r24, 0x01	; 1
    15f0:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <_ZN15OrangutanSerial15serial_rx_checkEh>
    15f4:	82 e0       	ldi	r24, 0x02	; 2
    15f6:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <_ZN15OrangutanSerial15serial_rx_checkEh>
    15fa:	08 95       	ret

000015fc <serial_check>:
    15fc:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <_ZN15OrangutanSerial5checkEv>
    1600:	08 95       	ret

00001602 <_ZN15OrangutanSerial4sendEhPch>:
    1602:	28 2f       	mov	r18, r24
    1604:	30 e0       	ldi	r19, 0x00	; 0
    1606:	f9 01       	movw	r30, r18
    1608:	ee 0f       	add	r30, r30
    160a:	ff 1f       	adc	r31, r31
    160c:	93 e0       	ldi	r25, 0x03	; 3
    160e:	22 0f       	add	r18, r18
    1610:	33 1f       	adc	r19, r19
    1612:	9a 95       	dec	r25
    1614:	e1 f7       	brne	.-8      	; 0x160e <_ZN15OrangutanSerial4sendEhPch+0xc>
    1616:	e2 0f       	add	r30, r18
    1618:	f3 1f       	adc	r31, r19
    161a:	ee 5f       	subi	r30, 0xFE	; 254
    161c:	fe 4f       	sbci	r31, 0xFE	; 254
    161e:	77 83       	std	Z+7, r23	; 0x07
    1620:	66 83       	std	Z+6, r22	; 0x06
    1622:	28 2f       	mov	r18, r24
    1624:	30 e0       	ldi	r19, 0x00	; 0
    1626:	f9 01       	movw	r30, r18
    1628:	ee 0f       	add	r30, r30
    162a:	ff 1f       	adc	r31, r31
    162c:	a3 e0       	ldi	r26, 0x03	; 3
    162e:	22 0f       	add	r18, r18
    1630:	33 1f       	adc	r19, r19
    1632:	aa 95       	dec	r26
    1634:	e1 f7       	brne	.-8      	; 0x162e <_ZN15OrangutanSerial4sendEhPch+0x2c>
    1636:	e2 0f       	add	r30, r18
    1638:	f3 1f       	adc	r31, r19
    163a:	ee 5f       	subi	r30, 0xFE	; 254
    163c:	fe 4f       	sbci	r31, 0xFE	; 254
    163e:	11 82       	std	Z+1, r1	; 0x01
    1640:	28 2f       	mov	r18, r24
    1642:	30 e0       	ldi	r19, 0x00	; 0
    1644:	f9 01       	movw	r30, r18
    1646:	ee 0f       	add	r30, r30
    1648:	ff 1f       	adc	r31, r31
    164a:	63 e0       	ldi	r22, 0x03	; 3
    164c:	22 0f       	add	r18, r18
    164e:	33 1f       	adc	r19, r19
    1650:	6a 95       	dec	r22
    1652:	e1 f7       	brne	.-8      	; 0x164c <_ZN15OrangutanSerial4sendEhPch+0x4a>
    1654:	e2 0f       	add	r30, r18
    1656:	f3 1f       	adc	r31, r19
    1658:	ee 5f       	subi	r30, 0xFE	; 254
    165a:	fe 4f       	sbci	r31, 0xFE	; 254
    165c:	43 83       	std	Z+3, r20	; 0x03
    165e:	82 30       	cpi	r24, 0x02	; 2
    1660:	11 f0       	breq	.+4      	; 0x1666 <_ZN15OrangutanSerial4sendEhPch+0x64>
    1662:	0e 94 90 09 	call	0x1320	; 0x1320 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    1666:	08 95       	ret

00001668 <serial_send>:
    1668:	0e 94 01 0b 	call	0x1602	; 0x1602 <_ZN15OrangutanSerial4sendEhPch>
    166c:	08 95       	ret

0000166e <__vector_21>:
    166e:	1f 92       	push	r1
    1670:	0f 92       	push	r0
    1672:	0f b6       	in	r0, 0x3f	; 63
    1674:	0f 92       	push	r0
    1676:	0b b6       	in	r0, 0x3b	; 59
    1678:	0f 92       	push	r0
    167a:	11 24       	eor	r1, r1
    167c:	2f 93       	push	r18
    167e:	3f 93       	push	r19
    1680:	4f 93       	push	r20
    1682:	5f 93       	push	r21
    1684:	6f 93       	push	r22
    1686:	7f 93       	push	r23
    1688:	8f 93       	push	r24
    168a:	9f 93       	push	r25
    168c:	af 93       	push	r26
    168e:	bf 93       	push	r27
    1690:	ef 93       	push	r30
    1692:	ff 93       	push	r31
    1694:	80 e0       	ldi	r24, 0x00	; 0
    1696:	0e 94 46 0a 	call	0x148c	; 0x148c <_ZN15OrangutanSerial11uart_tx_isrEh>
    169a:	ff 91       	pop	r31
    169c:	ef 91       	pop	r30
    169e:	bf 91       	pop	r27
    16a0:	af 91       	pop	r26
    16a2:	9f 91       	pop	r25
    16a4:	8f 91       	pop	r24
    16a6:	7f 91       	pop	r23
    16a8:	6f 91       	pop	r22
    16aa:	5f 91       	pop	r21
    16ac:	4f 91       	pop	r20
    16ae:	3f 91       	pop	r19
    16b0:	2f 91       	pop	r18
    16b2:	0f 90       	pop	r0
    16b4:	0b be       	out	0x3b, r0	; 59
    16b6:	0f 90       	pop	r0
    16b8:	0f be       	out	0x3f, r0	; 63
    16ba:	0f 90       	pop	r0
    16bc:	1f 90       	pop	r1
    16be:	18 95       	reti

000016c0 <__vector_29>:
    16c0:	1f 92       	push	r1
    16c2:	0f 92       	push	r0
    16c4:	0f b6       	in	r0, 0x3f	; 63
    16c6:	0f 92       	push	r0
    16c8:	0b b6       	in	r0, 0x3b	; 59
    16ca:	0f 92       	push	r0
    16cc:	11 24       	eor	r1, r1
    16ce:	2f 93       	push	r18
    16d0:	3f 93       	push	r19
    16d2:	4f 93       	push	r20
    16d4:	5f 93       	push	r21
    16d6:	6f 93       	push	r22
    16d8:	7f 93       	push	r23
    16da:	8f 93       	push	r24
    16dc:	9f 93       	push	r25
    16de:	af 93       	push	r26
    16e0:	bf 93       	push	r27
    16e2:	ef 93       	push	r30
    16e4:	ff 93       	push	r31
    16e6:	81 e0       	ldi	r24, 0x01	; 1
    16e8:	0e 94 46 0a 	call	0x148c	; 0x148c <_ZN15OrangutanSerial11uart_tx_isrEh>
    16ec:	ff 91       	pop	r31
    16ee:	ef 91       	pop	r30
    16f0:	bf 91       	pop	r27
    16f2:	af 91       	pop	r26
    16f4:	9f 91       	pop	r25
    16f6:	8f 91       	pop	r24
    16f8:	7f 91       	pop	r23
    16fa:	6f 91       	pop	r22
    16fc:	5f 91       	pop	r21
    16fe:	4f 91       	pop	r20
    1700:	3f 91       	pop	r19
    1702:	2f 91       	pop	r18
    1704:	0f 90       	pop	r0
    1706:	0b be       	out	0x3b, r0	; 59
    1708:	0f 90       	pop	r0
    170a:	0f be       	out	0x3f, r0	; 63
    170c:	0f 90       	pop	r0
    170e:	1f 90       	pop	r1
    1710:	18 95       	reti

00001712 <_ZN13OrangutanTime17delayMicrosecondsEj>:
    1712:	6f 93       	push	r22
    1714:	64 e0       	ldi	r22, 0x04	; 4
    1716:	6a 95       	dec	r22
    1718:	f1 f7       	brne	.-4      	; 0x1716 <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
    171a:	6f 91       	pop	r22
    171c:	01 97       	sbiw	r24, 0x01	; 1
    171e:	c9 f7       	brne	.-14     	; 0x1712 <_ZN13OrangutanTime17delayMicrosecondsEj>
    1720:	08 95       	ret

00001722 <__vector_11>:
    1722:	2f 92       	push	r2
    1724:	8f 93       	push	r24
    1726:	9f 93       	push	r25
    1728:	2f b6       	in	r2, 0x3f	; 63
    172a:	80 91 5d 03 	lds	r24, 0x035D
    172e:	90 91 5e 03 	lds	r25, 0x035E
    1732:	01 96       	adiw	r24, 0x01	; 1
    1734:	80 93 5d 03 	sts	0x035D, r24
    1738:	90 93 5e 03 	sts	0x035E, r25
    173c:	90 e0       	ldi	r25, 0x00	; 0
    173e:	80 91 5f 03 	lds	r24, 0x035F
    1742:	89 1f       	adc	r24, r25
    1744:	80 93 5f 03 	sts	0x035F, r24
    1748:	90 91 65 03 	lds	r25, 0x0365
    174c:	9c 5f       	subi	r25, 0xFC	; 252
    174e:	90 93 65 03 	sts	0x0365, r25
    1752:	80 91 64 03 	lds	r24, 0x0364
    1756:	80 51       	subi	r24, 0x10	; 16
    1758:	97 42       	sbci	r25, 0x27	; 39
    175a:	c0 f0       	brcs	.+48     	; 0x178c <end>
    175c:	90 93 65 03 	sts	0x0365, r25
    1760:	80 93 64 03 	sts	0x0364, r24
    1764:	80 91 60 03 	lds	r24, 0x0360
    1768:	90 91 61 03 	lds	r25, 0x0361
    176c:	01 96       	adiw	r24, 0x01	; 1
    176e:	80 93 60 03 	sts	0x0360, r24
    1772:	90 93 61 03 	sts	0x0361, r25
    1776:	90 e0       	ldi	r25, 0x00	; 0
    1778:	80 91 62 03 	lds	r24, 0x0362
    177c:	89 1f       	adc	r24, r25
    177e:	80 93 62 03 	sts	0x0362, r24
    1782:	80 91 63 03 	lds	r24, 0x0363
    1786:	89 1f       	adc	r24, r25
    1788:	80 93 63 03 	sts	0x0363, r24

0000178c <end>:
    178c:	2f be       	out	0x3f, r2	; 63
    178e:	9f 91       	pop	r25
    1790:	8f 91       	pop	r24
    1792:	2f 90       	pop	r2
    1794:	18 95       	reti

00001796 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1796:	cf 93       	push	r28
    1798:	df 93       	push	r29
    179a:	ec 01       	movw	r28, r24
    179c:	05 c0       	rjmp	.+10     	; 0x17a8 <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
    179e:	88 ee       	ldi	r24, 0xE8	; 232
    17a0:	93 e0       	ldi	r25, 0x03	; 3
    17a2:	0e 94 89 0b 	call	0x1712	; 0x1712 <_ZN13OrangutanTime17delayMicrosecondsEj>
    17a6:	21 97       	sbiw	r28, 0x01	; 1
    17a8:	20 97       	sbiw	r28, 0x00	; 0
    17aa:	c9 f7       	brne	.-14     	; 0x179e <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    17ac:	df 91       	pop	r29
    17ae:	cf 91       	pop	r28
    17b0:	08 95       	ret

000017b2 <delay_ms>:
    17b2:	0e 94 cb 0b 	call	0x1796	; 0x1796 <_ZN13OrangutanTime17delayMillisecondsEj>
    17b6:	08 95       	ret

000017b8 <_ZN12OrangutanSVP11getNextByteEv>:
    17b8:	8f ef       	ldi	r24, 0xFF	; 255
    17ba:	64 e0       	ldi	r22, 0x04	; 4
    17bc:	0e 94 2b 0c 	call	0x1856	; 0x1856 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    17c0:	08 95       	ret

000017c2 <_ZN12OrangutanSVP15serialReadStartEv>:
    17c2:	83 e8       	ldi	r24, 0x83	; 131
    17c4:	67 e0       	ldi	r22, 0x07	; 7
    17c6:	0e 94 2b 0c 	call	0x1856	; 0x1856 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    17ca:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <_ZN12OrangutanSVP11getNextByteEv>
    17ce:	08 95       	ret

000017d0 <_ZN12OrangutanSVP17serialSendIfReadyEc>:
    17d0:	1f 93       	push	r17
    17d2:	18 2f       	mov	r17, r24
    17d4:	98 2f       	mov	r25, r24
    17d6:	90 95       	com	r25
    17d8:	99 1f       	adc	r25, r25
    17da:	99 27       	eor	r25, r25
    17dc:	99 1f       	adc	r25, r25
    17de:	85 e8       	ldi	r24, 0x85	; 133
    17e0:	89 1b       	sub	r24, r25
    17e2:	65 e0       	ldi	r22, 0x05	; 5
    17e4:	0e 94 2b 0c 	call	0x1856	; 0x1856 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    17e8:	81 2f       	mov	r24, r17
    17ea:	8f 77       	andi	r24, 0x7F	; 127
    17ec:	65 e0       	ldi	r22, 0x05	; 5
    17ee:	0e 94 2b 0c 	call	0x1856	; 0x1856 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    17f2:	1f 91       	pop	r17
    17f4:	08 95       	ret

000017f6 <delayMicroseconds>:
    17f6:	6f 93       	push	r22
    17f8:	64 e0       	ldi	r22, 0x04	; 4
    17fa:	6a 95       	dec	r22
    17fc:	f1 f7       	brne	.-4      	; 0x17fa <delayMicroseconds+0x4>
    17fe:	6f 91       	pop	r22
    1800:	01 97       	sbiw	r24, 0x01	; 1
    1802:	c9 f7       	brne	.-14     	; 0x17f6 <delayMicroseconds>
    1804:	08 95       	ret

00001806 <_ZN18OrangutanSPIMaster4initEhh>:
    1806:	a1 e0       	ldi	r26, 0x01	; 1
    1808:	b0 e0       	ldi	r27, 0x00	; 0
    180a:	e9 e0       	ldi	r30, 0x09	; 9
    180c:	fc e0       	ldi	r31, 0x0C	; 12
    180e:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__prologue_saves__+0x1e>
    1812:	18 2f       	mov	r17, r24
    1814:	24 99       	sbic	0x04, 4	; 4
    1816:	09 c0       	rjmp	.+18     	; 0x182a <_ZN18OrangutanSPIMaster4initEhh+0x24>
    1818:	2c 99       	sbic	0x05, 4	; 5
    181a:	07 c0       	rjmp	.+14     	; 0x182a <_ZN18OrangutanSPIMaster4initEhh+0x24>
    181c:	2c 9a       	sbi	0x05, 4	; 5
    181e:	8e e1       	ldi	r24, 0x1E	; 30
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	69 83       	std	Y+1, r22	; 0x01
    1824:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <delayMicroseconds>
    1828:	69 81       	ldd	r22, Y+1	; 0x01
    182a:	84 b1       	in	r24, 0x04	; 4
    182c:	80 6a       	ori	r24, 0xA0	; 160
    182e:	84 b9       	out	0x04, r24	; 4
    1830:	26 98       	cbi	0x04, 6	; 4
    1832:	81 2f       	mov	r24, r17
    1834:	83 70       	andi	r24, 0x03	; 3
    1836:	80 65       	ori	r24, 0x50	; 80
    1838:	6c 7a       	andi	r22, 0xAC	; 172
    183a:	86 2b       	or	r24, r22
    183c:	8c bd       	out	0x2c, r24	; 44
    183e:	81 e0       	ldi	r24, 0x01	; 1
    1840:	12 ff       	sbrs	r17, 2
    1842:	80 e0       	ldi	r24, 0x00	; 0
    1844:	8d bd       	out	0x2d, r24	; 45
    1846:	81 e0       	ldi	r24, 0x01	; 1
    1848:	90 e0       	ldi	r25, 0x00	; 0
    184a:	0e 94 cb 0b 	call	0x1796	; 0x1796 <_ZN13OrangutanTime17delayMillisecondsEj>
    184e:	21 96       	adiw	r28, 0x01	; 1
    1850:	e3 e0       	ldi	r30, 0x03	; 3
    1852:	0c 94 e0 0c 	jmp	0x19c0	; 0x19c0 <__epilogue_restores__+0x1e>

00001856 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>:
    1856:	0f 93       	push	r16
    1858:	1f 93       	push	r17
    185a:	08 2f       	mov	r16, r24
    185c:	16 2f       	mov	r17, r22
    185e:	0c b4       	in	r0, 0x2c	; 44
    1860:	06 fc       	sbrc	r0, 6
    1862:	04 c0       	rjmp	.+8      	; 0x186c <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x16>
    1864:	80 e0       	ldi	r24, 0x00	; 0
    1866:	64 e0       	ldi	r22, 0x04	; 4
    1868:	0e 94 03 0c 	call	0x1806	; 0x1806 <_ZN18OrangutanSPIMaster4initEhh>
    186c:	0c b4       	in	r0, 0x2c	; 44
    186e:	04 fc       	sbrc	r0, 4
    1870:	03 c0       	rjmp	.+6      	; 0x1878 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x22>
    1872:	8c b5       	in	r24, 0x2c	; 44
    1874:	80 61       	ori	r24, 0x10	; 16
    1876:	8c bd       	out	0x2c, r24	; 44
    1878:	0e bd       	out	0x2e, r16	; 46
    187a:	03 c0       	rjmp	.+6      	; 0x1882 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x2c>
    187c:	0c b4       	in	r0, 0x2c	; 44
    187e:	04 fe       	sbrs	r0, 4
    1880:	0b c0       	rjmp	.+22     	; 0x1898 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x42>
    1882:	0d b4       	in	r0, 0x2d	; 45
    1884:	07 fe       	sbrs	r0, 7
    1886:	fa cf       	rjmp	.-12     	; 0x187c <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x26>
    1888:	11 23       	and	r17, r17
    188a:	21 f0       	breq	.+8      	; 0x1894 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x3e>
    188c:	81 2f       	mov	r24, r17
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <delayMicroseconds>
    1894:	8e b5       	in	r24, 0x2e	; 46
    1896:	01 c0       	rjmp	.+2      	; 0x189a <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x44>
    1898:	80 e0       	ldi	r24, 0x00	; 0
    189a:	1f 91       	pop	r17
    189c:	0f 91       	pop	r16
    189e:	08 95       	ret

000018a0 <__mulsi3>:
    18a0:	db 01       	movw	r26, r22
    18a2:	8f 93       	push	r24
    18a4:	9f 93       	push	r25
    18a6:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__muluhisi3>
    18aa:	bf 91       	pop	r27
    18ac:	af 91       	pop	r26
    18ae:	a2 9f       	mul	r26, r18
    18b0:	80 0d       	add	r24, r0
    18b2:	91 1d       	adc	r25, r1
    18b4:	a3 9f       	mul	r26, r19
    18b6:	90 0d       	add	r25, r0
    18b8:	b2 9f       	mul	r27, r18
    18ba:	90 0d       	add	r25, r0
    18bc:	11 24       	eor	r1, r1
    18be:	08 95       	ret

000018c0 <__udivmodhi4>:
    18c0:	aa 1b       	sub	r26, r26
    18c2:	bb 1b       	sub	r27, r27
    18c4:	51 e1       	ldi	r21, 0x11	; 17
    18c6:	07 c0       	rjmp	.+14     	; 0x18d6 <__udivmodhi4_ep>

000018c8 <__udivmodhi4_loop>:
    18c8:	aa 1f       	adc	r26, r26
    18ca:	bb 1f       	adc	r27, r27
    18cc:	a6 17       	cp	r26, r22
    18ce:	b7 07       	cpc	r27, r23
    18d0:	10 f0       	brcs	.+4      	; 0x18d6 <__udivmodhi4_ep>
    18d2:	a6 1b       	sub	r26, r22
    18d4:	b7 0b       	sbc	r27, r23

000018d6 <__udivmodhi4_ep>:
    18d6:	88 1f       	adc	r24, r24
    18d8:	99 1f       	adc	r25, r25
    18da:	5a 95       	dec	r21
    18dc:	a9 f7       	brne	.-22     	; 0x18c8 <__udivmodhi4_loop>
    18de:	80 95       	com	r24
    18e0:	90 95       	com	r25
    18e2:	bc 01       	movw	r22, r24
    18e4:	cd 01       	movw	r24, r26
    18e6:	08 95       	ret

000018e8 <__divmodhi4>:
    18e8:	97 fb       	bst	r25, 7
    18ea:	07 2e       	mov	r0, r23
    18ec:	16 f4       	brtc	.+4      	; 0x18f2 <__divmodhi4+0xa>
    18ee:	00 94       	com	r0
    18f0:	07 d0       	rcall	.+14     	; 0x1900 <__divmodhi4_neg1>
    18f2:	77 fd       	sbrc	r23, 7
    18f4:	09 d0       	rcall	.+18     	; 0x1908 <__divmodhi4_neg2>
    18f6:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <__udivmodhi4>
    18fa:	07 fc       	sbrc	r0, 7
    18fc:	05 d0       	rcall	.+10     	; 0x1908 <__divmodhi4_neg2>
    18fe:	3e f4       	brtc	.+14     	; 0x190e <__divmodhi4_exit>

00001900 <__divmodhi4_neg1>:
    1900:	90 95       	com	r25
    1902:	81 95       	neg	r24
    1904:	9f 4f       	sbci	r25, 0xFF	; 255
    1906:	08 95       	ret

00001908 <__divmodhi4_neg2>:
    1908:	70 95       	com	r23
    190a:	61 95       	neg	r22
    190c:	7f 4f       	sbci	r23, 0xFF	; 255

0000190e <__divmodhi4_exit>:
    190e:	08 95       	ret

00001910 <__udivmodsi4>:
    1910:	a1 e2       	ldi	r26, 0x21	; 33
    1912:	1a 2e       	mov	r1, r26
    1914:	aa 1b       	sub	r26, r26
    1916:	bb 1b       	sub	r27, r27
    1918:	fd 01       	movw	r30, r26
    191a:	0d c0       	rjmp	.+26     	; 0x1936 <__udivmodsi4_ep>

0000191c <__udivmodsi4_loop>:
    191c:	aa 1f       	adc	r26, r26
    191e:	bb 1f       	adc	r27, r27
    1920:	ee 1f       	adc	r30, r30
    1922:	ff 1f       	adc	r31, r31
    1924:	a2 17       	cp	r26, r18
    1926:	b3 07       	cpc	r27, r19
    1928:	e4 07       	cpc	r30, r20
    192a:	f5 07       	cpc	r31, r21
    192c:	20 f0       	brcs	.+8      	; 0x1936 <__udivmodsi4_ep>
    192e:	a2 1b       	sub	r26, r18
    1930:	b3 0b       	sbc	r27, r19
    1932:	e4 0b       	sbc	r30, r20
    1934:	f5 0b       	sbc	r31, r21

00001936 <__udivmodsi4_ep>:
    1936:	66 1f       	adc	r22, r22
    1938:	77 1f       	adc	r23, r23
    193a:	88 1f       	adc	r24, r24
    193c:	99 1f       	adc	r25, r25
    193e:	1a 94       	dec	r1
    1940:	69 f7       	brne	.-38     	; 0x191c <__udivmodsi4_loop>
    1942:	60 95       	com	r22
    1944:	70 95       	com	r23
    1946:	80 95       	com	r24
    1948:	90 95       	com	r25
    194a:	9b 01       	movw	r18, r22
    194c:	ac 01       	movw	r20, r24
    194e:	bd 01       	movw	r22, r26
    1950:	cf 01       	movw	r24, r30
    1952:	08 95       	ret

00001954 <__muluhisi3>:
    1954:	0e 94 ec 0c 	call	0x19d8	; 0x19d8 <__umulhisi3>
    1958:	a5 9f       	mul	r26, r21
    195a:	90 0d       	add	r25, r0
    195c:	b4 9f       	mul	r27, r20
    195e:	90 0d       	add	r25, r0
    1960:	a4 9f       	mul	r26, r20
    1962:	80 0d       	add	r24, r0
    1964:	91 1d       	adc	r25, r1
    1966:	11 24       	eor	r1, r1
    1968:	08 95       	ret

0000196a <__prologue_saves__>:
    196a:	2f 92       	push	r2
    196c:	3f 92       	push	r3
    196e:	4f 92       	push	r4
    1970:	5f 92       	push	r5
    1972:	6f 92       	push	r6
    1974:	7f 92       	push	r7
    1976:	8f 92       	push	r8
    1978:	9f 92       	push	r9
    197a:	af 92       	push	r10
    197c:	bf 92       	push	r11
    197e:	cf 92       	push	r12
    1980:	df 92       	push	r13
    1982:	ef 92       	push	r14
    1984:	ff 92       	push	r15
    1986:	0f 93       	push	r16
    1988:	1f 93       	push	r17
    198a:	cf 93       	push	r28
    198c:	df 93       	push	r29
    198e:	cd b7       	in	r28, 0x3d	; 61
    1990:	de b7       	in	r29, 0x3e	; 62
    1992:	ca 1b       	sub	r28, r26
    1994:	db 0b       	sbc	r29, r27
    1996:	0f b6       	in	r0, 0x3f	; 63
    1998:	f8 94       	cli
    199a:	de bf       	out	0x3e, r29	; 62
    199c:	0f be       	out	0x3f, r0	; 63
    199e:	cd bf       	out	0x3d, r28	; 61
    19a0:	09 94       	ijmp

000019a2 <__epilogue_restores__>:
    19a2:	2a 88       	ldd	r2, Y+18	; 0x12
    19a4:	39 88       	ldd	r3, Y+17	; 0x11
    19a6:	48 88       	ldd	r4, Y+16	; 0x10
    19a8:	5f 84       	ldd	r5, Y+15	; 0x0f
    19aa:	6e 84       	ldd	r6, Y+14	; 0x0e
    19ac:	7d 84       	ldd	r7, Y+13	; 0x0d
    19ae:	8c 84       	ldd	r8, Y+12	; 0x0c
    19b0:	9b 84       	ldd	r9, Y+11	; 0x0b
    19b2:	aa 84       	ldd	r10, Y+10	; 0x0a
    19b4:	b9 84       	ldd	r11, Y+9	; 0x09
    19b6:	c8 84       	ldd	r12, Y+8	; 0x08
    19b8:	df 80       	ldd	r13, Y+7	; 0x07
    19ba:	ee 80       	ldd	r14, Y+6	; 0x06
    19bc:	fd 80       	ldd	r15, Y+5	; 0x05
    19be:	0c 81       	ldd	r16, Y+4	; 0x04
    19c0:	1b 81       	ldd	r17, Y+3	; 0x03
    19c2:	aa 81       	ldd	r26, Y+2	; 0x02
    19c4:	b9 81       	ldd	r27, Y+1	; 0x01
    19c6:	ce 0f       	add	r28, r30
    19c8:	d1 1d       	adc	r29, r1
    19ca:	0f b6       	in	r0, 0x3f	; 63
    19cc:	f8 94       	cli
    19ce:	de bf       	out	0x3e, r29	; 62
    19d0:	0f be       	out	0x3f, r0	; 63
    19d2:	cd bf       	out	0x3d, r28	; 61
    19d4:	ed 01       	movw	r28, r26
    19d6:	08 95       	ret

000019d8 <__umulhisi3>:
    19d8:	a2 9f       	mul	r26, r18
    19da:	b0 01       	movw	r22, r0
    19dc:	b3 9f       	mul	r27, r19
    19de:	c0 01       	movw	r24, r0
    19e0:	a3 9f       	mul	r26, r19
    19e2:	70 0d       	add	r23, r0
    19e4:	81 1d       	adc	r24, r1
    19e6:	11 24       	eor	r1, r1
    19e8:	91 1d       	adc	r25, r1
    19ea:	b2 9f       	mul	r27, r18
    19ec:	70 0d       	add	r23, r0
    19ee:	81 1d       	adc	r24, r1
    19f0:	11 24       	eor	r1, r1
    19f2:	91 1d       	adc	r25, r1
    19f4:	08 95       	ret

000019f6 <malloc>:
    19f6:	cf 93       	push	r28
    19f8:	df 93       	push	r29
    19fa:	82 30       	cpi	r24, 0x02	; 2
    19fc:	91 05       	cpc	r25, r1
    19fe:	10 f4       	brcc	.+4      	; 0x1a04 <malloc+0xe>
    1a00:	82 e0       	ldi	r24, 0x02	; 2
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	e0 91 cc 03 	lds	r30, 0x03CC
    1a08:	f0 91 cd 03 	lds	r31, 0x03CD
    1a0c:	20 e0       	ldi	r18, 0x00	; 0
    1a0e:	30 e0       	ldi	r19, 0x00	; 0
    1a10:	a0 e0       	ldi	r26, 0x00	; 0
    1a12:	b0 e0       	ldi	r27, 0x00	; 0
    1a14:	30 97       	sbiw	r30, 0x00	; 0
    1a16:	39 f1       	breq	.+78     	; 0x1a66 <malloc+0x70>
    1a18:	40 81       	ld	r20, Z
    1a1a:	51 81       	ldd	r21, Z+1	; 0x01
    1a1c:	48 17       	cp	r20, r24
    1a1e:	59 07       	cpc	r21, r25
    1a20:	b8 f0       	brcs	.+46     	; 0x1a50 <malloc+0x5a>
    1a22:	48 17       	cp	r20, r24
    1a24:	59 07       	cpc	r21, r25
    1a26:	71 f4       	brne	.+28     	; 0x1a44 <malloc+0x4e>
    1a28:	82 81       	ldd	r24, Z+2	; 0x02
    1a2a:	93 81       	ldd	r25, Z+3	; 0x03
    1a2c:	10 97       	sbiw	r26, 0x00	; 0
    1a2e:	29 f0       	breq	.+10     	; 0x1a3a <malloc+0x44>
    1a30:	13 96       	adiw	r26, 0x03	; 3
    1a32:	9c 93       	st	X, r25
    1a34:	8e 93       	st	-X, r24
    1a36:	12 97       	sbiw	r26, 0x02	; 2
    1a38:	2c c0       	rjmp	.+88     	; 0x1a92 <malloc+0x9c>
    1a3a:	90 93 cd 03 	sts	0x03CD, r25
    1a3e:	80 93 cc 03 	sts	0x03CC, r24
    1a42:	27 c0       	rjmp	.+78     	; 0x1a92 <malloc+0x9c>
    1a44:	21 15       	cp	r18, r1
    1a46:	31 05       	cpc	r19, r1
    1a48:	31 f0       	breq	.+12     	; 0x1a56 <malloc+0x60>
    1a4a:	42 17       	cp	r20, r18
    1a4c:	53 07       	cpc	r21, r19
    1a4e:	18 f0       	brcs	.+6      	; 0x1a56 <malloc+0x60>
    1a50:	a9 01       	movw	r20, r18
    1a52:	db 01       	movw	r26, r22
    1a54:	01 c0       	rjmp	.+2      	; 0x1a58 <malloc+0x62>
    1a56:	ef 01       	movw	r28, r30
    1a58:	9a 01       	movw	r18, r20
    1a5a:	bd 01       	movw	r22, r26
    1a5c:	df 01       	movw	r26, r30
    1a5e:	02 80       	ldd	r0, Z+2	; 0x02
    1a60:	f3 81       	ldd	r31, Z+3	; 0x03
    1a62:	e0 2d       	mov	r30, r0
    1a64:	d7 cf       	rjmp	.-82     	; 0x1a14 <malloc+0x1e>
    1a66:	21 15       	cp	r18, r1
    1a68:	31 05       	cpc	r19, r1
    1a6a:	f9 f0       	breq	.+62     	; 0x1aaa <malloc+0xb4>
    1a6c:	28 1b       	sub	r18, r24
    1a6e:	39 0b       	sbc	r19, r25
    1a70:	24 30       	cpi	r18, 0x04	; 4
    1a72:	31 05       	cpc	r19, r1
    1a74:	80 f4       	brcc	.+32     	; 0x1a96 <malloc+0xa0>
    1a76:	8a 81       	ldd	r24, Y+2	; 0x02
    1a78:	9b 81       	ldd	r25, Y+3	; 0x03
    1a7a:	61 15       	cp	r22, r1
    1a7c:	71 05       	cpc	r23, r1
    1a7e:	21 f0       	breq	.+8      	; 0x1a88 <malloc+0x92>
    1a80:	fb 01       	movw	r30, r22
    1a82:	93 83       	std	Z+3, r25	; 0x03
    1a84:	82 83       	std	Z+2, r24	; 0x02
    1a86:	04 c0       	rjmp	.+8      	; 0x1a90 <malloc+0x9a>
    1a88:	90 93 cd 03 	sts	0x03CD, r25
    1a8c:	80 93 cc 03 	sts	0x03CC, r24
    1a90:	fe 01       	movw	r30, r28
    1a92:	32 96       	adiw	r30, 0x02	; 2
    1a94:	44 c0       	rjmp	.+136    	; 0x1b1e <malloc+0x128>
    1a96:	fe 01       	movw	r30, r28
    1a98:	e2 0f       	add	r30, r18
    1a9a:	f3 1f       	adc	r31, r19
    1a9c:	81 93       	st	Z+, r24
    1a9e:	91 93       	st	Z+, r25
    1aa0:	22 50       	subi	r18, 0x02	; 2
    1aa2:	31 09       	sbc	r19, r1
    1aa4:	39 83       	std	Y+1, r19	; 0x01
    1aa6:	28 83       	st	Y, r18
    1aa8:	3a c0       	rjmp	.+116    	; 0x1b1e <malloc+0x128>
    1aaa:	20 91 ca 03 	lds	r18, 0x03CA
    1aae:	30 91 cb 03 	lds	r19, 0x03CB
    1ab2:	23 2b       	or	r18, r19
    1ab4:	41 f4       	brne	.+16     	; 0x1ac6 <malloc+0xd0>
    1ab6:	20 91 22 01 	lds	r18, 0x0122
    1aba:	30 91 23 01 	lds	r19, 0x0123
    1abe:	30 93 cb 03 	sts	0x03CB, r19
    1ac2:	20 93 ca 03 	sts	0x03CA, r18
    1ac6:	20 91 20 01 	lds	r18, 0x0120
    1aca:	30 91 21 01 	lds	r19, 0x0121
    1ace:	21 15       	cp	r18, r1
    1ad0:	31 05       	cpc	r19, r1
    1ad2:	41 f4       	brne	.+16     	; 0x1ae4 <malloc+0xee>
    1ad4:	2d b7       	in	r18, 0x3d	; 61
    1ad6:	3e b7       	in	r19, 0x3e	; 62
    1ad8:	40 91 24 01 	lds	r20, 0x0124
    1adc:	50 91 25 01 	lds	r21, 0x0125
    1ae0:	24 1b       	sub	r18, r20
    1ae2:	35 0b       	sbc	r19, r21
    1ae4:	e0 91 ca 03 	lds	r30, 0x03CA
    1ae8:	f0 91 cb 03 	lds	r31, 0x03CB
    1aec:	e2 17       	cp	r30, r18
    1aee:	f3 07       	cpc	r31, r19
    1af0:	a0 f4       	brcc	.+40     	; 0x1b1a <malloc+0x124>
    1af2:	2e 1b       	sub	r18, r30
    1af4:	3f 0b       	sbc	r19, r31
    1af6:	28 17       	cp	r18, r24
    1af8:	39 07       	cpc	r19, r25
    1afa:	78 f0       	brcs	.+30     	; 0x1b1a <malloc+0x124>
    1afc:	ac 01       	movw	r20, r24
    1afe:	4e 5f       	subi	r20, 0xFE	; 254
    1b00:	5f 4f       	sbci	r21, 0xFF	; 255
    1b02:	24 17       	cp	r18, r20
    1b04:	35 07       	cpc	r19, r21
    1b06:	48 f0       	brcs	.+18     	; 0x1b1a <malloc+0x124>
    1b08:	4e 0f       	add	r20, r30
    1b0a:	5f 1f       	adc	r21, r31
    1b0c:	50 93 cb 03 	sts	0x03CB, r21
    1b10:	40 93 ca 03 	sts	0x03CA, r20
    1b14:	81 93       	st	Z+, r24
    1b16:	91 93       	st	Z+, r25
    1b18:	02 c0       	rjmp	.+4      	; 0x1b1e <malloc+0x128>
    1b1a:	e0 e0       	ldi	r30, 0x00	; 0
    1b1c:	f0 e0       	ldi	r31, 0x00	; 0
    1b1e:	cf 01       	movw	r24, r30
    1b20:	df 91       	pop	r29
    1b22:	cf 91       	pop	r28
    1b24:	08 95       	ret

00001b26 <free>:
    1b26:	cf 93       	push	r28
    1b28:	df 93       	push	r29
    1b2a:	00 97       	sbiw	r24, 0x00	; 0
    1b2c:	09 f4       	brne	.+2      	; 0x1b30 <free+0xa>
    1b2e:	87 c0       	rjmp	.+270    	; 0x1c3e <free+0x118>
    1b30:	fc 01       	movw	r30, r24
    1b32:	32 97       	sbiw	r30, 0x02	; 2
    1b34:	13 82       	std	Z+3, r1	; 0x03
    1b36:	12 82       	std	Z+2, r1	; 0x02
    1b38:	c0 91 cc 03 	lds	r28, 0x03CC
    1b3c:	d0 91 cd 03 	lds	r29, 0x03CD
    1b40:	20 97       	sbiw	r28, 0x00	; 0
    1b42:	81 f4       	brne	.+32     	; 0x1b64 <free+0x3e>
    1b44:	20 81       	ld	r18, Z
    1b46:	31 81       	ldd	r19, Z+1	; 0x01
    1b48:	28 0f       	add	r18, r24
    1b4a:	39 1f       	adc	r19, r25
    1b4c:	80 91 ca 03 	lds	r24, 0x03CA
    1b50:	90 91 cb 03 	lds	r25, 0x03CB
    1b54:	82 17       	cp	r24, r18
    1b56:	93 07       	cpc	r25, r19
    1b58:	79 f5       	brne	.+94     	; 0x1bb8 <free+0x92>
    1b5a:	f0 93 cb 03 	sts	0x03CB, r31
    1b5e:	e0 93 ca 03 	sts	0x03CA, r30
    1b62:	6d c0       	rjmp	.+218    	; 0x1c3e <free+0x118>
    1b64:	de 01       	movw	r26, r28
    1b66:	20 e0       	ldi	r18, 0x00	; 0
    1b68:	30 e0       	ldi	r19, 0x00	; 0
    1b6a:	ae 17       	cp	r26, r30
    1b6c:	bf 07       	cpc	r27, r31
    1b6e:	50 f4       	brcc	.+20     	; 0x1b84 <free+0x5e>
    1b70:	12 96       	adiw	r26, 0x02	; 2
    1b72:	4d 91       	ld	r20, X+
    1b74:	5c 91       	ld	r21, X
    1b76:	13 97       	sbiw	r26, 0x03	; 3
    1b78:	9d 01       	movw	r18, r26
    1b7a:	41 15       	cp	r20, r1
    1b7c:	51 05       	cpc	r21, r1
    1b7e:	09 f1       	breq	.+66     	; 0x1bc2 <free+0x9c>
    1b80:	da 01       	movw	r26, r20
    1b82:	f3 cf       	rjmp	.-26     	; 0x1b6a <free+0x44>
    1b84:	b3 83       	std	Z+3, r27	; 0x03
    1b86:	a2 83       	std	Z+2, r26	; 0x02
    1b88:	40 81       	ld	r20, Z
    1b8a:	51 81       	ldd	r21, Z+1	; 0x01
    1b8c:	84 0f       	add	r24, r20
    1b8e:	95 1f       	adc	r25, r21
    1b90:	8a 17       	cp	r24, r26
    1b92:	9b 07       	cpc	r25, r27
    1b94:	71 f4       	brne	.+28     	; 0x1bb2 <free+0x8c>
    1b96:	8d 91       	ld	r24, X+
    1b98:	9c 91       	ld	r25, X
    1b9a:	11 97       	sbiw	r26, 0x01	; 1
    1b9c:	84 0f       	add	r24, r20
    1b9e:	95 1f       	adc	r25, r21
    1ba0:	02 96       	adiw	r24, 0x02	; 2
    1ba2:	91 83       	std	Z+1, r25	; 0x01
    1ba4:	80 83       	st	Z, r24
    1ba6:	12 96       	adiw	r26, 0x02	; 2
    1ba8:	8d 91       	ld	r24, X+
    1baa:	9c 91       	ld	r25, X
    1bac:	13 97       	sbiw	r26, 0x03	; 3
    1bae:	93 83       	std	Z+3, r25	; 0x03
    1bb0:	82 83       	std	Z+2, r24	; 0x02
    1bb2:	21 15       	cp	r18, r1
    1bb4:	31 05       	cpc	r19, r1
    1bb6:	29 f4       	brne	.+10     	; 0x1bc2 <free+0x9c>
    1bb8:	f0 93 cd 03 	sts	0x03CD, r31
    1bbc:	e0 93 cc 03 	sts	0x03CC, r30
    1bc0:	3e c0       	rjmp	.+124    	; 0x1c3e <free+0x118>
    1bc2:	d9 01       	movw	r26, r18
    1bc4:	13 96       	adiw	r26, 0x03	; 3
    1bc6:	fc 93       	st	X, r31
    1bc8:	ee 93       	st	-X, r30
    1bca:	12 97       	sbiw	r26, 0x02	; 2
    1bcc:	4d 91       	ld	r20, X+
    1bce:	5d 91       	ld	r21, X+
    1bd0:	a4 0f       	add	r26, r20
    1bd2:	b5 1f       	adc	r27, r21
    1bd4:	ea 17       	cp	r30, r26
    1bd6:	fb 07       	cpc	r31, r27
    1bd8:	79 f4       	brne	.+30     	; 0x1bf8 <free+0xd2>
    1bda:	80 81       	ld	r24, Z
    1bdc:	91 81       	ldd	r25, Z+1	; 0x01
    1bde:	84 0f       	add	r24, r20
    1be0:	95 1f       	adc	r25, r21
    1be2:	02 96       	adiw	r24, 0x02	; 2
    1be4:	d9 01       	movw	r26, r18
    1be6:	11 96       	adiw	r26, 0x01	; 1
    1be8:	9c 93       	st	X, r25
    1bea:	8e 93       	st	-X, r24
    1bec:	82 81       	ldd	r24, Z+2	; 0x02
    1bee:	93 81       	ldd	r25, Z+3	; 0x03
    1bf0:	13 96       	adiw	r26, 0x03	; 3
    1bf2:	9c 93       	st	X, r25
    1bf4:	8e 93       	st	-X, r24
    1bf6:	12 97       	sbiw	r26, 0x02	; 2
    1bf8:	e0 e0       	ldi	r30, 0x00	; 0
    1bfa:	f0 e0       	ldi	r31, 0x00	; 0
    1bfc:	8a 81       	ldd	r24, Y+2	; 0x02
    1bfe:	9b 81       	ldd	r25, Y+3	; 0x03
    1c00:	00 97       	sbiw	r24, 0x00	; 0
    1c02:	19 f0       	breq	.+6      	; 0x1c0a <free+0xe4>
    1c04:	fe 01       	movw	r30, r28
    1c06:	ec 01       	movw	r28, r24
    1c08:	f9 cf       	rjmp	.-14     	; 0x1bfc <free+0xd6>
    1c0a:	ce 01       	movw	r24, r28
    1c0c:	02 96       	adiw	r24, 0x02	; 2
    1c0e:	28 81       	ld	r18, Y
    1c10:	39 81       	ldd	r19, Y+1	; 0x01
    1c12:	82 0f       	add	r24, r18
    1c14:	93 1f       	adc	r25, r19
    1c16:	20 91 ca 03 	lds	r18, 0x03CA
    1c1a:	30 91 cb 03 	lds	r19, 0x03CB
    1c1e:	28 17       	cp	r18, r24
    1c20:	39 07       	cpc	r19, r25
    1c22:	69 f4       	brne	.+26     	; 0x1c3e <free+0x118>
    1c24:	30 97       	sbiw	r30, 0x00	; 0
    1c26:	29 f4       	brne	.+10     	; 0x1c32 <free+0x10c>
    1c28:	10 92 cd 03 	sts	0x03CD, r1
    1c2c:	10 92 cc 03 	sts	0x03CC, r1
    1c30:	02 c0       	rjmp	.+4      	; 0x1c36 <free+0x110>
    1c32:	13 82       	std	Z+3, r1	; 0x03
    1c34:	12 82       	std	Z+2, r1	; 0x02
    1c36:	d0 93 cb 03 	sts	0x03CB, r29
    1c3a:	c0 93 ca 03 	sts	0x03CA, r28
    1c3e:	df 91       	pop	r29
    1c40:	cf 91       	pop	r28
    1c42:	08 95       	ret

00001c44 <fdevopen>:
    1c44:	0f 93       	push	r16
    1c46:	1f 93       	push	r17
    1c48:	cf 93       	push	r28
    1c4a:	df 93       	push	r29
    1c4c:	ec 01       	movw	r28, r24
    1c4e:	8b 01       	movw	r16, r22
    1c50:	00 97       	sbiw	r24, 0x00	; 0
    1c52:	31 f4       	brne	.+12     	; 0x1c60 <fdevopen+0x1c>
    1c54:	61 15       	cp	r22, r1
    1c56:	71 05       	cpc	r23, r1
    1c58:	19 f4       	brne	.+6      	; 0x1c60 <fdevopen+0x1c>
    1c5a:	80 e0       	ldi	r24, 0x00	; 0
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	38 c0       	rjmp	.+112    	; 0x1cd0 <fdevopen+0x8c>
    1c60:	6e e0       	ldi	r22, 0x0E	; 14
    1c62:	70 e0       	ldi	r23, 0x00	; 0
    1c64:	81 e0       	ldi	r24, 0x01	; 1
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	0e 94 cc 13 	call	0x2798	; 0x2798 <calloc>
    1c6c:	fc 01       	movw	r30, r24
    1c6e:	00 97       	sbiw	r24, 0x00	; 0
    1c70:	a1 f3       	breq	.-24     	; 0x1c5a <fdevopen+0x16>
    1c72:	80 e8       	ldi	r24, 0x80	; 128
    1c74:	83 83       	std	Z+3, r24	; 0x03
    1c76:	01 15       	cp	r16, r1
    1c78:	11 05       	cpc	r17, r1
    1c7a:	71 f0       	breq	.+28     	; 0x1c98 <fdevopen+0x54>
    1c7c:	13 87       	std	Z+11, r17	; 0x0b
    1c7e:	02 87       	std	Z+10, r16	; 0x0a
    1c80:	81 e8       	ldi	r24, 0x81	; 129
    1c82:	83 83       	std	Z+3, r24	; 0x03
    1c84:	80 91 ce 03 	lds	r24, 0x03CE
    1c88:	90 91 cf 03 	lds	r25, 0x03CF
    1c8c:	89 2b       	or	r24, r25
    1c8e:	21 f4       	brne	.+8      	; 0x1c98 <fdevopen+0x54>
    1c90:	f0 93 cf 03 	sts	0x03CF, r31
    1c94:	e0 93 ce 03 	sts	0x03CE, r30
    1c98:	20 97       	sbiw	r28, 0x00	; 0
    1c9a:	c9 f0       	breq	.+50     	; 0x1cce <fdevopen+0x8a>
    1c9c:	d1 87       	std	Z+9, r29	; 0x09
    1c9e:	c0 87       	std	Z+8, r28	; 0x08
    1ca0:	83 81       	ldd	r24, Z+3	; 0x03
    1ca2:	82 60       	ori	r24, 0x02	; 2
    1ca4:	83 83       	std	Z+3, r24	; 0x03
    1ca6:	80 91 d0 03 	lds	r24, 0x03D0
    1caa:	90 91 d1 03 	lds	r25, 0x03D1
    1cae:	89 2b       	or	r24, r25
    1cb0:	71 f4       	brne	.+28     	; 0x1cce <fdevopen+0x8a>
    1cb2:	f0 93 d1 03 	sts	0x03D1, r31
    1cb6:	e0 93 d0 03 	sts	0x03D0, r30
    1cba:	80 91 d2 03 	lds	r24, 0x03D2
    1cbe:	90 91 d3 03 	lds	r25, 0x03D3
    1cc2:	89 2b       	or	r24, r25
    1cc4:	21 f4       	brne	.+8      	; 0x1cce <fdevopen+0x8a>
    1cc6:	f0 93 d3 03 	sts	0x03D3, r31
    1cca:	e0 93 d2 03 	sts	0x03D2, r30
    1cce:	cf 01       	movw	r24, r30
    1cd0:	df 91       	pop	r29
    1cd2:	cf 91       	pop	r28
    1cd4:	1f 91       	pop	r17
    1cd6:	0f 91       	pop	r16
    1cd8:	08 95       	ret

00001cda <printf>:
    1cda:	cf 93       	push	r28
    1cdc:	df 93       	push	r29
    1cde:	cd b7       	in	r28, 0x3d	; 61
    1ce0:	de b7       	in	r29, 0x3e	; 62
    1ce2:	fe 01       	movw	r30, r28
    1ce4:	35 96       	adiw	r30, 0x05	; 5
    1ce6:	61 91       	ld	r22, Z+
    1ce8:	71 91       	ld	r23, Z+
    1cea:	af 01       	movw	r20, r30
    1cec:	80 91 d0 03 	lds	r24, 0x03D0
    1cf0:	90 91 d1 03 	lds	r25, 0x03D1
    1cf4:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <vfprintf>
    1cf8:	df 91       	pop	r29
    1cfa:	cf 91       	pop	r28
    1cfc:	08 95       	ret

00001cfe <puts>:
    1cfe:	0f 93       	push	r16
    1d00:	1f 93       	push	r17
    1d02:	cf 93       	push	r28
    1d04:	df 93       	push	r29
    1d06:	e0 91 d0 03 	lds	r30, 0x03D0
    1d0a:	f0 91 d1 03 	lds	r31, 0x03D1
    1d0e:	23 81       	ldd	r18, Z+3	; 0x03
    1d10:	21 ff       	sbrs	r18, 1
    1d12:	1b c0       	rjmp	.+54     	; 0x1d4a <puts+0x4c>
    1d14:	ec 01       	movw	r28, r24
    1d16:	00 e0       	ldi	r16, 0x00	; 0
    1d18:	10 e0       	ldi	r17, 0x00	; 0
    1d1a:	89 91       	ld	r24, Y+
    1d1c:	60 91 d0 03 	lds	r22, 0x03D0
    1d20:	70 91 d1 03 	lds	r23, 0x03D1
    1d24:	db 01       	movw	r26, r22
    1d26:	18 96       	adiw	r26, 0x08	; 8
    1d28:	ed 91       	ld	r30, X+
    1d2a:	fc 91       	ld	r31, X
    1d2c:	19 97       	sbiw	r26, 0x09	; 9
    1d2e:	88 23       	and	r24, r24
    1d30:	31 f0       	breq	.+12     	; 0x1d3e <puts+0x40>
    1d32:	09 95       	icall
    1d34:	89 2b       	or	r24, r25
    1d36:	89 f3       	breq	.-30     	; 0x1d1a <puts+0x1c>
    1d38:	0f ef       	ldi	r16, 0xFF	; 255
    1d3a:	1f ef       	ldi	r17, 0xFF	; 255
    1d3c:	ee cf       	rjmp	.-36     	; 0x1d1a <puts+0x1c>
    1d3e:	8a e0       	ldi	r24, 0x0A	; 10
    1d40:	09 95       	icall
    1d42:	89 2b       	or	r24, r25
    1d44:	11 f4       	brne	.+4      	; 0x1d4a <puts+0x4c>
    1d46:	c8 01       	movw	r24, r16
    1d48:	02 c0       	rjmp	.+4      	; 0x1d4e <puts+0x50>
    1d4a:	8f ef       	ldi	r24, 0xFF	; 255
    1d4c:	9f ef       	ldi	r25, 0xFF	; 255
    1d4e:	df 91       	pop	r29
    1d50:	cf 91       	pop	r28
    1d52:	1f 91       	pop	r17
    1d54:	0f 91       	pop	r16
    1d56:	08 95       	ret

00001d58 <sprintf>:
    1d58:	0f 93       	push	r16
    1d5a:	1f 93       	push	r17
    1d5c:	cf 93       	push	r28
    1d5e:	df 93       	push	r29
    1d60:	cd b7       	in	r28, 0x3d	; 61
    1d62:	de b7       	in	r29, 0x3e	; 62
    1d64:	2e 97       	sbiw	r28, 0x0e	; 14
    1d66:	0f b6       	in	r0, 0x3f	; 63
    1d68:	f8 94       	cli
    1d6a:	de bf       	out	0x3e, r29	; 62
    1d6c:	0f be       	out	0x3f, r0	; 63
    1d6e:	cd bf       	out	0x3d, r28	; 61
    1d70:	0d 89       	ldd	r16, Y+21	; 0x15
    1d72:	1e 89       	ldd	r17, Y+22	; 0x16
    1d74:	86 e0       	ldi	r24, 0x06	; 6
    1d76:	8c 83       	std	Y+4, r24	; 0x04
    1d78:	1a 83       	std	Y+2, r17	; 0x02
    1d7a:	09 83       	std	Y+1, r16	; 0x01
    1d7c:	8f ef       	ldi	r24, 0xFF	; 255
    1d7e:	9f e7       	ldi	r25, 0x7F	; 127
    1d80:	9e 83       	std	Y+6, r25	; 0x06
    1d82:	8d 83       	std	Y+5, r24	; 0x05
    1d84:	ae 01       	movw	r20, r28
    1d86:	47 5e       	subi	r20, 0xE7	; 231
    1d88:	5f 4f       	sbci	r21, 0xFF	; 255
    1d8a:	6f 89       	ldd	r22, Y+23	; 0x17
    1d8c:	78 8d       	ldd	r23, Y+24	; 0x18
    1d8e:	ce 01       	movw	r24, r28
    1d90:	01 96       	adiw	r24, 0x01	; 1
    1d92:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <vfprintf>
    1d96:	ef 81       	ldd	r30, Y+7	; 0x07
    1d98:	f8 85       	ldd	r31, Y+8	; 0x08
    1d9a:	e0 0f       	add	r30, r16
    1d9c:	f1 1f       	adc	r31, r17
    1d9e:	10 82       	st	Z, r1
    1da0:	2e 96       	adiw	r28, 0x0e	; 14
    1da2:	0f b6       	in	r0, 0x3f	; 63
    1da4:	f8 94       	cli
    1da6:	de bf       	out	0x3e, r29	; 62
    1da8:	0f be       	out	0x3f, r0	; 63
    1daa:	cd bf       	out	0x3d, r28	; 61
    1dac:	df 91       	pop	r29
    1dae:	cf 91       	pop	r28
    1db0:	1f 91       	pop	r17
    1db2:	0f 91       	pop	r16
    1db4:	08 95       	ret

00001db6 <sscanf>:
    1db6:	cf 93       	push	r28
    1db8:	df 93       	push	r29
    1dba:	cd b7       	in	r28, 0x3d	; 61
    1dbc:	de b7       	in	r29, 0x3e	; 62
    1dbe:	2e 97       	sbiw	r28, 0x0e	; 14
    1dc0:	0f b6       	in	r0, 0x3f	; 63
    1dc2:	f8 94       	cli
    1dc4:	de bf       	out	0x3e, r29	; 62
    1dc6:	0f be       	out	0x3f, r0	; 63
    1dc8:	cd bf       	out	0x3d, r28	; 61
    1dca:	85 e0       	ldi	r24, 0x05	; 5
    1dcc:	8c 83       	std	Y+4, r24	; 0x04
    1dce:	8b 89       	ldd	r24, Y+19	; 0x13
    1dd0:	9c 89       	ldd	r25, Y+20	; 0x14
    1dd2:	9a 83       	std	Y+2, r25	; 0x02
    1dd4:	89 83       	std	Y+1, r24	; 0x01
    1dd6:	ae 01       	movw	r20, r28
    1dd8:	49 5e       	subi	r20, 0xE9	; 233
    1dda:	5f 4f       	sbci	r21, 0xFF	; 255
    1ddc:	6d 89       	ldd	r22, Y+21	; 0x15
    1dde:	7e 89       	ldd	r23, Y+22	; 0x16
    1de0:	ce 01       	movw	r24, r28
    1de2:	01 96       	adiw	r24, 0x01	; 1
    1de4:	0e 94 95 12 	call	0x252a	; 0x252a <vfscanf>
    1de8:	2e 96       	adiw	r28, 0x0e	; 14
    1dea:	0f b6       	in	r0, 0x3f	; 63
    1dec:	f8 94       	cli
    1dee:	de bf       	out	0x3e, r29	; 62
    1df0:	0f be       	out	0x3f, r0	; 63
    1df2:	cd bf       	out	0x3d, r28	; 61
    1df4:	df 91       	pop	r29
    1df6:	cf 91       	pop	r28
    1df8:	08 95       	ret

00001dfa <vfprintf>:
    1dfa:	2f 92       	push	r2
    1dfc:	3f 92       	push	r3
    1dfe:	4f 92       	push	r4
    1e00:	5f 92       	push	r5
    1e02:	6f 92       	push	r6
    1e04:	7f 92       	push	r7
    1e06:	8f 92       	push	r8
    1e08:	9f 92       	push	r9
    1e0a:	af 92       	push	r10
    1e0c:	bf 92       	push	r11
    1e0e:	cf 92       	push	r12
    1e10:	df 92       	push	r13
    1e12:	ef 92       	push	r14
    1e14:	ff 92       	push	r15
    1e16:	0f 93       	push	r16
    1e18:	1f 93       	push	r17
    1e1a:	cf 93       	push	r28
    1e1c:	df 93       	push	r29
    1e1e:	cd b7       	in	r28, 0x3d	; 61
    1e20:	de b7       	in	r29, 0x3e	; 62
    1e22:	2c 97       	sbiw	r28, 0x0c	; 12
    1e24:	0f b6       	in	r0, 0x3f	; 63
    1e26:	f8 94       	cli
    1e28:	de bf       	out	0x3e, r29	; 62
    1e2a:	0f be       	out	0x3f, r0	; 63
    1e2c:	cd bf       	out	0x3d, r28	; 61
    1e2e:	7c 01       	movw	r14, r24
    1e30:	6b 01       	movw	r12, r22
    1e32:	8a 01       	movw	r16, r20
    1e34:	fc 01       	movw	r30, r24
    1e36:	17 82       	std	Z+7, r1	; 0x07
    1e38:	16 82       	std	Z+6, r1	; 0x06
    1e3a:	83 81       	ldd	r24, Z+3	; 0x03
    1e3c:	81 ff       	sbrs	r24, 1
    1e3e:	bd c1       	rjmp	.+890    	; 0x21ba <vfprintf+0x3c0>
    1e40:	ce 01       	movw	r24, r28
    1e42:	01 96       	adiw	r24, 0x01	; 1
    1e44:	4c 01       	movw	r8, r24
    1e46:	f7 01       	movw	r30, r14
    1e48:	93 81       	ldd	r25, Z+3	; 0x03
    1e4a:	f6 01       	movw	r30, r12
    1e4c:	93 fd       	sbrc	r25, 3
    1e4e:	85 91       	lpm	r24, Z+
    1e50:	93 ff       	sbrs	r25, 3
    1e52:	81 91       	ld	r24, Z+
    1e54:	6f 01       	movw	r12, r30
    1e56:	88 23       	and	r24, r24
    1e58:	09 f4       	brne	.+2      	; 0x1e5c <vfprintf+0x62>
    1e5a:	ab c1       	rjmp	.+854    	; 0x21b2 <vfprintf+0x3b8>
    1e5c:	85 32       	cpi	r24, 0x25	; 37
    1e5e:	39 f4       	brne	.+14     	; 0x1e6e <vfprintf+0x74>
    1e60:	93 fd       	sbrc	r25, 3
    1e62:	85 91       	lpm	r24, Z+
    1e64:	93 ff       	sbrs	r25, 3
    1e66:	81 91       	ld	r24, Z+
    1e68:	6f 01       	movw	r12, r30
    1e6a:	85 32       	cpi	r24, 0x25	; 37
    1e6c:	29 f4       	brne	.+10     	; 0x1e78 <vfprintf+0x7e>
    1e6e:	b7 01       	movw	r22, r14
    1e70:	90 e0       	ldi	r25, 0x00	; 0
    1e72:	0e 94 56 14 	call	0x28ac	; 0x28ac <fputc>
    1e76:	e7 cf       	rjmp	.-50     	; 0x1e46 <vfprintf+0x4c>
    1e78:	51 2c       	mov	r5, r1
    1e7a:	31 2c       	mov	r3, r1
    1e7c:	20 e0       	ldi	r18, 0x00	; 0
    1e7e:	20 32       	cpi	r18, 0x20	; 32
    1e80:	a0 f4       	brcc	.+40     	; 0x1eaa <vfprintf+0xb0>
    1e82:	8b 32       	cpi	r24, 0x2B	; 43
    1e84:	69 f0       	breq	.+26     	; 0x1ea0 <vfprintf+0xa6>
    1e86:	30 f4       	brcc	.+12     	; 0x1e94 <vfprintf+0x9a>
    1e88:	80 32       	cpi	r24, 0x20	; 32
    1e8a:	59 f0       	breq	.+22     	; 0x1ea2 <vfprintf+0xa8>
    1e8c:	83 32       	cpi	r24, 0x23	; 35
    1e8e:	69 f4       	brne	.+26     	; 0x1eaa <vfprintf+0xb0>
    1e90:	20 61       	ori	r18, 0x10	; 16
    1e92:	2c c0       	rjmp	.+88     	; 0x1eec <vfprintf+0xf2>
    1e94:	8d 32       	cpi	r24, 0x2D	; 45
    1e96:	39 f0       	breq	.+14     	; 0x1ea6 <vfprintf+0xac>
    1e98:	80 33       	cpi	r24, 0x30	; 48
    1e9a:	39 f4       	brne	.+14     	; 0x1eaa <vfprintf+0xb0>
    1e9c:	21 60       	ori	r18, 0x01	; 1
    1e9e:	26 c0       	rjmp	.+76     	; 0x1eec <vfprintf+0xf2>
    1ea0:	22 60       	ori	r18, 0x02	; 2
    1ea2:	24 60       	ori	r18, 0x04	; 4
    1ea4:	23 c0       	rjmp	.+70     	; 0x1eec <vfprintf+0xf2>
    1ea6:	28 60       	ori	r18, 0x08	; 8
    1ea8:	21 c0       	rjmp	.+66     	; 0x1eec <vfprintf+0xf2>
    1eaa:	27 fd       	sbrc	r18, 7
    1eac:	27 c0       	rjmp	.+78     	; 0x1efc <vfprintf+0x102>
    1eae:	30 ed       	ldi	r19, 0xD0	; 208
    1eb0:	38 0f       	add	r19, r24
    1eb2:	3a 30       	cpi	r19, 0x0A	; 10
    1eb4:	78 f4       	brcc	.+30     	; 0x1ed4 <vfprintf+0xda>
    1eb6:	26 ff       	sbrs	r18, 6
    1eb8:	06 c0       	rjmp	.+12     	; 0x1ec6 <vfprintf+0xcc>
    1eba:	fa e0       	ldi	r31, 0x0A	; 10
    1ebc:	5f 9e       	mul	r5, r31
    1ebe:	30 0d       	add	r19, r0
    1ec0:	11 24       	eor	r1, r1
    1ec2:	53 2e       	mov	r5, r19
    1ec4:	13 c0       	rjmp	.+38     	; 0x1eec <vfprintf+0xf2>
    1ec6:	8a e0       	ldi	r24, 0x0A	; 10
    1ec8:	38 9e       	mul	r3, r24
    1eca:	30 0d       	add	r19, r0
    1ecc:	11 24       	eor	r1, r1
    1ece:	33 2e       	mov	r3, r19
    1ed0:	20 62       	ori	r18, 0x20	; 32
    1ed2:	0c c0       	rjmp	.+24     	; 0x1eec <vfprintf+0xf2>
    1ed4:	8e 32       	cpi	r24, 0x2E	; 46
    1ed6:	21 f4       	brne	.+8      	; 0x1ee0 <vfprintf+0xe6>
    1ed8:	26 fd       	sbrc	r18, 6
    1eda:	6b c1       	rjmp	.+726    	; 0x21b2 <vfprintf+0x3b8>
    1edc:	20 64       	ori	r18, 0x40	; 64
    1ede:	06 c0       	rjmp	.+12     	; 0x1eec <vfprintf+0xf2>
    1ee0:	8c 36       	cpi	r24, 0x6C	; 108
    1ee2:	11 f4       	brne	.+4      	; 0x1ee8 <vfprintf+0xee>
    1ee4:	20 68       	ori	r18, 0x80	; 128
    1ee6:	02 c0       	rjmp	.+4      	; 0x1eec <vfprintf+0xf2>
    1ee8:	88 36       	cpi	r24, 0x68	; 104
    1eea:	41 f4       	brne	.+16     	; 0x1efc <vfprintf+0x102>
    1eec:	f6 01       	movw	r30, r12
    1eee:	93 fd       	sbrc	r25, 3
    1ef0:	85 91       	lpm	r24, Z+
    1ef2:	93 ff       	sbrs	r25, 3
    1ef4:	81 91       	ld	r24, Z+
    1ef6:	6f 01       	movw	r12, r30
    1ef8:	81 11       	cpse	r24, r1
    1efa:	c1 cf       	rjmp	.-126    	; 0x1e7e <vfprintf+0x84>
    1efc:	98 2f       	mov	r25, r24
    1efe:	9f 7d       	andi	r25, 0xDF	; 223
    1f00:	95 54       	subi	r25, 0x45	; 69
    1f02:	93 30       	cpi	r25, 0x03	; 3
    1f04:	28 f4       	brcc	.+10     	; 0x1f10 <vfprintf+0x116>
    1f06:	0c 5f       	subi	r16, 0xFC	; 252
    1f08:	1f 4f       	sbci	r17, 0xFF	; 255
    1f0a:	ff e3       	ldi	r31, 0x3F	; 63
    1f0c:	f9 83       	std	Y+1, r31	; 0x01
    1f0e:	0d c0       	rjmp	.+26     	; 0x1f2a <vfprintf+0x130>
    1f10:	83 36       	cpi	r24, 0x63	; 99
    1f12:	31 f0       	breq	.+12     	; 0x1f20 <vfprintf+0x126>
    1f14:	83 37       	cpi	r24, 0x73	; 115
    1f16:	71 f0       	breq	.+28     	; 0x1f34 <vfprintf+0x13a>
    1f18:	83 35       	cpi	r24, 0x53	; 83
    1f1a:	09 f0       	breq	.+2      	; 0x1f1e <vfprintf+0x124>
    1f1c:	5b c0       	rjmp	.+182    	; 0x1fd4 <vfprintf+0x1da>
    1f1e:	22 c0       	rjmp	.+68     	; 0x1f64 <vfprintf+0x16a>
    1f20:	f8 01       	movw	r30, r16
    1f22:	80 81       	ld	r24, Z
    1f24:	89 83       	std	Y+1, r24	; 0x01
    1f26:	0e 5f       	subi	r16, 0xFE	; 254
    1f28:	1f 4f       	sbci	r17, 0xFF	; 255
    1f2a:	44 24       	eor	r4, r4
    1f2c:	43 94       	inc	r4
    1f2e:	51 2c       	mov	r5, r1
    1f30:	54 01       	movw	r10, r8
    1f32:	15 c0       	rjmp	.+42     	; 0x1f5e <vfprintf+0x164>
    1f34:	38 01       	movw	r6, r16
    1f36:	f2 e0       	ldi	r31, 0x02	; 2
    1f38:	6f 0e       	add	r6, r31
    1f3a:	71 1c       	adc	r7, r1
    1f3c:	f8 01       	movw	r30, r16
    1f3e:	a0 80       	ld	r10, Z
    1f40:	b1 80       	ldd	r11, Z+1	; 0x01
    1f42:	26 ff       	sbrs	r18, 6
    1f44:	03 c0       	rjmp	.+6      	; 0x1f4c <vfprintf+0x152>
    1f46:	65 2d       	mov	r22, r5
    1f48:	70 e0       	ldi	r23, 0x00	; 0
    1f4a:	02 c0       	rjmp	.+4      	; 0x1f50 <vfprintf+0x156>
    1f4c:	6f ef       	ldi	r22, 0xFF	; 255
    1f4e:	7f ef       	ldi	r23, 0xFF	; 255
    1f50:	c5 01       	movw	r24, r10
    1f52:	2c 87       	std	Y+12, r18	; 0x0c
    1f54:	0e 94 0d 14 	call	0x281a	; 0x281a <strnlen>
    1f58:	2c 01       	movw	r4, r24
    1f5a:	83 01       	movw	r16, r6
    1f5c:	2c 85       	ldd	r18, Y+12	; 0x0c
    1f5e:	2f 77       	andi	r18, 0x7F	; 127
    1f60:	22 2e       	mov	r2, r18
    1f62:	17 c0       	rjmp	.+46     	; 0x1f92 <vfprintf+0x198>
    1f64:	38 01       	movw	r6, r16
    1f66:	f2 e0       	ldi	r31, 0x02	; 2
    1f68:	6f 0e       	add	r6, r31
    1f6a:	71 1c       	adc	r7, r1
    1f6c:	f8 01       	movw	r30, r16
    1f6e:	a0 80       	ld	r10, Z
    1f70:	b1 80       	ldd	r11, Z+1	; 0x01
    1f72:	26 ff       	sbrs	r18, 6
    1f74:	03 c0       	rjmp	.+6      	; 0x1f7c <vfprintf+0x182>
    1f76:	65 2d       	mov	r22, r5
    1f78:	70 e0       	ldi	r23, 0x00	; 0
    1f7a:	02 c0       	rjmp	.+4      	; 0x1f80 <vfprintf+0x186>
    1f7c:	6f ef       	ldi	r22, 0xFF	; 255
    1f7e:	7f ef       	ldi	r23, 0xFF	; 255
    1f80:	c5 01       	movw	r24, r10
    1f82:	2c 87       	std	Y+12, r18	; 0x0c
    1f84:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <strnlen_P>
    1f88:	2c 01       	movw	r4, r24
    1f8a:	2c 85       	ldd	r18, Y+12	; 0x0c
    1f8c:	20 68       	ori	r18, 0x80	; 128
    1f8e:	22 2e       	mov	r2, r18
    1f90:	83 01       	movw	r16, r6
    1f92:	23 fc       	sbrc	r2, 3
    1f94:	1b c0       	rjmp	.+54     	; 0x1fcc <vfprintf+0x1d2>
    1f96:	83 2d       	mov	r24, r3
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	48 16       	cp	r4, r24
    1f9c:	59 06       	cpc	r5, r25
    1f9e:	b0 f4       	brcc	.+44     	; 0x1fcc <vfprintf+0x1d2>
    1fa0:	b7 01       	movw	r22, r14
    1fa2:	80 e2       	ldi	r24, 0x20	; 32
    1fa4:	90 e0       	ldi	r25, 0x00	; 0
    1fa6:	0e 94 56 14 	call	0x28ac	; 0x28ac <fputc>
    1faa:	3a 94       	dec	r3
    1fac:	f4 cf       	rjmp	.-24     	; 0x1f96 <vfprintf+0x19c>
    1fae:	f5 01       	movw	r30, r10
    1fb0:	27 fc       	sbrc	r2, 7
    1fb2:	85 91       	lpm	r24, Z+
    1fb4:	27 fe       	sbrs	r2, 7
    1fb6:	81 91       	ld	r24, Z+
    1fb8:	5f 01       	movw	r10, r30
    1fba:	b7 01       	movw	r22, r14
    1fbc:	90 e0       	ldi	r25, 0x00	; 0
    1fbe:	0e 94 56 14 	call	0x28ac	; 0x28ac <fputc>
    1fc2:	31 10       	cpse	r3, r1
    1fc4:	3a 94       	dec	r3
    1fc6:	f1 e0       	ldi	r31, 0x01	; 1
    1fc8:	4f 1a       	sub	r4, r31
    1fca:	51 08       	sbc	r5, r1
    1fcc:	41 14       	cp	r4, r1
    1fce:	51 04       	cpc	r5, r1
    1fd0:	71 f7       	brne	.-36     	; 0x1fae <vfprintf+0x1b4>
    1fd2:	e5 c0       	rjmp	.+458    	; 0x219e <vfprintf+0x3a4>
    1fd4:	84 36       	cpi	r24, 0x64	; 100
    1fd6:	11 f0       	breq	.+4      	; 0x1fdc <vfprintf+0x1e2>
    1fd8:	89 36       	cpi	r24, 0x69	; 105
    1fda:	39 f5       	brne	.+78     	; 0x202a <vfprintf+0x230>
    1fdc:	f8 01       	movw	r30, r16
    1fde:	27 ff       	sbrs	r18, 7
    1fe0:	07 c0       	rjmp	.+14     	; 0x1ff0 <vfprintf+0x1f6>
    1fe2:	60 81       	ld	r22, Z
    1fe4:	71 81       	ldd	r23, Z+1	; 0x01
    1fe6:	82 81       	ldd	r24, Z+2	; 0x02
    1fe8:	93 81       	ldd	r25, Z+3	; 0x03
    1fea:	0c 5f       	subi	r16, 0xFC	; 252
    1fec:	1f 4f       	sbci	r17, 0xFF	; 255
    1fee:	08 c0       	rjmp	.+16     	; 0x2000 <vfprintf+0x206>
    1ff0:	60 81       	ld	r22, Z
    1ff2:	71 81       	ldd	r23, Z+1	; 0x01
    1ff4:	88 27       	eor	r24, r24
    1ff6:	77 fd       	sbrc	r23, 7
    1ff8:	80 95       	com	r24
    1ffa:	98 2f       	mov	r25, r24
    1ffc:	0e 5f       	subi	r16, 0xFE	; 254
    1ffe:	1f 4f       	sbci	r17, 0xFF	; 255
    2000:	2f 76       	andi	r18, 0x6F	; 111
    2002:	b2 2e       	mov	r11, r18
    2004:	97 ff       	sbrs	r25, 7
    2006:	09 c0       	rjmp	.+18     	; 0x201a <vfprintf+0x220>
    2008:	90 95       	com	r25
    200a:	80 95       	com	r24
    200c:	70 95       	com	r23
    200e:	61 95       	neg	r22
    2010:	7f 4f       	sbci	r23, 0xFF	; 255
    2012:	8f 4f       	sbci	r24, 0xFF	; 255
    2014:	9f 4f       	sbci	r25, 0xFF	; 255
    2016:	20 68       	ori	r18, 0x80	; 128
    2018:	b2 2e       	mov	r11, r18
    201a:	2a e0       	ldi	r18, 0x0A	; 10
    201c:	30 e0       	ldi	r19, 0x00	; 0
    201e:	a4 01       	movw	r20, r8
    2020:	0e 94 a1 14 	call	0x2942	; 0x2942 <__ultoa_invert>
    2024:	a8 2e       	mov	r10, r24
    2026:	a8 18       	sub	r10, r8
    2028:	44 c0       	rjmp	.+136    	; 0x20b2 <vfprintf+0x2b8>
    202a:	85 37       	cpi	r24, 0x75	; 117
    202c:	29 f4       	brne	.+10     	; 0x2038 <vfprintf+0x23e>
    202e:	2f 7e       	andi	r18, 0xEF	; 239
    2030:	b2 2e       	mov	r11, r18
    2032:	2a e0       	ldi	r18, 0x0A	; 10
    2034:	30 e0       	ldi	r19, 0x00	; 0
    2036:	25 c0       	rjmp	.+74     	; 0x2082 <vfprintf+0x288>
    2038:	f2 2f       	mov	r31, r18
    203a:	f9 7f       	andi	r31, 0xF9	; 249
    203c:	bf 2e       	mov	r11, r31
    203e:	8f 36       	cpi	r24, 0x6F	; 111
    2040:	c1 f0       	breq	.+48     	; 0x2072 <vfprintf+0x278>
    2042:	18 f4       	brcc	.+6      	; 0x204a <vfprintf+0x250>
    2044:	88 35       	cpi	r24, 0x58	; 88
    2046:	79 f0       	breq	.+30     	; 0x2066 <vfprintf+0x26c>
    2048:	b4 c0       	rjmp	.+360    	; 0x21b2 <vfprintf+0x3b8>
    204a:	80 37       	cpi	r24, 0x70	; 112
    204c:	19 f0       	breq	.+6      	; 0x2054 <vfprintf+0x25a>
    204e:	88 37       	cpi	r24, 0x78	; 120
    2050:	21 f0       	breq	.+8      	; 0x205a <vfprintf+0x260>
    2052:	af c0       	rjmp	.+350    	; 0x21b2 <vfprintf+0x3b8>
    2054:	2f 2f       	mov	r18, r31
    2056:	20 61       	ori	r18, 0x10	; 16
    2058:	b2 2e       	mov	r11, r18
    205a:	b4 fe       	sbrs	r11, 4
    205c:	0d c0       	rjmp	.+26     	; 0x2078 <vfprintf+0x27e>
    205e:	8b 2d       	mov	r24, r11
    2060:	84 60       	ori	r24, 0x04	; 4
    2062:	b8 2e       	mov	r11, r24
    2064:	09 c0       	rjmp	.+18     	; 0x2078 <vfprintf+0x27e>
    2066:	24 ff       	sbrs	r18, 4
    2068:	0a c0       	rjmp	.+20     	; 0x207e <vfprintf+0x284>
    206a:	9f 2f       	mov	r25, r31
    206c:	96 60       	ori	r25, 0x06	; 6
    206e:	b9 2e       	mov	r11, r25
    2070:	06 c0       	rjmp	.+12     	; 0x207e <vfprintf+0x284>
    2072:	28 e0       	ldi	r18, 0x08	; 8
    2074:	30 e0       	ldi	r19, 0x00	; 0
    2076:	05 c0       	rjmp	.+10     	; 0x2082 <vfprintf+0x288>
    2078:	20 e1       	ldi	r18, 0x10	; 16
    207a:	30 e0       	ldi	r19, 0x00	; 0
    207c:	02 c0       	rjmp	.+4      	; 0x2082 <vfprintf+0x288>
    207e:	20 e1       	ldi	r18, 0x10	; 16
    2080:	32 e0       	ldi	r19, 0x02	; 2
    2082:	f8 01       	movw	r30, r16
    2084:	b7 fe       	sbrs	r11, 7
    2086:	07 c0       	rjmp	.+14     	; 0x2096 <vfprintf+0x29c>
    2088:	60 81       	ld	r22, Z
    208a:	71 81       	ldd	r23, Z+1	; 0x01
    208c:	82 81       	ldd	r24, Z+2	; 0x02
    208e:	93 81       	ldd	r25, Z+3	; 0x03
    2090:	0c 5f       	subi	r16, 0xFC	; 252
    2092:	1f 4f       	sbci	r17, 0xFF	; 255
    2094:	06 c0       	rjmp	.+12     	; 0x20a2 <vfprintf+0x2a8>
    2096:	60 81       	ld	r22, Z
    2098:	71 81       	ldd	r23, Z+1	; 0x01
    209a:	80 e0       	ldi	r24, 0x00	; 0
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	0e 5f       	subi	r16, 0xFE	; 254
    20a0:	1f 4f       	sbci	r17, 0xFF	; 255
    20a2:	a4 01       	movw	r20, r8
    20a4:	0e 94 a1 14 	call	0x2942	; 0x2942 <__ultoa_invert>
    20a8:	a8 2e       	mov	r10, r24
    20aa:	a8 18       	sub	r10, r8
    20ac:	fb 2d       	mov	r31, r11
    20ae:	ff 77       	andi	r31, 0x7F	; 127
    20b0:	bf 2e       	mov	r11, r31
    20b2:	b6 fe       	sbrs	r11, 6
    20b4:	0b c0       	rjmp	.+22     	; 0x20cc <vfprintf+0x2d2>
    20b6:	2b 2d       	mov	r18, r11
    20b8:	2e 7f       	andi	r18, 0xFE	; 254
    20ba:	a5 14       	cp	r10, r5
    20bc:	50 f4       	brcc	.+20     	; 0x20d2 <vfprintf+0x2d8>
    20be:	b4 fe       	sbrs	r11, 4
    20c0:	0a c0       	rjmp	.+20     	; 0x20d6 <vfprintf+0x2dc>
    20c2:	b2 fc       	sbrc	r11, 2
    20c4:	08 c0       	rjmp	.+16     	; 0x20d6 <vfprintf+0x2dc>
    20c6:	2b 2d       	mov	r18, r11
    20c8:	2e 7e       	andi	r18, 0xEE	; 238
    20ca:	05 c0       	rjmp	.+10     	; 0x20d6 <vfprintf+0x2dc>
    20cc:	7a 2c       	mov	r7, r10
    20ce:	2b 2d       	mov	r18, r11
    20d0:	03 c0       	rjmp	.+6      	; 0x20d8 <vfprintf+0x2de>
    20d2:	7a 2c       	mov	r7, r10
    20d4:	01 c0       	rjmp	.+2      	; 0x20d8 <vfprintf+0x2de>
    20d6:	75 2c       	mov	r7, r5
    20d8:	24 ff       	sbrs	r18, 4
    20da:	0d c0       	rjmp	.+26     	; 0x20f6 <vfprintf+0x2fc>
    20dc:	fe 01       	movw	r30, r28
    20de:	ea 0d       	add	r30, r10
    20e0:	f1 1d       	adc	r31, r1
    20e2:	80 81       	ld	r24, Z
    20e4:	80 33       	cpi	r24, 0x30	; 48
    20e6:	11 f4       	brne	.+4      	; 0x20ec <vfprintf+0x2f2>
    20e8:	29 7e       	andi	r18, 0xE9	; 233
    20ea:	09 c0       	rjmp	.+18     	; 0x20fe <vfprintf+0x304>
    20ec:	22 ff       	sbrs	r18, 2
    20ee:	06 c0       	rjmp	.+12     	; 0x20fc <vfprintf+0x302>
    20f0:	73 94       	inc	r7
    20f2:	73 94       	inc	r7
    20f4:	04 c0       	rjmp	.+8      	; 0x20fe <vfprintf+0x304>
    20f6:	82 2f       	mov	r24, r18
    20f8:	86 78       	andi	r24, 0x86	; 134
    20fa:	09 f0       	breq	.+2      	; 0x20fe <vfprintf+0x304>
    20fc:	73 94       	inc	r7
    20fe:	23 fd       	sbrc	r18, 3
    2100:	13 c0       	rjmp	.+38     	; 0x2128 <vfprintf+0x32e>
    2102:	20 ff       	sbrs	r18, 0
    2104:	06 c0       	rjmp	.+12     	; 0x2112 <vfprintf+0x318>
    2106:	5a 2c       	mov	r5, r10
    2108:	73 14       	cp	r7, r3
    210a:	18 f4       	brcc	.+6      	; 0x2112 <vfprintf+0x318>
    210c:	53 0c       	add	r5, r3
    210e:	57 18       	sub	r5, r7
    2110:	73 2c       	mov	r7, r3
    2112:	73 14       	cp	r7, r3
    2114:	68 f4       	brcc	.+26     	; 0x2130 <vfprintf+0x336>
    2116:	b7 01       	movw	r22, r14
    2118:	80 e2       	ldi	r24, 0x20	; 32
    211a:	90 e0       	ldi	r25, 0x00	; 0
    211c:	2c 87       	std	Y+12, r18	; 0x0c
    211e:	0e 94 56 14 	call	0x28ac	; 0x28ac <fputc>
    2122:	73 94       	inc	r7
    2124:	2c 85       	ldd	r18, Y+12	; 0x0c
    2126:	f5 cf       	rjmp	.-22     	; 0x2112 <vfprintf+0x318>
    2128:	73 14       	cp	r7, r3
    212a:	10 f4       	brcc	.+4      	; 0x2130 <vfprintf+0x336>
    212c:	37 18       	sub	r3, r7
    212e:	01 c0       	rjmp	.+2      	; 0x2132 <vfprintf+0x338>
    2130:	31 2c       	mov	r3, r1
    2132:	24 ff       	sbrs	r18, 4
    2134:	12 c0       	rjmp	.+36     	; 0x215a <vfprintf+0x360>
    2136:	b7 01       	movw	r22, r14
    2138:	80 e3       	ldi	r24, 0x30	; 48
    213a:	90 e0       	ldi	r25, 0x00	; 0
    213c:	2c 87       	std	Y+12, r18	; 0x0c
    213e:	0e 94 56 14 	call	0x28ac	; 0x28ac <fputc>
    2142:	2c 85       	ldd	r18, Y+12	; 0x0c
    2144:	22 ff       	sbrs	r18, 2
    2146:	17 c0       	rjmp	.+46     	; 0x2176 <vfprintf+0x37c>
    2148:	21 ff       	sbrs	r18, 1
    214a:	03 c0       	rjmp	.+6      	; 0x2152 <vfprintf+0x358>
    214c:	88 e5       	ldi	r24, 0x58	; 88
    214e:	90 e0       	ldi	r25, 0x00	; 0
    2150:	02 c0       	rjmp	.+4      	; 0x2156 <vfprintf+0x35c>
    2152:	88 e7       	ldi	r24, 0x78	; 120
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	b7 01       	movw	r22, r14
    2158:	0c c0       	rjmp	.+24     	; 0x2172 <vfprintf+0x378>
    215a:	82 2f       	mov	r24, r18
    215c:	86 78       	andi	r24, 0x86	; 134
    215e:	59 f0       	breq	.+22     	; 0x2176 <vfprintf+0x37c>
    2160:	21 fd       	sbrc	r18, 1
    2162:	02 c0       	rjmp	.+4      	; 0x2168 <vfprintf+0x36e>
    2164:	80 e2       	ldi	r24, 0x20	; 32
    2166:	01 c0       	rjmp	.+2      	; 0x216a <vfprintf+0x370>
    2168:	8b e2       	ldi	r24, 0x2B	; 43
    216a:	27 fd       	sbrc	r18, 7
    216c:	8d e2       	ldi	r24, 0x2D	; 45
    216e:	b7 01       	movw	r22, r14
    2170:	90 e0       	ldi	r25, 0x00	; 0
    2172:	0e 94 56 14 	call	0x28ac	; 0x28ac <fputc>
    2176:	a5 14       	cp	r10, r5
    2178:	38 f4       	brcc	.+14     	; 0x2188 <vfprintf+0x38e>
    217a:	b7 01       	movw	r22, r14
    217c:	80 e3       	ldi	r24, 0x30	; 48
    217e:	90 e0       	ldi	r25, 0x00	; 0
    2180:	0e 94 56 14 	call	0x28ac	; 0x28ac <fputc>
    2184:	5a 94       	dec	r5
    2186:	f7 cf       	rjmp	.-18     	; 0x2176 <vfprintf+0x37c>
    2188:	aa 94       	dec	r10
    218a:	f4 01       	movw	r30, r8
    218c:	ea 0d       	add	r30, r10
    218e:	f1 1d       	adc	r31, r1
    2190:	80 81       	ld	r24, Z
    2192:	b7 01       	movw	r22, r14
    2194:	90 e0       	ldi	r25, 0x00	; 0
    2196:	0e 94 56 14 	call	0x28ac	; 0x28ac <fputc>
    219a:	a1 10       	cpse	r10, r1
    219c:	f5 cf       	rjmp	.-22     	; 0x2188 <vfprintf+0x38e>
    219e:	33 20       	and	r3, r3
    21a0:	09 f4       	brne	.+2      	; 0x21a4 <vfprintf+0x3aa>
    21a2:	51 ce       	rjmp	.-862    	; 0x1e46 <vfprintf+0x4c>
    21a4:	b7 01       	movw	r22, r14
    21a6:	80 e2       	ldi	r24, 0x20	; 32
    21a8:	90 e0       	ldi	r25, 0x00	; 0
    21aa:	0e 94 56 14 	call	0x28ac	; 0x28ac <fputc>
    21ae:	3a 94       	dec	r3
    21b0:	f6 cf       	rjmp	.-20     	; 0x219e <vfprintf+0x3a4>
    21b2:	f7 01       	movw	r30, r14
    21b4:	86 81       	ldd	r24, Z+6	; 0x06
    21b6:	97 81       	ldd	r25, Z+7	; 0x07
    21b8:	02 c0       	rjmp	.+4      	; 0x21be <vfprintf+0x3c4>
    21ba:	8f ef       	ldi	r24, 0xFF	; 255
    21bc:	9f ef       	ldi	r25, 0xFF	; 255
    21be:	2c 96       	adiw	r28, 0x0c	; 12
    21c0:	0f b6       	in	r0, 0x3f	; 63
    21c2:	f8 94       	cli
    21c4:	de bf       	out	0x3e, r29	; 62
    21c6:	0f be       	out	0x3f, r0	; 63
    21c8:	cd bf       	out	0x3d, r28	; 61
    21ca:	df 91       	pop	r29
    21cc:	cf 91       	pop	r28
    21ce:	1f 91       	pop	r17
    21d0:	0f 91       	pop	r16
    21d2:	ff 90       	pop	r15
    21d4:	ef 90       	pop	r14
    21d6:	df 90       	pop	r13
    21d8:	cf 90       	pop	r12
    21da:	bf 90       	pop	r11
    21dc:	af 90       	pop	r10
    21de:	9f 90       	pop	r9
    21e0:	8f 90       	pop	r8
    21e2:	7f 90       	pop	r7
    21e4:	6f 90       	pop	r6
    21e6:	5f 90       	pop	r5
    21e8:	4f 90       	pop	r4
    21ea:	3f 90       	pop	r3
    21ec:	2f 90       	pop	r2
    21ee:	08 95       	ret

000021f0 <putval>:
    21f0:	20 fd       	sbrc	r18, 0
    21f2:	09 c0       	rjmp	.+18     	; 0x2206 <putval+0x16>
    21f4:	fc 01       	movw	r30, r24
    21f6:	23 fd       	sbrc	r18, 3
    21f8:	05 c0       	rjmp	.+10     	; 0x2204 <putval+0x14>
    21fa:	22 ff       	sbrs	r18, 2
    21fc:	02 c0       	rjmp	.+4      	; 0x2202 <putval+0x12>
    21fe:	73 83       	std	Z+3, r23	; 0x03
    2200:	62 83       	std	Z+2, r22	; 0x02
    2202:	51 83       	std	Z+1, r21	; 0x01
    2204:	40 83       	st	Z, r20
    2206:	08 95       	ret

00002208 <mulacc>:
    2208:	44 fd       	sbrc	r20, 4
    220a:	10 c0       	rjmp	.+32     	; 0x222c <mulacc+0x24>
    220c:	46 fd       	sbrc	r20, 6
    220e:	10 c0       	rjmp	.+32     	; 0x2230 <mulacc+0x28>
    2210:	db 01       	movw	r26, r22
    2212:	fc 01       	movw	r30, r24
    2214:	aa 0f       	add	r26, r26
    2216:	bb 1f       	adc	r27, r27
    2218:	ee 1f       	adc	r30, r30
    221a:	ff 1f       	adc	r31, r31
    221c:	10 94       	com	r1
    221e:	d1 f7       	brne	.-12     	; 0x2214 <mulacc+0xc>
    2220:	6a 0f       	add	r22, r26
    2222:	7b 1f       	adc	r23, r27
    2224:	8e 1f       	adc	r24, r30
    2226:	9f 1f       	adc	r25, r31
    2228:	31 e0       	ldi	r19, 0x01	; 1
    222a:	03 c0       	rjmp	.+6      	; 0x2232 <mulacc+0x2a>
    222c:	33 e0       	ldi	r19, 0x03	; 3
    222e:	01 c0       	rjmp	.+2      	; 0x2232 <mulacc+0x2a>
    2230:	34 e0       	ldi	r19, 0x04	; 4
    2232:	66 0f       	add	r22, r22
    2234:	77 1f       	adc	r23, r23
    2236:	88 1f       	adc	r24, r24
    2238:	99 1f       	adc	r25, r25
    223a:	31 50       	subi	r19, 0x01	; 1
    223c:	d1 f7       	brne	.-12     	; 0x2232 <mulacc+0x2a>
    223e:	62 0f       	add	r22, r18
    2240:	71 1d       	adc	r23, r1
    2242:	81 1d       	adc	r24, r1
    2244:	91 1d       	adc	r25, r1
    2246:	08 95       	ret

00002248 <skip_spaces>:
    2248:	0f 93       	push	r16
    224a:	1f 93       	push	r17
    224c:	cf 93       	push	r28
    224e:	df 93       	push	r29
    2250:	8c 01       	movw	r16, r24
    2252:	c8 01       	movw	r24, r16
    2254:	0e 94 18 14 	call	0x2830	; 0x2830 <fgetc>
    2258:	ec 01       	movw	r28, r24
    225a:	97 fd       	sbrc	r25, 7
    225c:	08 c0       	rjmp	.+16     	; 0x226e <skip_spaces+0x26>
    225e:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <isspace>
    2262:	89 2b       	or	r24, r25
    2264:	b1 f7       	brne	.-20     	; 0x2252 <skip_spaces+0xa>
    2266:	b8 01       	movw	r22, r16
    2268:	ce 01       	movw	r24, r28
    226a:	0e 94 88 14 	call	0x2910	; 0x2910 <ungetc>
    226e:	ce 01       	movw	r24, r28
    2270:	df 91       	pop	r29
    2272:	cf 91       	pop	r28
    2274:	1f 91       	pop	r17
    2276:	0f 91       	pop	r16
    2278:	08 95       	ret

0000227a <conv_int>:
    227a:	8f 92       	push	r8
    227c:	9f 92       	push	r9
    227e:	af 92       	push	r10
    2280:	cf 92       	push	r12
    2282:	df 92       	push	r13
    2284:	ef 92       	push	r14
    2286:	ff 92       	push	r15
    2288:	0f 93       	push	r16
    228a:	1f 93       	push	r17
    228c:	cf 93       	push	r28
    228e:	df 93       	push	r29
    2290:	ec 01       	movw	r28, r24
    2292:	a6 2e       	mov	r10, r22
    2294:	4a 01       	movw	r8, r20
    2296:	02 2f       	mov	r16, r18
    2298:	0e 94 18 14 	call	0x2830	; 0x2830 <fgetc>
    229c:	ac 01       	movw	r20, r24
    229e:	55 27       	eor	r21, r21
    22a0:	4b 32       	cpi	r20, 0x2B	; 43
    22a2:	51 05       	cpc	r21, r1
    22a4:	21 f0       	breq	.+8      	; 0x22ae <conv_int+0x34>
    22a6:	4d 32       	cpi	r20, 0x2D	; 45
    22a8:	51 05       	cpc	r21, r1
    22aa:	51 f4       	brne	.+20     	; 0x22c0 <conv_int+0x46>
    22ac:	00 68       	ori	r16, 0x80	; 128
    22ae:	aa 94       	dec	r10
    22b0:	11 f4       	brne	.+4      	; 0x22b6 <conv_int+0x3c>
    22b2:	80 e0       	ldi	r24, 0x00	; 0
    22b4:	67 c0       	rjmp	.+206    	; 0x2384 <conv_int+0x10a>
    22b6:	ce 01       	movw	r24, r28
    22b8:	0e 94 18 14 	call	0x2830	; 0x2830 <fgetc>
    22bc:	97 fd       	sbrc	r25, 7
    22be:	f9 cf       	rjmp	.-14     	; 0x22b2 <conv_int+0x38>
    22c0:	10 2f       	mov	r17, r16
    22c2:	1d 7f       	andi	r17, 0xFD	; 253
    22c4:	30 2f       	mov	r19, r16
    22c6:	30 73       	andi	r19, 0x30	; 48
    22c8:	01 f5       	brne	.+64     	; 0x230a <conv_int+0x90>
    22ca:	80 33       	cpi	r24, 0x30	; 48
    22cc:	f1 f4       	brne	.+60     	; 0x230a <conv_int+0x90>
    22ce:	ff 24       	eor	r15, r15
    22d0:	fa 94       	dec	r15
    22d2:	fa 0c       	add	r15, r10
    22d4:	09 f4       	brne	.+2      	; 0x22d8 <conv_int+0x5e>
    22d6:	42 c0       	rjmp	.+132    	; 0x235c <conv_int+0xe2>
    22d8:	ce 01       	movw	r24, r28
    22da:	0e 94 18 14 	call	0x2830	; 0x2830 <fgetc>
    22de:	97 fd       	sbrc	r25, 7
    22e0:	3d c0       	rjmp	.+122    	; 0x235c <conv_int+0xe2>
    22e2:	38 2f       	mov	r19, r24
    22e4:	3f 7d       	andi	r19, 0xDF	; 223
    22e6:	38 35       	cpi	r19, 0x58	; 88
    22e8:	51 f4       	brne	.+20     	; 0x22fe <conv_int+0x84>
    22ea:	12 64       	ori	r17, 0x42	; 66
    22ec:	aa 94       	dec	r10
    22ee:	aa 94       	dec	r10
    22f0:	a9 f1       	breq	.+106    	; 0x235c <conv_int+0xe2>
    22f2:	ce 01       	movw	r24, r28
    22f4:	0e 94 18 14 	call	0x2830	; 0x2830 <fgetc>
    22f8:	97 ff       	sbrs	r25, 7
    22fa:	07 c0       	rjmp	.+14     	; 0x230a <conv_int+0x90>
    22fc:	2f c0       	rjmp	.+94     	; 0x235c <conv_int+0xe2>
    22fe:	06 ff       	sbrs	r16, 6
    2300:	02 c0       	rjmp	.+4      	; 0x2306 <conv_int+0x8c>
    2302:	12 60       	ori	r17, 0x02	; 2
    2304:	01 c0       	rjmp	.+2      	; 0x2308 <conv_int+0x8e>
    2306:	12 61       	ori	r17, 0x12	; 18
    2308:	af 2c       	mov	r10, r15
    230a:	c1 2c       	mov	r12, r1
    230c:	d1 2c       	mov	r13, r1
    230e:	76 01       	movw	r14, r12
    2310:	20 ed       	ldi	r18, 0xD0	; 208
    2312:	28 0f       	add	r18, r24
    2314:	28 30       	cpi	r18, 0x08	; 8
    2316:	80 f0       	brcs	.+32     	; 0x2338 <conv_int+0xbe>
    2318:	14 ff       	sbrs	r17, 4
    231a:	04 c0       	rjmp	.+8      	; 0x2324 <conv_int+0xaa>
    231c:	be 01       	movw	r22, r28
    231e:	0e 94 88 14 	call	0x2910	; 0x2910 <ungetc>
    2322:	19 c0       	rjmp	.+50     	; 0x2356 <conv_int+0xdc>
    2324:	2a 30       	cpi	r18, 0x0A	; 10
    2326:	40 f0       	brcs	.+16     	; 0x2338 <conv_int+0xbe>
    2328:	16 ff       	sbrs	r17, 6
    232a:	f8 cf       	rjmp	.-16     	; 0x231c <conv_int+0xa2>
    232c:	2f 7d       	andi	r18, 0xDF	; 223
    232e:	3f ee       	ldi	r19, 0xEF	; 239
    2330:	32 0f       	add	r19, r18
    2332:	36 30       	cpi	r19, 0x06	; 6
    2334:	98 f7       	brcc	.-26     	; 0x231c <conv_int+0xa2>
    2336:	27 50       	subi	r18, 0x07	; 7
    2338:	41 2f       	mov	r20, r17
    233a:	c7 01       	movw	r24, r14
    233c:	b6 01       	movw	r22, r12
    233e:	0e 94 04 11 	call	0x2208	; 0x2208 <mulacc>
    2342:	6b 01       	movw	r12, r22
    2344:	7c 01       	movw	r14, r24
    2346:	12 60       	ori	r17, 0x02	; 2
    2348:	aa 94       	dec	r10
    234a:	59 f0       	breq	.+22     	; 0x2362 <conv_int+0xe8>
    234c:	ce 01       	movw	r24, r28
    234e:	0e 94 18 14 	call	0x2830	; 0x2830 <fgetc>
    2352:	97 ff       	sbrs	r25, 7
    2354:	dd cf       	rjmp	.-70     	; 0x2310 <conv_int+0x96>
    2356:	11 fd       	sbrc	r17, 1
    2358:	04 c0       	rjmp	.+8      	; 0x2362 <conv_int+0xe8>
    235a:	ab cf       	rjmp	.-170    	; 0x22b2 <conv_int+0x38>
    235c:	c1 2c       	mov	r12, r1
    235e:	d1 2c       	mov	r13, r1
    2360:	76 01       	movw	r14, r12
    2362:	17 ff       	sbrs	r17, 7
    2364:	08 c0       	rjmp	.+16     	; 0x2376 <conv_int+0xfc>
    2366:	f0 94       	com	r15
    2368:	e0 94       	com	r14
    236a:	d0 94       	com	r13
    236c:	c0 94       	com	r12
    236e:	c1 1c       	adc	r12, r1
    2370:	d1 1c       	adc	r13, r1
    2372:	e1 1c       	adc	r14, r1
    2374:	f1 1c       	adc	r15, r1
    2376:	21 2f       	mov	r18, r17
    2378:	b7 01       	movw	r22, r14
    237a:	a6 01       	movw	r20, r12
    237c:	c4 01       	movw	r24, r8
    237e:	0e 94 f8 10 	call	0x21f0	; 0x21f0 <putval>
    2382:	81 e0       	ldi	r24, 0x01	; 1
    2384:	df 91       	pop	r29
    2386:	cf 91       	pop	r28
    2388:	1f 91       	pop	r17
    238a:	0f 91       	pop	r16
    238c:	ff 90       	pop	r15
    238e:	ef 90       	pop	r14
    2390:	df 90       	pop	r13
    2392:	cf 90       	pop	r12
    2394:	af 90       	pop	r10
    2396:	9f 90       	pop	r9
    2398:	8f 90       	pop	r8
    239a:	08 95       	ret

0000239c <conv_brk>:
    239c:	7f 92       	push	r7
    239e:	8f 92       	push	r8
    23a0:	9f 92       	push	r9
    23a2:	af 92       	push	r10
    23a4:	bf 92       	push	r11
    23a6:	cf 92       	push	r12
    23a8:	df 92       	push	r13
    23aa:	ef 92       	push	r14
    23ac:	ff 92       	push	r15
    23ae:	0f 93       	push	r16
    23b0:	1f 93       	push	r17
    23b2:	cf 93       	push	r28
    23b4:	df 93       	push	r29
    23b6:	cd b7       	in	r28, 0x3d	; 61
    23b8:	de b7       	in	r29, 0x3e	; 62
    23ba:	a1 97       	sbiw	r28, 0x21	; 33
    23bc:	0f b6       	in	r0, 0x3f	; 63
    23be:	f8 94       	cli
    23c0:	de bf       	out	0x3e, r29	; 62
    23c2:	0f be       	out	0x3f, r0	; 63
    23c4:	cd bf       	out	0x3d, r28	; 61
    23c6:	5c 01       	movw	r10, r24
    23c8:	7a 01       	movw	r14, r20
    23ca:	8e 01       	movw	r16, r28
    23cc:	0f 5f       	subi	r16, 0xFF	; 255
    23ce:	1f 4f       	sbci	r17, 0xFF	; 255
    23d0:	68 01       	movw	r12, r16
    23d2:	80 e2       	ldi	r24, 0x20	; 32
    23d4:	d8 01       	movw	r26, r16
    23d6:	1d 92       	st	X+, r1
    23d8:	8a 95       	dec	r24
    23da:	e9 f7       	brne	.-6      	; 0x23d6 <conv_brk+0x3a>
    23dc:	f5 01       	movw	r30, r10
    23de:	73 80       	ldd	r7, Z+3	; 0x03
    23e0:	40 e0       	ldi	r20, 0x00	; 0
    23e2:	50 e0       	ldi	r21, 0x00	; 0
    23e4:	81 2c       	mov	r8, r1
    23e6:	b0 e0       	ldi	r27, 0x00	; 0
    23e8:	91 2c       	mov	r9, r1
    23ea:	81 e0       	ldi	r24, 0x01	; 1
    23ec:	90 e0       	ldi	r25, 0x00	; 0
    23ee:	f9 01       	movw	r30, r18
    23f0:	73 fc       	sbrc	r7, 3
    23f2:	a5 91       	lpm	r26, Z+
    23f4:	73 fe       	sbrs	r7, 3
    23f6:	a1 91       	ld	r26, Z+
    23f8:	8f 01       	movw	r16, r30
    23fa:	7a 2f       	mov	r23, r26
    23fc:	9f 01       	movw	r18, r30
    23fe:	a1 11       	cpse	r26, r1
    2400:	03 c0       	rjmp	.+6      	; 0x2408 <conv_brk+0x6c>
    2402:	80 e0       	ldi	r24, 0x00	; 0
    2404:	90 e0       	ldi	r25, 0x00	; 0
    2406:	7d c0       	rjmp	.+250    	; 0x2502 <conv_brk+0x166>
    2408:	ae 35       	cpi	r26, 0x5E	; 94
    240a:	19 f4       	brne	.+6      	; 0x2412 <conv_brk+0x76>
    240c:	41 15       	cp	r20, r1
    240e:	51 05       	cpc	r21, r1
    2410:	59 f1       	breq	.+86     	; 0x2468 <conv_brk+0xcc>
    2412:	e9 2d       	mov	r30, r9
    2414:	f0 e0       	ldi	r31, 0x00	; 0
    2416:	e4 17       	cp	r30, r20
    2418:	f5 07       	cpc	r31, r21
    241a:	3c f4       	brge	.+14     	; 0x242a <conv_brk+0x8e>
    241c:	ad 35       	cpi	r26, 0x5D	; 93
    241e:	69 f1       	breq	.+90     	; 0x247a <conv_brk+0xde>
    2420:	ad 32       	cpi	r26, 0x2D	; 45
    2422:	19 f4       	brne	.+6      	; 0x242a <conv_brk+0x8e>
    2424:	bb 23       	and	r27, r27
    2426:	19 f1       	breq	.+70     	; 0x246e <conv_brk+0xd2>
    2428:	03 c0       	rjmp	.+6      	; 0x2430 <conv_brk+0x94>
    242a:	b1 11       	cpse	r27, r1
    242c:	01 c0       	rjmp	.+2      	; 0x2430 <conv_brk+0x94>
    242e:	8a 2e       	mov	r8, r26
    2430:	e7 2f       	mov	r30, r23
    2432:	e6 95       	lsr	r30
    2434:	e6 95       	lsr	r30
    2436:	e6 95       	lsr	r30
    2438:	86 01       	movw	r16, r12
    243a:	0e 0f       	add	r16, r30
    243c:	11 1d       	adc	r17, r1
    243e:	f8 01       	movw	r30, r16
    2440:	a7 2f       	mov	r26, r23
    2442:	a7 70       	andi	r26, 0x07	; 7
    2444:	8c 01       	movw	r16, r24
    2446:	02 c0       	rjmp	.+4      	; 0x244c <conv_brk+0xb0>
    2448:	00 0f       	add	r16, r16
    244a:	11 1f       	adc	r17, r17
    244c:	aa 95       	dec	r26
    244e:	e2 f7       	brpl	.-8      	; 0x2448 <conv_brk+0xac>
    2450:	d8 01       	movw	r26, r16
    2452:	b0 81       	ld	r27, Z
    2454:	ba 2b       	or	r27, r26
    2456:	b0 83       	st	Z, r27
    2458:	78 15       	cp	r23, r8
    245a:	59 f0       	breq	.+22     	; 0x2472 <conv_brk+0xd6>
    245c:	78 15       	cp	r23, r8
    245e:	10 f4       	brcc	.+4      	; 0x2464 <conv_brk+0xc8>
    2460:	7f 5f       	subi	r23, 0xFF	; 255
    2462:	e6 cf       	rjmp	.-52     	; 0x2430 <conv_brk+0x94>
    2464:	71 50       	subi	r23, 0x01	; 1
    2466:	e4 cf       	rjmp	.-56     	; 0x2430 <conv_brk+0x94>
    2468:	99 24       	eor	r9, r9
    246a:	93 94       	inc	r9
    246c:	03 c0       	rjmp	.+6      	; 0x2474 <conv_brk+0xd8>
    246e:	b1 e0       	ldi	r27, 0x01	; 1
    2470:	01 c0       	rjmp	.+2      	; 0x2474 <conv_brk+0xd8>
    2472:	b0 e0       	ldi	r27, 0x00	; 0
    2474:	4f 5f       	subi	r20, 0xFF	; 255
    2476:	5f 4f       	sbci	r21, 0xFF	; 255
    2478:	ba cf       	rjmp	.-140    	; 0x23ee <conv_brk+0x52>
    247a:	bb 23       	and	r27, r27
    247c:	19 f0       	breq	.+6      	; 0x2484 <conv_brk+0xe8>
    247e:	8e 81       	ldd	r24, Y+6	; 0x06
    2480:	80 62       	ori	r24, 0x20	; 32
    2482:	8e 83       	std	Y+6, r24	; 0x06
    2484:	91 10       	cpse	r9, r1
    2486:	03 c0       	rjmp	.+6      	; 0x248e <conv_brk+0xf2>
    2488:	99 24       	eor	r9, r9
    248a:	93 94       	inc	r9
    248c:	15 c0       	rjmp	.+42     	; 0x24b8 <conv_brk+0x11c>
    248e:	f6 01       	movw	r30, r12
    2490:	ce 01       	movw	r24, r28
    2492:	81 96       	adiw	r24, 0x21	; 33
    2494:	20 81       	ld	r18, Z
    2496:	20 95       	com	r18
    2498:	21 93       	st	Z+, r18
    249a:	e8 17       	cp	r30, r24
    249c:	f9 07       	cpc	r31, r25
    249e:	d1 f7       	brne	.-12     	; 0x2494 <conv_brk+0xf8>
    24a0:	f3 cf       	rjmp	.-26     	; 0x2488 <conv_brk+0xec>
    24a2:	e1 14       	cp	r14, r1
    24a4:	f1 04       	cpc	r15, r1
    24a6:	29 f0       	breq	.+10     	; 0x24b2 <conv_brk+0x116>
    24a8:	d7 01       	movw	r26, r14
    24aa:	8c 93       	st	X, r24
    24ac:	f7 01       	movw	r30, r14
    24ae:	31 96       	adiw	r30, 0x01	; 1
    24b0:	7f 01       	movw	r14, r30
    24b2:	61 50       	subi	r22, 0x01	; 1
    24b4:	01 f1       	breq	.+64     	; 0x24f6 <conv_brk+0x15a>
    24b6:	91 2c       	mov	r9, r1
    24b8:	c5 01       	movw	r24, r10
    24ba:	69 a3       	std	Y+33, r22	; 0x21
    24bc:	0e 94 18 14 	call	0x2830	; 0x2830 <fgetc>
    24c0:	69 a1       	ldd	r22, Y+33	; 0x21
    24c2:	97 fd       	sbrc	r25, 7
    24c4:	16 c0       	rjmp	.+44     	; 0x24f2 <conv_brk+0x156>
    24c6:	28 2f       	mov	r18, r24
    24c8:	26 95       	lsr	r18
    24ca:	26 95       	lsr	r18
    24cc:	26 95       	lsr	r18
    24ce:	f6 01       	movw	r30, r12
    24d0:	e2 0f       	add	r30, r18
    24d2:	f1 1d       	adc	r31, r1
    24d4:	20 81       	ld	r18, Z
    24d6:	30 e0       	ldi	r19, 0x00	; 0
    24d8:	ac 01       	movw	r20, r24
    24da:	47 70       	andi	r20, 0x07	; 7
    24dc:	55 27       	eor	r21, r21
    24de:	02 c0       	rjmp	.+4      	; 0x24e4 <conv_brk+0x148>
    24e0:	35 95       	asr	r19
    24e2:	27 95       	ror	r18
    24e4:	4a 95       	dec	r20
    24e6:	e2 f7       	brpl	.-8      	; 0x24e0 <conv_brk+0x144>
    24e8:	20 fd       	sbrc	r18, 0
    24ea:	db cf       	rjmp	.-74     	; 0x24a2 <conv_brk+0x106>
    24ec:	b5 01       	movw	r22, r10
    24ee:	0e 94 88 14 	call	0x2910	; 0x2910 <ungetc>
    24f2:	91 10       	cpse	r9, r1
    24f4:	86 cf       	rjmp	.-244    	; 0x2402 <conv_brk+0x66>
    24f6:	e1 14       	cp	r14, r1
    24f8:	f1 04       	cpc	r15, r1
    24fa:	11 f0       	breq	.+4      	; 0x2500 <conv_brk+0x164>
    24fc:	d7 01       	movw	r26, r14
    24fe:	1c 92       	st	X, r1
    2500:	c8 01       	movw	r24, r16
    2502:	a1 96       	adiw	r28, 0x21	; 33
    2504:	0f b6       	in	r0, 0x3f	; 63
    2506:	f8 94       	cli
    2508:	de bf       	out	0x3e, r29	; 62
    250a:	0f be       	out	0x3f, r0	; 63
    250c:	cd bf       	out	0x3d, r28	; 61
    250e:	df 91       	pop	r29
    2510:	cf 91       	pop	r28
    2512:	1f 91       	pop	r17
    2514:	0f 91       	pop	r16
    2516:	ff 90       	pop	r15
    2518:	ef 90       	pop	r14
    251a:	df 90       	pop	r13
    251c:	cf 90       	pop	r12
    251e:	bf 90       	pop	r11
    2520:	af 90       	pop	r10
    2522:	9f 90       	pop	r9
    2524:	8f 90       	pop	r8
    2526:	7f 90       	pop	r7
    2528:	08 95       	ret

0000252a <vfscanf>:
    252a:	4f 92       	push	r4
    252c:	5f 92       	push	r5
    252e:	7f 92       	push	r7
    2530:	8f 92       	push	r8
    2532:	9f 92       	push	r9
    2534:	af 92       	push	r10
    2536:	bf 92       	push	r11
    2538:	cf 92       	push	r12
    253a:	df 92       	push	r13
    253c:	ef 92       	push	r14
    253e:	ff 92       	push	r15
    2540:	0f 93       	push	r16
    2542:	1f 93       	push	r17
    2544:	cf 93       	push	r28
    2546:	df 93       	push	r29
    2548:	1f 92       	push	r1
    254a:	cd b7       	in	r28, 0x3d	; 61
    254c:	de b7       	in	r29, 0x3e	; 62
    254e:	8c 01       	movw	r16, r24
    2550:	2b 01       	movw	r4, r22
    2552:	7a 01       	movw	r14, r20
    2554:	fc 01       	movw	r30, r24
    2556:	17 82       	std	Z+7, r1	; 0x07
    2558:	16 82       	std	Z+6, r1	; 0x06
    255a:	a1 2c       	mov	r10, r1
    255c:	f8 01       	movw	r30, r16
    255e:	d3 80       	ldd	r13, Z+3	; 0x03
    2560:	f2 01       	movw	r30, r4
    2562:	d3 fc       	sbrc	r13, 3
    2564:	85 91       	lpm	r24, Z+
    2566:	d3 fe       	sbrs	r13, 3
    2568:	81 91       	ld	r24, Z+
    256a:	38 2f       	mov	r19, r24
    256c:	2f 01       	movw	r4, r30
    256e:	88 23       	and	r24, r24
    2570:	09 f4       	brne	.+2      	; 0x2574 <vfscanf+0x4a>
    2572:	fc c0       	rjmp	.+504    	; 0x276c <vfscanf+0x242>
    2574:	90 e0       	ldi	r25, 0x00	; 0
    2576:	39 83       	std	Y+1, r19	; 0x01
    2578:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <isspace>
    257c:	39 81       	ldd	r19, Y+1	; 0x01
    257e:	89 2b       	or	r24, r25
    2580:	21 f0       	breq	.+8      	; 0x258a <vfscanf+0x60>
    2582:	c8 01       	movw	r24, r16
    2584:	0e 94 24 11 	call	0x2248	; 0x2248 <skip_spaces>
    2588:	e9 cf       	rjmp	.-46     	; 0x255c <vfscanf+0x32>
    258a:	35 32       	cpi	r19, 0x25	; 37
    258c:	41 f4       	brne	.+16     	; 0x259e <vfscanf+0x74>
    258e:	f2 01       	movw	r30, r4
    2590:	d3 fc       	sbrc	r13, 3
    2592:	35 91       	lpm	r19, Z+
    2594:	d3 fe       	sbrs	r13, 3
    2596:	31 91       	ld	r19, Z+
    2598:	2f 01       	movw	r4, r30
    259a:	35 32       	cpi	r19, 0x25	; 37
    259c:	69 f4       	brne	.+26     	; 0x25b8 <vfscanf+0x8e>
    259e:	c8 01       	movw	r24, r16
    25a0:	39 83       	std	Y+1, r19	; 0x01
    25a2:	0e 94 18 14 	call	0x2830	; 0x2830 <fgetc>
    25a6:	39 81       	ldd	r19, Y+1	; 0x01
    25a8:	97 fd       	sbrc	r25, 7
    25aa:	de c0       	rjmp	.+444    	; 0x2768 <vfscanf+0x23e>
    25ac:	38 17       	cp	r19, r24
    25ae:	b1 f2       	breq	.-84     	; 0x255c <vfscanf+0x32>
    25b0:	b8 01       	movw	r22, r16
    25b2:	0e 94 88 14 	call	0x2910	; 0x2910 <ungetc>
    25b6:	da c0       	rjmp	.+436    	; 0x276c <vfscanf+0x242>
    25b8:	3a 32       	cpi	r19, 0x2A	; 42
    25ba:	41 f4       	brne	.+16     	; 0x25cc <vfscanf+0xa2>
    25bc:	d3 fc       	sbrc	r13, 3
    25be:	35 91       	lpm	r19, Z+
    25c0:	d3 fe       	sbrs	r13, 3
    25c2:	31 91       	ld	r19, Z+
    25c4:	2f 01       	movw	r4, r30
    25c6:	bb 24       	eor	r11, r11
    25c8:	b3 94       	inc	r11
    25ca:	01 c0       	rjmp	.+2      	; 0x25ce <vfscanf+0xa4>
    25cc:	b1 2c       	mov	r11, r1
    25ce:	71 2c       	mov	r7, r1
    25d0:	20 ed       	ldi	r18, 0xD0	; 208
    25d2:	23 0f       	add	r18, r19
    25d4:	2a 30       	cpi	r18, 0x0A	; 10
    25d6:	90 f4       	brcc	.+36     	; 0x25fc <vfscanf+0xd2>
    25d8:	fb 2d       	mov	r31, r11
    25da:	f2 60       	ori	r31, 0x02	; 2
    25dc:	bf 2e       	mov	r11, r31
    25de:	67 2d       	mov	r22, r7
    25e0:	70 e0       	ldi	r23, 0x00	; 0
    25e2:	80 e0       	ldi	r24, 0x00	; 0
    25e4:	90 e0       	ldi	r25, 0x00	; 0
    25e6:	40 e2       	ldi	r20, 0x20	; 32
    25e8:	0e 94 04 11 	call	0x2208	; 0x2208 <mulacc>
    25ec:	76 2e       	mov	r7, r22
    25ee:	f2 01       	movw	r30, r4
    25f0:	d3 fc       	sbrc	r13, 3
    25f2:	35 91       	lpm	r19, Z+
    25f4:	d3 fe       	sbrs	r13, 3
    25f6:	31 91       	ld	r19, Z+
    25f8:	2f 01       	movw	r4, r30
    25fa:	ea cf       	rjmp	.-44     	; 0x25d0 <vfscanf+0xa6>
    25fc:	b1 fe       	sbrs	r11, 1
    25fe:	03 c0       	rjmp	.+6      	; 0x2606 <vfscanf+0xdc>
    2600:	71 10       	cpse	r7, r1
    2602:	03 c0       	rjmp	.+6      	; 0x260a <vfscanf+0xe0>
    2604:	b3 c0       	rjmp	.+358    	; 0x276c <vfscanf+0x242>
    2606:	77 24       	eor	r7, r7
    2608:	7a 94       	dec	r7
    260a:	38 36       	cpi	r19, 0x68	; 104
    260c:	19 f0       	breq	.+6      	; 0x2614 <vfscanf+0xea>
    260e:	3c 36       	cpi	r19, 0x6C	; 108
    2610:	61 f0       	breq	.+24     	; 0x262a <vfscanf+0x100>
    2612:	14 c0       	rjmp	.+40     	; 0x263c <vfscanf+0x112>
    2614:	f2 01       	movw	r30, r4
    2616:	d3 fc       	sbrc	r13, 3
    2618:	35 91       	lpm	r19, Z+
    261a:	d3 fe       	sbrs	r13, 3
    261c:	31 91       	ld	r19, Z+
    261e:	2f 01       	movw	r4, r30
    2620:	38 36       	cpi	r19, 0x68	; 104
    2622:	61 f4       	brne	.+24     	; 0x263c <vfscanf+0x112>
    2624:	fb 2d       	mov	r31, r11
    2626:	f8 60       	ori	r31, 0x08	; 8
    2628:	bf 2e       	mov	r11, r31
    262a:	8b 2d       	mov	r24, r11
    262c:	84 60       	ori	r24, 0x04	; 4
    262e:	b8 2e       	mov	r11, r24
    2630:	f2 01       	movw	r30, r4
    2632:	d3 fc       	sbrc	r13, 3
    2634:	35 91       	lpm	r19, Z+
    2636:	d3 fe       	sbrs	r13, 3
    2638:	31 91       	ld	r19, Z+
    263a:	2f 01       	movw	r4, r30
    263c:	33 23       	and	r19, r19
    263e:	09 f4       	brne	.+2      	; 0x2642 <vfscanf+0x118>
    2640:	95 c0       	rjmp	.+298    	; 0x276c <vfscanf+0x242>
    2642:	63 2f       	mov	r22, r19
    2644:	70 e0       	ldi	r23, 0x00	; 0
    2646:	8c e8       	ldi	r24, 0x8C	; 140
    2648:	90 e0       	ldi	r25, 0x00	; 0
    264a:	39 83       	std	Y+1, r19	; 0x01
    264c:	0e 94 f0 13 	call	0x27e0	; 0x27e0 <strchr_P>
    2650:	39 81       	ldd	r19, Y+1	; 0x01
    2652:	89 2b       	or	r24, r25
    2654:	09 f4       	brne	.+2      	; 0x2658 <vfscanf+0x12e>
    2656:	8a c0       	rjmp	.+276    	; 0x276c <vfscanf+0x242>
    2658:	b0 fc       	sbrc	r11, 0
    265a:	07 c0       	rjmp	.+14     	; 0x266a <vfscanf+0x140>
    265c:	f7 01       	movw	r30, r14
    265e:	c0 80       	ld	r12, Z
    2660:	d1 80       	ldd	r13, Z+1	; 0x01
    2662:	c7 01       	movw	r24, r14
    2664:	02 96       	adiw	r24, 0x02	; 2
    2666:	7c 01       	movw	r14, r24
    2668:	02 c0       	rjmp	.+4      	; 0x266e <vfscanf+0x144>
    266a:	c1 2c       	mov	r12, r1
    266c:	d1 2c       	mov	r13, r1
    266e:	3e 36       	cpi	r19, 0x6E	; 110
    2670:	51 f4       	brne	.+20     	; 0x2686 <vfscanf+0x15c>
    2672:	f8 01       	movw	r30, r16
    2674:	46 81       	ldd	r20, Z+6	; 0x06
    2676:	57 81       	ldd	r21, Z+7	; 0x07
    2678:	60 e0       	ldi	r22, 0x00	; 0
    267a:	70 e0       	ldi	r23, 0x00	; 0
    267c:	2b 2d       	mov	r18, r11
    267e:	c6 01       	movw	r24, r12
    2680:	0e 94 f8 10 	call	0x21f0	; 0x21f0 <putval>
    2684:	6b cf       	rjmp	.-298    	; 0x255c <vfscanf+0x32>
    2686:	33 36       	cpi	r19, 0x63	; 99
    2688:	a1 f4       	brne	.+40     	; 0x26b2 <vfscanf+0x188>
    268a:	b1 fc       	sbrc	r11, 1
    268c:	02 c0       	rjmp	.+4      	; 0x2692 <vfscanf+0x168>
    268e:	77 24       	eor	r7, r7
    2690:	73 94       	inc	r7
    2692:	c8 01       	movw	r24, r16
    2694:	0e 94 18 14 	call	0x2830	; 0x2830 <fgetc>
    2698:	97 fd       	sbrc	r25, 7
    269a:	66 c0       	rjmp	.+204    	; 0x2768 <vfscanf+0x23e>
    269c:	c1 14       	cp	r12, r1
    269e:	d1 04       	cpc	r13, r1
    26a0:	29 f0       	breq	.+10     	; 0x26ac <vfscanf+0x182>
    26a2:	f6 01       	movw	r30, r12
    26a4:	80 83       	st	Z, r24
    26a6:	c6 01       	movw	r24, r12
    26a8:	01 96       	adiw	r24, 0x01	; 1
    26aa:	6c 01       	movw	r12, r24
    26ac:	7a 94       	dec	r7
    26ae:	89 f7       	brne	.-30     	; 0x2692 <vfscanf+0x168>
    26b0:	57 c0       	rjmp	.+174    	; 0x2760 <vfscanf+0x236>
    26b2:	3b 35       	cpi	r19, 0x5B	; 91
    26b4:	59 f4       	brne	.+22     	; 0x26cc <vfscanf+0x1a2>
    26b6:	92 01       	movw	r18, r4
    26b8:	a6 01       	movw	r20, r12
    26ba:	67 2d       	mov	r22, r7
    26bc:	c8 01       	movw	r24, r16
    26be:	0e 94 ce 11 	call	0x239c	; 0x239c <conv_brk>
    26c2:	2c 01       	movw	r4, r24
    26c4:	00 97       	sbiw	r24, 0x00	; 0
    26c6:	09 f0       	breq	.+2      	; 0x26ca <vfscanf+0x1a0>
    26c8:	4b c0       	rjmp	.+150    	; 0x2760 <vfscanf+0x236>
    26ca:	45 c0       	rjmp	.+138    	; 0x2756 <vfscanf+0x22c>
    26cc:	c8 01       	movw	r24, r16
    26ce:	39 83       	std	Y+1, r19	; 0x01
    26d0:	0e 94 24 11 	call	0x2248	; 0x2248 <skip_spaces>
    26d4:	39 81       	ldd	r19, Y+1	; 0x01
    26d6:	97 fd       	sbrc	r25, 7
    26d8:	47 c0       	rjmp	.+142    	; 0x2768 <vfscanf+0x23e>
    26da:	3f 36       	cpi	r19, 0x6F	; 111
    26dc:	69 f1       	breq	.+90     	; 0x2738 <vfscanf+0x20e>
    26de:	28 f4       	brcc	.+10     	; 0x26ea <vfscanf+0x1c0>
    26e0:	34 36       	cpi	r19, 0x64	; 100
    26e2:	31 f1       	breq	.+76     	; 0x2730 <vfscanf+0x206>
    26e4:	39 36       	cpi	r19, 0x69	; 105
    26e6:	79 f1       	breq	.+94     	; 0x2746 <vfscanf+0x21c>
    26e8:	2b c0       	rjmp	.+86     	; 0x2740 <vfscanf+0x216>
    26ea:	33 37       	cpi	r19, 0x73	; 115
    26ec:	69 f0       	breq	.+26     	; 0x2708 <vfscanf+0x1de>
    26ee:	35 37       	cpi	r19, 0x75	; 117
    26f0:	f9 f0       	breq	.+62     	; 0x2730 <vfscanf+0x206>
    26f2:	26 c0       	rjmp	.+76     	; 0x2740 <vfscanf+0x216>
    26f4:	c1 14       	cp	r12, r1
    26f6:	d1 04       	cpc	r13, r1
    26f8:	29 f0       	breq	.+10     	; 0x2704 <vfscanf+0x1da>
    26fa:	f6 01       	movw	r30, r12
    26fc:	80 82       	st	Z, r8
    26fe:	c6 01       	movw	r24, r12
    2700:	01 96       	adiw	r24, 0x01	; 1
    2702:	6c 01       	movw	r12, r24
    2704:	7a 94       	dec	r7
    2706:	71 f0       	breq	.+28     	; 0x2724 <vfscanf+0x1fa>
    2708:	c8 01       	movw	r24, r16
    270a:	0e 94 18 14 	call	0x2830	; 0x2830 <fgetc>
    270e:	4c 01       	movw	r8, r24
    2710:	97 fd       	sbrc	r25, 7
    2712:	08 c0       	rjmp	.+16     	; 0x2724 <vfscanf+0x1fa>
    2714:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <isspace>
    2718:	89 2b       	or	r24, r25
    271a:	61 f3       	breq	.-40     	; 0x26f4 <vfscanf+0x1ca>
    271c:	b8 01       	movw	r22, r16
    271e:	c4 01       	movw	r24, r8
    2720:	0e 94 88 14 	call	0x2910	; 0x2910 <ungetc>
    2724:	c1 14       	cp	r12, r1
    2726:	d1 04       	cpc	r13, r1
    2728:	d9 f0       	breq	.+54     	; 0x2760 <vfscanf+0x236>
    272a:	f6 01       	movw	r30, r12
    272c:	10 82       	st	Z, r1
    272e:	18 c0       	rjmp	.+48     	; 0x2760 <vfscanf+0x236>
    2730:	fb 2d       	mov	r31, r11
    2732:	f0 62       	ori	r31, 0x20	; 32
    2734:	bf 2e       	mov	r11, r31
    2736:	07 c0       	rjmp	.+14     	; 0x2746 <vfscanf+0x21c>
    2738:	8b 2d       	mov	r24, r11
    273a:	80 61       	ori	r24, 0x10	; 16
    273c:	b8 2e       	mov	r11, r24
    273e:	03 c0       	rjmp	.+6      	; 0x2746 <vfscanf+0x21c>
    2740:	9b 2d       	mov	r25, r11
    2742:	90 64       	ori	r25, 0x40	; 64
    2744:	b9 2e       	mov	r11, r25
    2746:	2b 2d       	mov	r18, r11
    2748:	a6 01       	movw	r20, r12
    274a:	67 2d       	mov	r22, r7
    274c:	c8 01       	movw	r24, r16
    274e:	0e 94 3d 11 	call	0x227a	; 0x227a <conv_int>
    2752:	81 11       	cpse	r24, r1
    2754:	05 c0       	rjmp	.+10     	; 0x2760 <vfscanf+0x236>
    2756:	f8 01       	movw	r30, r16
    2758:	83 81       	ldd	r24, Z+3	; 0x03
    275a:	80 73       	andi	r24, 0x30	; 48
    275c:	29 f4       	brne	.+10     	; 0x2768 <vfscanf+0x23e>
    275e:	06 c0       	rjmp	.+12     	; 0x276c <vfscanf+0x242>
    2760:	b0 fc       	sbrc	r11, 0
    2762:	fc ce       	rjmp	.-520    	; 0x255c <vfscanf+0x32>
    2764:	a3 94       	inc	r10
    2766:	fa ce       	rjmp	.-524    	; 0x255c <vfscanf+0x32>
    2768:	aa 20       	and	r10, r10
    276a:	19 f0       	breq	.+6      	; 0x2772 <vfscanf+0x248>
    276c:	8a 2d       	mov	r24, r10
    276e:	90 e0       	ldi	r25, 0x00	; 0
    2770:	02 c0       	rjmp	.+4      	; 0x2776 <vfscanf+0x24c>
    2772:	8f ef       	ldi	r24, 0xFF	; 255
    2774:	9f ef       	ldi	r25, 0xFF	; 255
    2776:	0f 90       	pop	r0
    2778:	df 91       	pop	r29
    277a:	cf 91       	pop	r28
    277c:	1f 91       	pop	r17
    277e:	0f 91       	pop	r16
    2780:	ff 90       	pop	r15
    2782:	ef 90       	pop	r14
    2784:	df 90       	pop	r13
    2786:	cf 90       	pop	r12
    2788:	bf 90       	pop	r11
    278a:	af 90       	pop	r10
    278c:	9f 90       	pop	r9
    278e:	8f 90       	pop	r8
    2790:	7f 90       	pop	r7
    2792:	5f 90       	pop	r5
    2794:	4f 90       	pop	r4
    2796:	08 95       	ret

00002798 <calloc>:
    2798:	0f 93       	push	r16
    279a:	1f 93       	push	r17
    279c:	cf 93       	push	r28
    279e:	df 93       	push	r29
    27a0:	86 9f       	mul	r24, r22
    27a2:	80 01       	movw	r16, r0
    27a4:	87 9f       	mul	r24, r23
    27a6:	10 0d       	add	r17, r0
    27a8:	96 9f       	mul	r25, r22
    27aa:	10 0d       	add	r17, r0
    27ac:	11 24       	eor	r1, r1
    27ae:	c8 01       	movw	r24, r16
    27b0:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <malloc>
    27b4:	ec 01       	movw	r28, r24
    27b6:	00 97       	sbiw	r24, 0x00	; 0
    27b8:	29 f0       	breq	.+10     	; 0x27c4 <calloc+0x2c>
    27ba:	a8 01       	movw	r20, r16
    27bc:	60 e0       	ldi	r22, 0x00	; 0
    27be:	70 e0       	ldi	r23, 0x00	; 0
    27c0:	0e 94 06 14 	call	0x280c	; 0x280c <memset>
    27c4:	ce 01       	movw	r24, r28
    27c6:	df 91       	pop	r29
    27c8:	cf 91       	pop	r28
    27ca:	1f 91       	pop	r17
    27cc:	0f 91       	pop	r16
    27ce:	08 95       	ret

000027d0 <isspace>:
    27d0:	91 11       	cpse	r25, r1
    27d2:	15 c1       	rjmp	.+554    	; 0x29fe <__ctype_isfalse>
    27d4:	80 32       	cpi	r24, 0x20	; 32
    27d6:	19 f0       	breq	.+6      	; 0x27de <isspace+0xe>
    27d8:	89 50       	subi	r24, 0x09	; 9
    27da:	85 50       	subi	r24, 0x05	; 5
    27dc:	d0 f7       	brcc	.-12     	; 0x27d2 <isspace+0x2>
    27de:	08 95       	ret

000027e0 <strchr_P>:
    27e0:	fc 01       	movw	r30, r24
    27e2:	05 90       	lpm	r0, Z+
    27e4:	06 16       	cp	r0, r22
    27e6:	21 f0       	breq	.+8      	; 0x27f0 <strchr_P+0x10>
    27e8:	00 20       	and	r0, r0
    27ea:	d9 f7       	brne	.-10     	; 0x27e2 <strchr_P+0x2>
    27ec:	c0 01       	movw	r24, r0
    27ee:	08 95       	ret
    27f0:	31 97       	sbiw	r30, 0x01	; 1
    27f2:	cf 01       	movw	r24, r30
    27f4:	08 95       	ret

000027f6 <strnlen_P>:
    27f6:	fc 01       	movw	r30, r24
    27f8:	05 90       	lpm	r0, Z+
    27fa:	61 50       	subi	r22, 0x01	; 1
    27fc:	70 40       	sbci	r23, 0x00	; 0
    27fe:	01 10       	cpse	r0, r1
    2800:	d8 f7       	brcc	.-10     	; 0x27f8 <strnlen_P+0x2>
    2802:	80 95       	com	r24
    2804:	90 95       	com	r25
    2806:	8e 0f       	add	r24, r30
    2808:	9f 1f       	adc	r25, r31
    280a:	08 95       	ret

0000280c <memset>:
    280c:	dc 01       	movw	r26, r24
    280e:	01 c0       	rjmp	.+2      	; 0x2812 <memset+0x6>
    2810:	6d 93       	st	X+, r22
    2812:	41 50       	subi	r20, 0x01	; 1
    2814:	50 40       	sbci	r21, 0x00	; 0
    2816:	e0 f7       	brcc	.-8      	; 0x2810 <memset+0x4>
    2818:	08 95       	ret

0000281a <strnlen>:
    281a:	fc 01       	movw	r30, r24
    281c:	61 50       	subi	r22, 0x01	; 1
    281e:	70 40       	sbci	r23, 0x00	; 0
    2820:	01 90       	ld	r0, Z+
    2822:	01 10       	cpse	r0, r1
    2824:	d8 f7       	brcc	.-10     	; 0x281c <strnlen+0x2>
    2826:	80 95       	com	r24
    2828:	90 95       	com	r25
    282a:	8e 0f       	add	r24, r30
    282c:	9f 1f       	adc	r25, r31
    282e:	08 95       	ret

00002830 <fgetc>:
    2830:	cf 93       	push	r28
    2832:	df 93       	push	r29
    2834:	ec 01       	movw	r28, r24
    2836:	2b 81       	ldd	r18, Y+3	; 0x03
    2838:	20 ff       	sbrs	r18, 0
    283a:	33 c0       	rjmp	.+102    	; 0x28a2 <fgetc+0x72>
    283c:	26 ff       	sbrs	r18, 6
    283e:	0a c0       	rjmp	.+20     	; 0x2854 <fgetc+0x24>
    2840:	2f 7b       	andi	r18, 0xBF	; 191
    2842:	2b 83       	std	Y+3, r18	; 0x03
    2844:	8e 81       	ldd	r24, Y+6	; 0x06
    2846:	9f 81       	ldd	r25, Y+7	; 0x07
    2848:	01 96       	adiw	r24, 0x01	; 1
    284a:	9f 83       	std	Y+7, r25	; 0x07
    284c:	8e 83       	std	Y+6, r24	; 0x06
    284e:	8a 81       	ldd	r24, Y+2	; 0x02
    2850:	90 e0       	ldi	r25, 0x00	; 0
    2852:	29 c0       	rjmp	.+82     	; 0x28a6 <fgetc+0x76>
    2854:	22 ff       	sbrs	r18, 2
    2856:	0f c0       	rjmp	.+30     	; 0x2876 <fgetc+0x46>
    2858:	e8 81       	ld	r30, Y
    285a:	f9 81       	ldd	r31, Y+1	; 0x01
    285c:	80 81       	ld	r24, Z
    285e:	99 27       	eor	r25, r25
    2860:	87 fd       	sbrc	r24, 7
    2862:	90 95       	com	r25
    2864:	00 97       	sbiw	r24, 0x00	; 0
    2866:	19 f4       	brne	.+6      	; 0x286e <fgetc+0x3e>
    2868:	20 62       	ori	r18, 0x20	; 32
    286a:	2b 83       	std	Y+3, r18	; 0x03
    286c:	1a c0       	rjmp	.+52     	; 0x28a2 <fgetc+0x72>
    286e:	31 96       	adiw	r30, 0x01	; 1
    2870:	f9 83       	std	Y+1, r31	; 0x01
    2872:	e8 83       	st	Y, r30
    2874:	0e c0       	rjmp	.+28     	; 0x2892 <fgetc+0x62>
    2876:	ea 85       	ldd	r30, Y+10	; 0x0a
    2878:	fb 85       	ldd	r31, Y+11	; 0x0b
    287a:	09 95       	icall
    287c:	97 ff       	sbrs	r25, 7
    287e:	09 c0       	rjmp	.+18     	; 0x2892 <fgetc+0x62>
    2880:	2b 81       	ldd	r18, Y+3	; 0x03
    2882:	01 96       	adiw	r24, 0x01	; 1
    2884:	11 f4       	brne	.+4      	; 0x288a <fgetc+0x5a>
    2886:	80 e1       	ldi	r24, 0x10	; 16
    2888:	01 c0       	rjmp	.+2      	; 0x288c <fgetc+0x5c>
    288a:	80 e2       	ldi	r24, 0x20	; 32
    288c:	82 2b       	or	r24, r18
    288e:	8b 83       	std	Y+3, r24	; 0x03
    2890:	08 c0       	rjmp	.+16     	; 0x28a2 <fgetc+0x72>
    2892:	2e 81       	ldd	r18, Y+6	; 0x06
    2894:	3f 81       	ldd	r19, Y+7	; 0x07
    2896:	2f 5f       	subi	r18, 0xFF	; 255
    2898:	3f 4f       	sbci	r19, 0xFF	; 255
    289a:	3f 83       	std	Y+7, r19	; 0x07
    289c:	2e 83       	std	Y+6, r18	; 0x06
    289e:	99 27       	eor	r25, r25
    28a0:	02 c0       	rjmp	.+4      	; 0x28a6 <fgetc+0x76>
    28a2:	8f ef       	ldi	r24, 0xFF	; 255
    28a4:	9f ef       	ldi	r25, 0xFF	; 255
    28a6:	df 91       	pop	r29
    28a8:	cf 91       	pop	r28
    28aa:	08 95       	ret

000028ac <fputc>:
    28ac:	0f 93       	push	r16
    28ae:	1f 93       	push	r17
    28b0:	cf 93       	push	r28
    28b2:	df 93       	push	r29
    28b4:	18 2f       	mov	r17, r24
    28b6:	09 2f       	mov	r16, r25
    28b8:	eb 01       	movw	r28, r22
    28ba:	8b 81       	ldd	r24, Y+3	; 0x03
    28bc:	81 fd       	sbrc	r24, 1
    28be:	03 c0       	rjmp	.+6      	; 0x28c6 <fputc+0x1a>
    28c0:	8f ef       	ldi	r24, 0xFF	; 255
    28c2:	9f ef       	ldi	r25, 0xFF	; 255
    28c4:	20 c0       	rjmp	.+64     	; 0x2906 <fputc+0x5a>
    28c6:	82 ff       	sbrs	r24, 2
    28c8:	10 c0       	rjmp	.+32     	; 0x28ea <fputc+0x3e>
    28ca:	4e 81       	ldd	r20, Y+6	; 0x06
    28cc:	5f 81       	ldd	r21, Y+7	; 0x07
    28ce:	2c 81       	ldd	r18, Y+4	; 0x04
    28d0:	3d 81       	ldd	r19, Y+5	; 0x05
    28d2:	42 17       	cp	r20, r18
    28d4:	53 07       	cpc	r21, r19
    28d6:	7c f4       	brge	.+30     	; 0x28f6 <fputc+0x4a>
    28d8:	e8 81       	ld	r30, Y
    28da:	f9 81       	ldd	r31, Y+1	; 0x01
    28dc:	9f 01       	movw	r18, r30
    28de:	2f 5f       	subi	r18, 0xFF	; 255
    28e0:	3f 4f       	sbci	r19, 0xFF	; 255
    28e2:	39 83       	std	Y+1, r19	; 0x01
    28e4:	28 83       	st	Y, r18
    28e6:	10 83       	st	Z, r17
    28e8:	06 c0       	rjmp	.+12     	; 0x28f6 <fputc+0x4a>
    28ea:	e8 85       	ldd	r30, Y+8	; 0x08
    28ec:	f9 85       	ldd	r31, Y+9	; 0x09
    28ee:	81 2f       	mov	r24, r17
    28f0:	09 95       	icall
    28f2:	89 2b       	or	r24, r25
    28f4:	29 f7       	brne	.-54     	; 0x28c0 <fputc+0x14>
    28f6:	2e 81       	ldd	r18, Y+6	; 0x06
    28f8:	3f 81       	ldd	r19, Y+7	; 0x07
    28fa:	2f 5f       	subi	r18, 0xFF	; 255
    28fc:	3f 4f       	sbci	r19, 0xFF	; 255
    28fe:	3f 83       	std	Y+7, r19	; 0x07
    2900:	2e 83       	std	Y+6, r18	; 0x06
    2902:	81 2f       	mov	r24, r17
    2904:	90 2f       	mov	r25, r16
    2906:	df 91       	pop	r29
    2908:	cf 91       	pop	r28
    290a:	1f 91       	pop	r17
    290c:	0f 91       	pop	r16
    290e:	08 95       	ret

00002910 <ungetc>:
    2910:	fb 01       	movw	r30, r22
    2912:	23 81       	ldd	r18, Z+3	; 0x03
    2914:	20 ff       	sbrs	r18, 0
    2916:	12 c0       	rjmp	.+36     	; 0x293c <ungetc+0x2c>
    2918:	26 fd       	sbrc	r18, 6
    291a:	10 c0       	rjmp	.+32     	; 0x293c <ungetc+0x2c>
    291c:	8f 3f       	cpi	r24, 0xFF	; 255
    291e:	3f ef       	ldi	r19, 0xFF	; 255
    2920:	93 07       	cpc	r25, r19
    2922:	61 f0       	breq	.+24     	; 0x293c <ungetc+0x2c>
    2924:	82 83       	std	Z+2, r24	; 0x02
    2926:	2f 7d       	andi	r18, 0xDF	; 223
    2928:	20 64       	ori	r18, 0x40	; 64
    292a:	23 83       	std	Z+3, r18	; 0x03
    292c:	26 81       	ldd	r18, Z+6	; 0x06
    292e:	37 81       	ldd	r19, Z+7	; 0x07
    2930:	21 50       	subi	r18, 0x01	; 1
    2932:	31 09       	sbc	r19, r1
    2934:	37 83       	std	Z+7, r19	; 0x07
    2936:	26 83       	std	Z+6, r18	; 0x06
    2938:	99 27       	eor	r25, r25
    293a:	08 95       	ret
    293c:	8f ef       	ldi	r24, 0xFF	; 255
    293e:	9f ef       	ldi	r25, 0xFF	; 255
    2940:	08 95       	ret

00002942 <__ultoa_invert>:
    2942:	fa 01       	movw	r30, r20
    2944:	aa 27       	eor	r26, r26
    2946:	28 30       	cpi	r18, 0x08	; 8
    2948:	51 f1       	breq	.+84     	; 0x299e <__ultoa_invert+0x5c>
    294a:	20 31       	cpi	r18, 0x10	; 16
    294c:	81 f1       	breq	.+96     	; 0x29ae <__ultoa_invert+0x6c>
    294e:	e8 94       	clt
    2950:	6f 93       	push	r22
    2952:	6e 7f       	andi	r22, 0xFE	; 254
    2954:	6e 5f       	subi	r22, 0xFE	; 254
    2956:	7f 4f       	sbci	r23, 0xFF	; 255
    2958:	8f 4f       	sbci	r24, 0xFF	; 255
    295a:	9f 4f       	sbci	r25, 0xFF	; 255
    295c:	af 4f       	sbci	r26, 0xFF	; 255
    295e:	b1 e0       	ldi	r27, 0x01	; 1
    2960:	3e d0       	rcall	.+124    	; 0x29de <__ultoa_invert+0x9c>
    2962:	b4 e0       	ldi	r27, 0x04	; 4
    2964:	3c d0       	rcall	.+120    	; 0x29de <__ultoa_invert+0x9c>
    2966:	67 0f       	add	r22, r23
    2968:	78 1f       	adc	r23, r24
    296a:	89 1f       	adc	r24, r25
    296c:	9a 1f       	adc	r25, r26
    296e:	a1 1d       	adc	r26, r1
    2970:	68 0f       	add	r22, r24
    2972:	79 1f       	adc	r23, r25
    2974:	8a 1f       	adc	r24, r26
    2976:	91 1d       	adc	r25, r1
    2978:	a1 1d       	adc	r26, r1
    297a:	6a 0f       	add	r22, r26
    297c:	71 1d       	adc	r23, r1
    297e:	81 1d       	adc	r24, r1
    2980:	91 1d       	adc	r25, r1
    2982:	a1 1d       	adc	r26, r1
    2984:	20 d0       	rcall	.+64     	; 0x29c6 <__ultoa_invert+0x84>
    2986:	09 f4       	brne	.+2      	; 0x298a <__ultoa_invert+0x48>
    2988:	68 94       	set
    298a:	3f 91       	pop	r19
    298c:	2a e0       	ldi	r18, 0x0A	; 10
    298e:	26 9f       	mul	r18, r22
    2990:	11 24       	eor	r1, r1
    2992:	30 19       	sub	r19, r0
    2994:	30 5d       	subi	r19, 0xD0	; 208
    2996:	31 93       	st	Z+, r19
    2998:	de f6       	brtc	.-74     	; 0x2950 <__ultoa_invert+0xe>
    299a:	cf 01       	movw	r24, r30
    299c:	08 95       	ret
    299e:	46 2f       	mov	r20, r22
    29a0:	47 70       	andi	r20, 0x07	; 7
    29a2:	40 5d       	subi	r20, 0xD0	; 208
    29a4:	41 93       	st	Z+, r20
    29a6:	b3 e0       	ldi	r27, 0x03	; 3
    29a8:	0f d0       	rcall	.+30     	; 0x29c8 <__ultoa_invert+0x86>
    29aa:	c9 f7       	brne	.-14     	; 0x299e <__ultoa_invert+0x5c>
    29ac:	f6 cf       	rjmp	.-20     	; 0x299a <__ultoa_invert+0x58>
    29ae:	46 2f       	mov	r20, r22
    29b0:	4f 70       	andi	r20, 0x0F	; 15
    29b2:	40 5d       	subi	r20, 0xD0	; 208
    29b4:	4a 33       	cpi	r20, 0x3A	; 58
    29b6:	18 f0       	brcs	.+6      	; 0x29be <__ultoa_invert+0x7c>
    29b8:	49 5d       	subi	r20, 0xD9	; 217
    29ba:	31 fd       	sbrc	r19, 1
    29bc:	40 52       	subi	r20, 0x20	; 32
    29be:	41 93       	st	Z+, r20
    29c0:	02 d0       	rcall	.+4      	; 0x29c6 <__ultoa_invert+0x84>
    29c2:	a9 f7       	brne	.-22     	; 0x29ae <__ultoa_invert+0x6c>
    29c4:	ea cf       	rjmp	.-44     	; 0x299a <__ultoa_invert+0x58>
    29c6:	b4 e0       	ldi	r27, 0x04	; 4
    29c8:	a6 95       	lsr	r26
    29ca:	97 95       	ror	r25
    29cc:	87 95       	ror	r24
    29ce:	77 95       	ror	r23
    29d0:	67 95       	ror	r22
    29d2:	ba 95       	dec	r27
    29d4:	c9 f7       	brne	.-14     	; 0x29c8 <__ultoa_invert+0x86>
    29d6:	00 97       	sbiw	r24, 0x00	; 0
    29d8:	61 05       	cpc	r22, r1
    29da:	71 05       	cpc	r23, r1
    29dc:	08 95       	ret
    29de:	9b 01       	movw	r18, r22
    29e0:	ac 01       	movw	r20, r24
    29e2:	0a 2e       	mov	r0, r26
    29e4:	06 94       	lsr	r0
    29e6:	57 95       	ror	r21
    29e8:	47 95       	ror	r20
    29ea:	37 95       	ror	r19
    29ec:	27 95       	ror	r18
    29ee:	ba 95       	dec	r27
    29f0:	c9 f7       	brne	.-14     	; 0x29e4 <__ultoa_invert+0xa2>
    29f2:	62 0f       	add	r22, r18
    29f4:	73 1f       	adc	r23, r19
    29f6:	84 1f       	adc	r24, r20
    29f8:	95 1f       	adc	r25, r21
    29fa:	a0 1d       	adc	r26, r0
    29fc:	08 95       	ret

000029fe <__ctype_isfalse>:
    29fe:	99 27       	eor	r25, r25
    2a00:	88 27       	eor	r24, r24

00002a02 <__ctype_istrue>:
    2a02:	08 95       	ret

00002a04 <_exit>:
    2a04:	f8 94       	cli

00002a06 <__stop_program>:
    2a06:	ff cf       	rjmp	.-2      	; 0x2a06 <__stop_program>
